{"version":3,"file":"static/webpack/static/development/pages/article.js.dafd760268e5f54851de.hot-update.js","sources":["webpack:///./pages/article.js"],"sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport dynamic from 'next/dynamic'\nimport React, { Component } from 'react'\nimport JsxParser from 'react-jsx-parser'\nimport Alert from '@/components/Alert'\nimport ArticleChildren from '@/components/ArticleChildren'\nimport Editable from '@/components/Editable'\nimport Link from '@/components/Link'\nimport TabSet from '@/components/TabSet'\nimport TagBar from '@/components/TagBar'\nimport Toggle from '@/components/Toggle'\nimport Application from '@/contexts/Application'\nimport EditIcon from '@/icons/edit.svg'\nimport FavoriteOffIcon from '@/icons/favorite-off.svg'\nimport FavoriteOnIcon from '@/icons/favorite-on.svg'\nimport HtmlIcon from '@/icons/html.svg'\nimport NavigationIcon from '@/icons/Navigation'\nimport SecretOnIcon from '@/icons/private.svg'\nimport SecretOffIcon from '@/icons/public.svg'\nimport ReadIcon from '@/icons/read.svg'\nimport SettingsIcon from '@/icons/settings.svg'\nimport confirm from '@/utilities/confirm'\nimport pluck from '@/utilities/pluck'\nimport URI from '@/utilities/URI'\nimport './article.scss'\n\nlet HtmlEditor = () => <div />\nlet WysiwygEditor = () => <div />\n\nif (process.browser && window) {\n  WysiwygEditor = dynamic(() => import('@/components/WysiwygEditor'))\n  HtmlEditor = dynamic(() => import('@/components/HtmlEditor'))\n}\n\nconst STATE_FIELDS = [\n  'aliases',\n  'html',\n  'secret',\n  'slug',\n  'tags',\n  'title',\n]\n\nexport default class Article extends Component {\n  static contextType = Application\n  static defaultProps = {\n    childArticles: [],\n    html: '',\n    httpStatusCode: 200,\n    message: '',\n    title: '',\n  }\n  static getInitialProps = async ({ query, req }) => {\n    const headers = pluck(req && req.headers, 'cookie')\n    const result = await fetch(URI(req, `/api/article/${query.slug}`), { headers })\n    const json = await result.json()\n    return {\n      httpStatusCode: result.status,\n      ...json,\n    }\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (props.slug !== state.slug) {\n      const saved = pluck(props, STATE_FIELDS)\n      return {\n        activeTab: 'read',\n        ...saved,\n        saved,\n        title: props.title || new URLSearchParams(window.location.search).get('title') || '',\n      }\n    }\n\n    return state\n  }\n\n  state = {\n    activeTab: 'read',\n    ...pluck(this.props, STATE_FIELDS),\n    saved: this.props._id ? pluck(this.props, STATE_FIELDS) : {},\n    title: this.props.title || this.context.router.query.title,\n  }\n\n  componentDidMount() {\n    const { slug } = this.props\n    const { router } = this.context\n    if (router.query.slug !== slug) {\n      this.setState({ redirectedFrom: router.query.slug })\n      router.push(`/article?slug=${slug}`, `/article/${slug}`, { shallow: true })\n    }\n  }\n\n  get isDirty() {\n    const fromState = JSON.stringify(pluck(this.state, STATE_FIELDS))\n    const fromSaved = JSON.stringify(pluck(this.state.saved, STATE_FIELDS))\n\n    return fromState !== fromSaved\n  }\n  get isNavLink() {\n    const { campaign = {} } = this.context\n    if (!campaign.navigation || !campaign.navigation.length) return false\n    return Boolean(campaign.navigation.find(n => n.slug === this.props.slug))\n  }\n\n  handleAliasesChange = aliases => this.setState({ aliases })\n  handleDelete = async () => {\n    if (!await confirm('Are you sure you want to permanently delete this article?')) return\n    const response = await fetch(`/api/article/${this.props.slug}`, { method: 'DELETE' })\n    if (response.status === 204) {\n      this.context.router.push('/article/home')\n    }\n  }\n  handleHtmlChange = html => this.setState({ html })\n  handleSave = async () => {\n    const saved = await fetch(`/api/article/${this.props.slug}`, {\n      body: JSON.stringify(pluck(this.state, STATE_FIELDS)),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    }).then(r => r.json())\n    this.setState({ ...saved, saved })\n  }\n  handleTabClicked = tab => {\n    if (tab !== this.state.activeTab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  handleTagsChange = tags => this.setState({ tags })\n  handleTitleChange = title => this.setState({ title })\n  handleToggleFavorite = async () => {\n    const updated = await fetch(`/api/user/favorites/${this.props.slug}`, { method: 'POST' })\n      .then(r => r.json())\n    this.context.setUser(updated)\n  }\n  handleToggleNavigation = async () => {\n    const { slug, title } = this.props\n    const { campaign } = this.context\n    if (!campaign) { return }\n\n    let navigation = (campaign.navigation || [])\n    if (this.isNavLink) {\n      navigation = navigation.filter(n => n.slug !== slug)\n    } else {\n      navigation.push({ slug, title })\n    }\n\n    const result = await fetch(`/api/campaign/${this.context.campaign.domain}`, {\n      body: JSON.stringify({ navigation }),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    })\n    const json = await result.json()\n\n    if (result.status === 200) {\n      this.context.setCampaign(json)\n    }\n  }\n  handleToggleSecret = async () => {\n    const payload = { secret: !this.state.secret }\n    const response = await fetch(`/api/article/${this.props.slug}`, {\n      body: JSON.stringify(payload),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    })\n    const updated = pluck(await response.json(), 'secret')\n    if (response.status === 200) {\n      this.setState({ ...updated, saved: { ...this.state.saved, ...updated } })\n    }\n  }\n\n  renderReadOnlyContent = () => <>\n    <JsxParser components={{ a: Link }} jsx={this.state.html || this.props.html} />\n    <ArticleChildren articles={this.props.childArticles} />\n  </>\n  renderSettingsTab = () => <>\n    <fieldset>\n      <legend>Aliases</legend>\n      <TagBar\n        banned={[this.state.slug]}\n        className=\"aliases\"\n        onChange={this.handleAliasesChange}\n        tags={this.state.aliases}\n        inputSettings={{ placeholder: 'add alias' }}\n        readOnly={!this.props.isEditable}\n      />\n    </fieldset>\n    {this.props.isEditable && (\n      <fieldset className=\"danger\">\n        <legend className=\"danger\">Danger</legend>\n        <div className=\"row\">\n          <button className=\"danger\" onClick={this.handleDelete}>Delete</button>\n          <span>Warning: This cannot be undone.</span>\n        </div>\n      </fieldset>\n    )}\n  </>\n  render = () => {\n    const { activeTab, aliases, html, redirectedFrom, secret, tags, title } = this.state\n    const { httpStatusCode, isEditable, isOwner, message, slug } = this.props\n    const { favorites = [] } = this.context.user\n    const { campaign = {} } = this.context\n    const isFavorite = favorites.find(f => (\n      f.campaign.domain === campaign.domain\n      && f.slug === slug\n    ))\n\n    if (httpStatusCode !== 200) {\n      return (\n        <div className=\"article page\">\n          <Alert type=\"error\">{message}</Alert>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"article page\">\n        {message && <Alert>{message}</Alert>}\n        <div className=\"title-bar\">\n          <Editable\n            className=\"title\"\n            onChange={this.handleTitleChange}\n            placeholder=\"Article Name\"\n            readOnly={!isEditable}\n            value={title}\n          />\n          {redirectedFrom && (\n            <div className=\"redirected-from\">Redirected From: <b>{redirectedFrom}</b></div>\n          )}\n          {isOwner &&\n            <Toggle\n              className=\"secret\"\n              offIcon={SecretOffIcon}\n              onIcon={SecretOnIcon}\n              onToggle={this.handleToggleSecret}\n              value={secret}\n            />\n          }\n          {campaign.isEditor &&\n            <Toggle\n              className=\"in-navigation\" value={this.isNavLink}\n              offIcon={NavigationIcon} offProps={{ title: 'Not Added to Site Navigation' }}\n              onIcon={NavigationIcon} onProps={{ title: 'Added to Site Navigation' }}\n              onToggle={this.handleToggleNavigation}\n            />\n          }\n          <Toggle\n            className=\"favorite\"\n            offIcon={FavoriteOffIcon}\n            onIcon={FavoriteOnIcon}\n            onToggle={this.handleToggleFavorite}\n            value={isFavorite}\n          />\n        </div>\n        <TabSet\n          activeTabId={activeTab}\n          buttons={<>\n            {this.isDirty && <button className=\"safe\" onClick={this.handleSave}>Save</button>}\n          </>}\n          onTabClicked={this.handleTabClicked}\n          showTabs={isEditable}\n          tabs={[{\n            contents: this.renderReadOnlyContent(),\n            id: 'read',\n            tab: <ReadIcon />,\n          }, {\n            contents: <WysiwygEditor html={html} onChange={this.handleHtmlChange} />,\n            id: 'edit',\n            tab: <EditIcon />,\n          }, {\n            contents: <HtmlEditor value={html} onChange={this.handleHtmlChange} />,\n            id: 'html',\n            tab: <HtmlIcon />,\n          }, {\n            contents: this.renderSettingsTab(),\n            id: 'settings',\n            tab: <SettingsIcon />,\n          }].filter(Boolean)}\n        />\n        <TagBar\n          asLinks\n          banned={[slug, ...aliases]}\n          className=\"tags\"\n          onChange={this.handleTagsChange}\n          tags={tags}\n          readOnly={!isEditable}\n        />\n      </div>\n    )\n  }\n}\n"],"mappings":"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","sourceRoot":""}
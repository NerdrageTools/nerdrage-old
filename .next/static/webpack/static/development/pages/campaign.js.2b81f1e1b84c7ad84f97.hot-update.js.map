{"version":3,"file":"static/webpack/static/development/pages/campaign.js.2b81f1e1b84c7ad84f97.hot-update.js","sources":["webpack:///./components/Participants/Participants.js"],"sourcesContent":["import React, { Component } from 'react'\nimport EditableList from '@/components/EditableList'\nimport UserSearchBox from '@/components/SearchBox/UserSearchBox'\nimport NerdIcon from '@/icons/nerd.svg'\nimport RemoveIcon from '@/icons/remove.svg'\nimport compareBy from '@/utilities/compareBy'\nimport './Participants.scss'\n\nconst ORDER = {\n  owner: 1,\n  editor: 2,\n  player: 3,\n  removed: 4,\n}\n\nconst addParticipants = (map, users, addition) => {\n  users.forEach(user => {\n    map.set(user._id, {\n      ...(map.get(user._id) || user),\n      ...user,\n      ...addition,\n    })\n  })\n}\n\nexport default class Participants extends Component {\n  static defaultProps = {\n    className: '',\n    editors: [],\n    owners: [],\n    players: [],\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { editors, owners, players } = props\n    const { edits } = state\n\n    const map = new Map()\n    addParticipants(map, players, { level: 'player', order: ORDER.player })\n    addParticipants(map, editors, { level: 'editor', order: ORDER.editor })\n    addParticipants(map, owners, { level: 'owner', order: ORDER.owner })\n    addParticipants(map, edits)\n\n    const participants = Array.from(map.values()).sort(compareBy('order'))\n    return { ...state, participants }\n  }\n\n  state = {\n    edits: [],\n    participants: [],\n  }\n\n  handleAddUser = user => {\n    const { participants } = this.state\n    if (!participants.find(p => p._id === user._id)) {\n      const edits = [\n        ...this.state.edits,\n        { ...user, edit: 'added', level: 'player', order: ORDER.player },\n      ].sort(compareBy('order'))\n\n      this.setState({ edits })\n    }\n  }\n  handleSetPermission = (user, level) => {\n    const { participants } = this.state\n    let edits = [...this.state.edits]\n\n    if (edits.find(e => e._id === user._id)) {\n      edits = edits.filter(e => e._id !== user._id)\n    } else if (participants.find(p => p._id === user._id)) {\n      edits.push({ ...user, edit: 'updated', level, order: ORDER[level] })\n      edits.sort(compareBy('order'))\n    }\n\n    this.setState({ edits })\n  }\n  handleToggleRemoved = user => {\n    const { participants } = this.state\n    let edits = [...this.state.edits]\n\n    if (edits.find(e => e._id === user._id)) {\n      edits = edits.filter(e => e._id !== user._id)\n    } else if (participants.find(p => p._id === user._id)) {\n      edits.push({ ...user, edit: 'removed', level: 'removed', order: 4 })\n      edits.sort(compareBy('order'))\n    }\n\n    this.setState({ edits })\n  }\n\n  render = () => {\n    const { className } = this.props\n    const { participants } = this.state\n\n    return (\n      <div className={`participants ${className}`}>\n        <ul className=\"participant-list\">\n          {participants.map(user => (\n            <li className={`participant row ${user.edit || ''}`} key={user._id}>\n              <NerdIcon className=\"nerd icon\" />\n              <div className=\"display\">\n                <span className=\"name\">{user.name}</span>\n                <span className=\"username\">{user.username}</span>\n              </div>\n              {user.edit !== 'removed' && (\n                <EditableList\n                  className=\"role\"\n                  defaultValue={user.level}\n                  onChange={level => this.handleSetPermission(user, level)}\n                  options={['player', 'editor', 'owner']}\n                />\n              )}\n              <RemoveIcon\n                className=\"remove icon\"\n                onClick={() => this.handleToggleRemoved(user)}\n              />\n            </li>\n          ))}\n        </ul>\n        <UserSearchBox\n          className=\"add-user\"\n          onSelect={this.handleAddUser}\n        />\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAsfA;AAuBA;AACA;AAFA;AAMA;AACA;;;;;;AA7FA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;AApBA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AACA;;;;;A","sourceRoot":""}
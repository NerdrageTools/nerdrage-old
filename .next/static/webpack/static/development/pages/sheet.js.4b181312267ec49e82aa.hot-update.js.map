{"version":3,"file":"static/webpack/static/development/pages/sheet.js.4b181312267ec49e82aa.hot-update.js","sources":["webpack:///./pages/sheet.js"],"sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react'\nimport { CharacterModel, LayoutModel, Sheet as SfSheet } from 'sheetforge'\nimport Editable from '@/components/Editable'\nimport Application from '@/contexts/Application'\nimport defaultLayout from '@/data/defaultSheetLayout'\nimport confirm from '@/utilities/confirm'\nimport pluck from '@/utilities/pluck'\nimport URI from '@/utilities/URI'\nimport 'sheetforge/build/sheetforge.css'\nimport './sheet.scss'\n\nconst UPDATABLE_FIELDS = [\n  'data',\n  'layout',\n  'title',\n]\n\nexport default class Sheet extends Component {\n  static contextType = Application\n  static defaultProps = {\n    children: [],\n    data: {},\n    layout: defaultLayout,\n    title: 'Unnamed Character',\n  }\n\n  state = {\n    ...pluck(this.props, '_id', 'data', 'layout'),\n    saved: {\n      ...pluck(this.props, 'data', 'layout'),\n      title: this.props.title || this.context.router.query.title,\n    },\n    title: this.props.title || this.context.router.query.title,\n  }\n\n  static getInitialProps = async ({ query, req }) => {\n    const headers = pluck(req && req.headers, 'cookie')\n    const response = await fetch(URI(req, `/api/sheet/${query.slug}`), { headers })\n    const json = await response.json()\n    return { statusCode: response.status, ...json }\n  }\n\n  get isDirty() {\n    const fromCurrent = JSON.stringify(pluck(this.state, UPDATABLE_FIELDS))\n    const fromSaved = JSON.stringify(pluck(this.state.saved, UPDATABLE_FIELDS))\n\n    return fromCurrent !== fromSaved\n  }\n\n  handleChange = (data, layout) => {\n    this.setState({ data, layout })\n  }\n  handleDelete = async () => {\n    if (await confirm('Are you sure you want to permanently delete this sheet?')) {\n      const { slug } = this.context.router.query\n      const response = await fetch(`/api/sheet/${slug}`, { method: 'DELETE' })\n      if (response.status === 204) {\n        this.context.router.back()\n      }\n    }\n  }\n  handleSave = async () => {\n    const { slug } = this.context.router.query\n    const response = await fetch(`/api/sheet/${slug}`, {\n      body: JSON.stringify(pluck(this.state, UPDATABLE_FIELDS)),\n      headers: { 'Content-Type': 'application/json' },\n      method: 'POST',\n    })\n    const json = await response.json()\n    if (response.status === 200) {\n      return this.setState({\n        ...json,\n        saved: {\n          ...this.state.saved,\n          ...pluck(json, UPDATABLE_FIELDS),\n        },\n      })\n    }\n\n    return this.setState(json)\n  }\n  handleTitleChange = title => this.setState({ title })\n\n  render = () => {\n    const { data, layout, title } = this.state\n    const isEditable = this.state.isEditable !== undefined ? this.state.isEditable : this.props.isEditable\n    const isOwner = this.state.isOwner !== undefined ? this.state.isOwner : this.props.isOwner\n\n    return (\n      <div className=\"sheet page\">\n        <div className=\"title-bar\">\n          <Editable\n            className=\"title\"\n            onChange={this.handleTitleChange}\n            readOnly={!isEditable}\n            value={title}\n          />\n          {isEditable && this.isDirty && (\n            <button className=\"save safe\" onClick={this.handleSave}>Save</button>\n          )}\n          {isOwner && (\n            <button className=\"delete danger\" onClick={this.handleDelete}>Delete</button>\n          )}\n        </div>\n        <div className=\"sheet-container\">\n          <SfSheet\n            character={CharacterModel.create(data)}\n            layout={LayoutModel.create(layout)}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;;;;;;;;;;;;;;;;;;AAUA;AACA;AAEA;AAFA;AAIA;;;AAiBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAGA;AAAA;AACA;AAJA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAHA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAWA;AAFA;AACA;AAVA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AACA;;;;;;AAxEA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;AA9BA;AACA;AADA;AACA;AADA;AAGA;AACA;AACA;AACA;AAJA;AACA;AAHA;;;;;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;A","sourceRoot":""}
{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[11],{xPCX:function(t,e,n){\"use strict\";n.r(e),n.d(e,\"typecheck\",(function(){return Vt})),n.d(e,\"escapeJsonPath\",(function(){return pe})),n.d(e,\"unescapeJsonPath\",(function(){return fe})),n.d(e,\"joinJsonPath\",(function(){return le})),n.d(e,\"splitJsonPath\",(function(){return he})),n.d(e,\"decorate\",(function(){return mt})),n.d(e,\"addMiddleware\",(function(){return gt})),n.d(e,\"process\",(function(){return Lt})),n.d(e,\"isStateTreeNode\",(function(){return Et})),n.d(e,\"flow\",(function(){return ae})),n.d(e,\"castFlowReturn\",(function(){return se})),n.d(e,\"applyAction\",(function(){return ct})),n.d(e,\"onAction\",(function(){return ft})),n.d(e,\"recordActions\",(function(){return pt})),n.d(e,\"createActionTrackingMiddleware\",(function(){return st})),n.d(e,\"setLivelinessChecking\",(function(){return a})),n.d(e,\"getLivelinessChecking\",(function(){return s})),n.d(e,\"setLivelynessChecking\",(function(){return u})),n.d(e,\"getType\",(function(){return h})),n.d(e,\"getChildType\",(function(){return d})),n.d(e,\"onPatch\",(function(){return y})),n.d(e,\"onSnapshot\",(function(){return v})),n.d(e,\"applyPatch\",(function(){return b})),n.d(e,\"recordPatches\",(function(){return g})),n.d(e,\"protect\",(function(){return m})),n.d(e,\"unprotect\",(function(){return w})),n.d(e,\"isProtected\",(function(){return S})),n.d(e,\"applySnapshot\",(function(){return A})),n.d(e,\"getSnapshot\",(function(){return P})),n.d(e,\"hasParent\",(function(){return I})),n.d(e,\"getParent\",(function(){return O})),n.d(e,\"hasParentOfType\",(function(){return T})),n.d(e,\"getParentOfType\",(function(){return V})),n.d(e,\"getRoot\",(function(){return C})),n.d(e,\"getPath\",(function(){return j})),n.d(e,\"getPathParts\",(function(){return N})),n.d(e,\"isRoot\",(function(){return _})),n.d(e,\"resolvePath\",(function(){return E})),n.d(e,\"resolveIdentifier\",(function(){return D})),n.d(e,\"getIdentifier\",(function(){return R})),n.d(e,\"tryResolve\",(function(){return z})),n.d(e,\"getRelativePath\",(function(){return M})),n.d(e,\"clone\",(function(){return F})),n.d(e,\"detach\",(function(){return L})),n.d(e,\"destroy\",(function(){return H})),n.d(e,\"isAlive\",(function(){return U})),n.d(e,\"addDisposer\",(function(){return $})),n.d(e,\"getEnv\",(function(){return W})),n.d(e,\"walk\",(function(){return J})),n.d(e,\"getMembers\",(function(){return Z})),n.d(e,\"getPropertyMembers\",(function(){return Y})),n.d(e,\"cast\",(function(){return G})),n.d(e,\"castToSnapshot\",(function(){return B})),n.d(e,\"castToReferenceSnapshot\",(function(){return K})),n.d(e,\"isType\",(function(){return ot})),n.d(e,\"isArrayType\",(function(){return Ie})),n.d(e,\"isFrozenType\",(function(){return sn})),n.d(e,\"isIdentifierType\",(function(){return mn})),n.d(e,\"isLateType\",(function(){return rn})),n.d(e,\"isLiteralType\",(function(){return We})),n.d(e,\"isMapType\",(function(){return me})),n.d(e,\"isModelType\",(function(){return _e})),n.d(e,\"isOptionalType\",(function(){return qe})),n.d(e,\"isPrimitiveType\",(function(){return He})),n.d(e,\"isReferenceType\",(function(){return dn})),n.d(e,\"isRefinementType\",(function(){return Ye})),n.d(e,\"isUnionType\",(function(){return Be})),n.d(e,\"tryReference\",(function(){return x})),n.d(e,\"isValidReference\",(function(){return k})),n.d(e,\"types\",(function(){return An}));var r,i=n(\"cneo\"),o=\"warn\";function a(t){o=t}function s(){return o}function u(t){a(t)}!function(t){t.afterCreate=\"afterCreate\",t.afterAttach=\"afterAttach\",t.afterCreationFinalization=\"afterCreationFinalization\",t.beforeDetach=\"beforeDetach\",t.beforeDestroy=\"beforeDestroy\"}(r||(r={}));var c=function(t,e){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function p(t,e){function n(){this.constructor=t}c(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var f=function(){return(f=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function l(t,e,n,r){var i,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if(\"object\"===typeof Reflect&&\"function\"===typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(a=(o<3?i(a):o>3?i(e,n,a):i(e,n))||a);return o>3&&a&&Object.defineProperty(e,n,a),a}function h(t){return Dt(t).type}function d(t,e){return Dt(t).getChildType(e)}function y(t,e){return Dt(t).onPatch(e)}function v(t,e){return Dt(t).onSnapshot(e)}function b(t,e){Dt(t).applyPatches(Gt(e))}function g(t){var e=null;function n(){e||(e=y(t,(function(t,e){r.rawPatches.push([t,e])})))}var r={rawPatches:[],get patches(){return this.rawPatches.map((function(t){return t[0]}))},get inversePatches(){return this.rawPatches.map((function(t){t[0];return t[1]}))},stop:function(){e&&e(),e=null},resume:n,replay:function(e){b(e||t,r.patches)},undo:function(e){b(e||t,r.inversePatches.slice().reverse())}};return n(),r}function m(t){var e=Dt(t);e.isRoot||Wt(\"`protect` can only be invoked on root nodes\"),e.isProtectionEnabled=!0}function w(t){var e=Dt(t);e.isRoot||Wt(\"`unprotect` can only be invoked on root nodes\"),e.isProtectionEnabled=!1}function S(t){return Dt(t).isProtected}function A(t,e){return Dt(t).applySnapshot(e)}function P(t,e){void 0===e&&(e=!0);var n=Dt(t);return e?n.snapshot:qt(n.type.getSnapshot(n,!1))}function I(t,e){void 0===e&&(e=1);for(var n=Dt(t).parent;n;){if(0===--e)return!0;n=n.parent}return!1}function O(t,e){void 0===e&&(e=1);for(var n=e,r=Dt(t).parent;r;){if(0===--n)return r.storedValue;r=r.parent}return Wt(\"Failed to find the parent of \"+Dt(t)+\" at depth \"+e)}function T(t,e){for(var n=Dt(t).parent;n;){if(e.is(n.storedValue))return!0;n=n.parent}return!1}function V(t,e){for(var n=Dt(t).parent;n;){if(e.is(n.storedValue))return n.storedValue;n=n.parent}return Wt(\"Failed to find the parent of \"+Dt(t)+\" of a given type\")}function C(t){return Dt(t).root.storedValue}function j(t){return Dt(t).path}function N(t){return he(Dt(t).path)}function _(t){return Dt(t).isRoot}function E(t,e){var n=zt(Dt(t),e);return n?n.value:void 0}function D(t,e,n){var r=Dt(e).root.identifierCache.resolve(t,wn(n));return r?r.value:void 0}function R(t){return Dt(t).identifier}function x(t,e){void 0===e&&(e=!0);try{var n=t();return void 0===n||null===n?void 0:Et(n)?e?U(n)?n:void 0:n:Wt(\"The reference to be checked is not one of node, null or undefined\")}catch(r){if(r instanceof cn)return;throw r}}function k(t,e){void 0===e&&(e=!0);try{var n=t();return void 0!==n&&null!==n&&(Et(n)?!e||U(n):Wt(\"The reference to be checked is not one of node, null or undefined\"))}catch(r){if(r instanceof cn)return!1;throw r}}function z(t,e){var n=zt(Dt(t),e,!1);if(void 0!==n)try{return n.value}catch(r){return}}function M(t,e){return kt(Dt(t),Dt(e))}function F(t,e){void 0===e&&(e=!0);var n=Dt(t);return n.type.create(n.snapshot,!0===e?n.root.environment:!1===e?void 0:e)}function L(t){return Dt(t).detach(),t}function H(t){var e=Dt(t);e.isRoot?e.die():e.parent.removeChild(e.subpath)}function U(t){return Dt(t).observableIsAlive}function $(t,e){return Dt(t).addDisposer(e),e}function W(t){var e=Dt(t).root.environment;return e||Ut}function J(t,e){var n=Dt(t);n.getChildren().forEach((function(t){Et(t.storedValue)&&J(t.storedValue,e)})),e(n.storedValue)}function Y(t){var e;return{name:(e=Et(t)?h(t):t).name,properties:f({},e.properties)}}function Z(t){var e=Dt(t).type,n=f({},Y(e),{actions:[],volatile:[],views:[]});return Object.getOwnPropertyNames(t).forEach((function(e){if(!(e in n.properties)){var r=Object.getOwnPropertyDescriptor(t,e);r.get?Object(i.isComputedProp)(t,e)?n.views.push(e):n.volatile.push(e):!0===r.value._isMSTAction?n.actions.push(e):Object(i.isObservableProp)(t,e)?n.volatile.push(e):n.views.push(e)}})),n}function G(t){return t}function B(t){return t}function K(t){return t}var X,q=function(){function t(t,e,n,r){this._state=Ct.INITIALIZING,this.hookSubscribers=new ee,this.environment=void 0,this.environment=r,this.type=t,this.baseSetParent(e,n)}return Object.defineProperty(t.prototype,\"subpath\",{get:function(){return this._subpath},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"state\",{get:function(){return this._state},set:function(t){var e=this.isAlive;this._state=t;var n=this.isAlive;this.aliveAtom&&e!==n&&this.aliveAtom.reportChanged()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"parent\",{get:function(){return this._parent},enumerable:!0,configurable:!0}),t.prototype.baseSetParent=function(t,e){this._parent=t,this._subpath=e,this._escapedSubpath=void 0,this.pathAtom&&this.pathAtom.reportChanged()},Object.defineProperty(t.prototype,\"path\",{get:function(){return this.pathAtom||(this.pathAtom=Object(i.createAtom)(\"path\")),this.pathAtom.reportObserved(),this.parent?(void 0===this._escapedSubpath&&(this._escapedSubpath=this._subpath?pe(this._subpath):\"\"),this.parent.path+\"/\"+this._escapedSubpath):\"\"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"isRoot\",{get:function(){return null===this.parent},enumerable:!0,configurable:!0}),t.prototype.fireInternalHook=function(t){this.hookSubscribers.emit(t,this,t)},Object.defineProperty(t.prototype,\"isAlive\",{get:function(){return this.state!==Ct.DEAD},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"observableIsAlive\",{get:function(){return this.aliveAtom||(this.aliveAtom=Object(i.createAtom)(\"alive\")),this.aliveAtom.reportObserved(),this.isAlive},enumerable:!0,configurable:!0}),t.prototype.baseFinalizeCreation=function(t){if(this.state===Ct.CREATED){if(this.parent){if(this.parent.state!==Ct.FINALIZED)return;this.fireHook(r.afterAttach)}this.state=Ct.FINALIZED,t&&t()}},t.prototype.baseFinalizeDeath=function(){this.hookSubscribers.clearAll(),this.baseSetParent(null,\"\"),this.state=Ct.DEAD},t.prototype.baseAboutToDie=function(){this.fireHook(r.beforeDestroy)},t}(),Q=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;try{a.storedValue=e.createNewInstance(a,{},o)}catch(s){throw a.state=Ct.DEAD,s}return a.state=Ct.CREATED,a.finalizeCreation(),a}return p(e,t),Object.defineProperty(e.prototype,\"root\",{get:function(){return this.parent?this.parent.root:Wt(\"This scalar node is not part of a tree\")},enumerable:!0,configurable:!0}),e.prototype.setParent=function(t,e){if(void 0===e&&(e=null),this.parent!==t||this.subpath!==e)if(this.parent&&!t)this.die();else{var n=null===e?\"\":e;t&&t!==this.parent?Wt(\"assertion failed: scalar nodes cannot change their parent\"):this.subpath!==n&&this.baseSetParent(this.parent,n)}},Object.defineProperty(e.prototype,\"value\",{get:function(){return this.type.getValue(this)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"snapshot\",{get:function(){return qt(this.getSnapshot())},enumerable:!0,configurable:!0}),e.prototype.getSnapshot=function(){return this.type.getSnapshot(this)},e.prototype.toString=function(){return this.type.name+\"@\"+(this.path||\"<root>\")+(this.isAlive?\"\":\"[dead]\")},e.prototype.die=function(){this.state!==Ct.DETACHING&&(this.aboutToDie(),this.finalizeDeath())},e.prototype.finalizeCreation=function(){this.baseFinalizeCreation()},e.prototype.aboutToDie=function(){this.baseAboutToDie()},e.prototype.finalizeDeath=function(){this.baseFinalizeDeath()},e.prototype.fireHook=function(t){this.fireInternalHook(t)},l([i.action],e.prototype,\"die\",null),e}(q),tt=1,et={onError:function(t){throw t}},nt=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;if(a.nodeId=++tt,a.isProtectionEnabled=!0,a.middlewares=null,a._autoUnbox=!0,a._isRunningAction=!1,a._hasSnapshotReaction=!1,a._internalEvents=new ee,a._observableInstanceState=0,a._cachedInitialSnapshot=null,a.unbox=function(t){return t&&a.assertAlive(),t&&a._autoUnbox?t.value:t},a._initialSnapshot=qt(o),a.identifierAttribute=e.identifierAttribute,n||(a.identifierCache=new Nt),a._childNodes=e.initializeChildNodes(a,a._initialSnapshot),a.identifier=null,a.unnormalizedIdentifier=null,a.identifierAttribute&&a._initialSnapshot){var s=a._initialSnapshot[a.identifierAttribute];if(void 0===s){var u=a._childNodes[a.identifierAttribute];u&&(s=u.value)}\"string\"!==typeof s&&\"number\"!==typeof s&&Wt(\"Instance identifier '\"+a.identifierAttribute+\"' for type '\"+a.type.name+\"' must be a string or a number\"),a.identifier=wn(s),a.unnormalizedIdentifier=s}return n?n.root.identifierCache.addNodeToCache(a):a.identifierCache.addNodeToCache(a),a}return p(e,t),e.prototype.applyPatches=function(t){this.createObservableInstanceIfNeeded(),this._applyPatches(t)},e.prototype.applySnapshot=function(t){this.createObservableInstanceIfNeeded(),this._applySnapshot(t)},e.prototype.createObservableInstanceIfNeeded=function(){if(0===this._observableInstanceState){this._observableInstanceState=1;for(var t=[],e=this.parent;e&&0===e._observableInstanceState;)t.unshift(e),e=e.parent;for(var n=0,o=t;n<o.length;n++){o[n].createObservableInstanceIfNeeded()}var a,s,u=this.type;try{this.storedValue=u.createNewInstance(this,this._childNodes,this._initialSnapshot),this.preboot(),this._isRunningAction=!0,u.finalizeNewInstance(this,this.storedValue)}catch(c){throw this.state=Ct.DEAD,c}finally{this._isRunningAction=!1}this._observableInstanceState=2,a=this,s=\"snapshot\",Object(i.getAtom)(a,s).trackAndCompute(),this.isRoot&&this._addSnapshotReaction(),this._childNodes=Ut,this.state=Ct.CREATED,this.fireHook(r.afterCreate),this.finalizeCreation()}},Object.defineProperty(e.prototype,\"root\",{get:function(){var t=this.parent;return t?t.root:this},enumerable:!0,configurable:!0}),e.prototype.setParent=function(t,e){if(void 0===e&&(e=null),this.parent!==t||this.subpath!==e)if(this.parent&&!t)this.die();else{var n=null===e?\"\":e;t&&t!==this.parent?(t.root.identifierCache.mergeCache(this),this.baseSetParent(t,n),this.fireHook(r.afterAttach)):this.subpath!==n&&this.baseSetParent(this.parent,n)}},e.prototype.fireHook=function(t){var e=this;this.fireInternalHook(t);var n=this.storedValue&&\"object\"===typeof this.storedValue&&this.storedValue[t];\"function\"===typeof n&&(i._allowStateChangesInsideComputed?Object(i._allowStateChangesInsideComputed)((function(){n.apply(e.storedValue)})):n.apply(this.storedValue))},Object.defineProperty(e.prototype,\"value\",{get:function(){if(this.createObservableInstanceIfNeeded(),this.isAlive)return this.type.getValue(this)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"snapshot\",{get:function(){return qt(this.getSnapshot())},enumerable:!0,configurable:!0}),e.prototype.getSnapshot=function(){return this.isAlive?2===this._observableInstanceState?this._getActualSnapshot():this._getInitialSnapshot():this._snapshotUponDeath},e.prototype._getActualSnapshot=function(){return this.type.getSnapshot(this)},e.prototype._getInitialSnapshot=function(){if(!this._initialSnapshot)return this._initialSnapshot;if(this._cachedInitialSnapshot)return this._cachedInitialSnapshot;var t=this.type,e=this._childNodes,n=this._initialSnapshot;return this._cachedInitialSnapshot=t.processInitialSnapshot(e,n),this._cachedInitialSnapshot},e.prototype.isRunningAction=function(){return!!this._isRunningAction||!this.isRoot&&this.parent.isRunningAction()},e.prototype.assertAlive=function(){if(!this.isAlive){var t=\"You are trying to read or write to an object that is no longer part of a state tree. (Object type was '\"+this.type.name+\"'). Either detach nodes first, or don't use objects after removing / replacing them in the tree.\";switch(s()){case\"error\":return Wt(t);case\"warn\":oe(t)}}},e.prototype.getChildNode=function(t){this.assertAlive(),this._autoUnbox=!1;try{return 2===this._observableInstanceState?this.type.getChildNode(this,t):this._childNodes[t]}finally{this._autoUnbox=!0}},e.prototype.getChildren=function(){this.assertAlive(),this._autoUnbox=!1;try{return 2===this._observableInstanceState?this.type.getChildren(this):Ft(this._childNodes)}finally{this._autoUnbox=!0}},e.prototype.getChildType=function(t){return this.type.getChildType(t)},Object.defineProperty(e.prototype,\"isProtected\",{get:function(){return this.root.isProtectionEnabled},enumerable:!0,configurable:!0}),e.prototype.assertWritable=function(){this.assertAlive(),!this.isRunningAction()&&this.isProtected&&Wt(\"Cannot modify '\"+this+\"', the object is protected and can only be modified by using an action.\")},e.prototype.removeChild=function(t){this.type.removeChild(this,t)},e.prototype.toString=function(){var t=this.identifier?\"(id: \"+this.identifier+\")\":\"\";return this.type.name+\"@\"+(this.path||\"<root>\")+t+(this.isAlive?\"\":\"[dead]\")},e.prototype.finalizeCreation=function(){var t=this;this.baseFinalizeCreation((function(){for(var e=0,n=t.getChildren();e<n.length;e++){n[e].finalizeCreation()}t.fireInternalHook(r.afterCreationFinalization)}))},e.prototype.detach=function(){this.isAlive||Wt(\"Error while detaching, node is not alive.\"),this.isRoot||(this.fireHook(r.beforeDetach),this.state=Ct.DETACHING,this.environment=this.root.environment,this.identifierCache=this.root.identifierCache.splitCache(this),this.parent.removeChild(this.subpath),this.baseSetParent(null,\"\"),this.state=Ct.FINALIZED)},e.prototype.preboot=function(){var t=this;this._applyPatches=bt(this.storedValue,\"@APPLY_PATCHES\",(function(e){e.forEach((function(e){var n=he(e.path);Mt(t,n.slice(0,-1)).applyPatchLocally(n[n.length-1],e)}))})),this._applySnapshot=bt(this.storedValue,\"@APPLY_SNAPSHOT\",(function(e){if(e!==t.snapshot)return t.type.applySnapshot(t,e)})),Qt(this.storedValue,\"$treenode\",this),Qt(this.storedValue,\"toJSON\",Rt)},e.prototype.die=function(){this.state!==Ct.DETACHING&&(2===this._observableInstanceState?(this.aboutToDie(),this.finalizeDeath()):this.unregisterIdentifiers())},e.prototype.aboutToDie=function(){this.getChildren().forEach((function(t){t.aboutToDie()})),this.baseAboutToDie(),this._internalEvents.emit(\"dispose\"),this._internalEvents.clear(\"dispose\")},e.prototype.unregisterIdentifiers=function(){var t=this;Object.keys(this._childNodes).forEach((function(n){var r=t._childNodes[n];r instanceof e&&r.unregisterIdentifiers()})),this.root.identifierCache.notifyDied(this)},e.prototype.finalizeDeath=function(){this.getChildren().forEach((function(t){t.finalizeDeath()})),this.root.identifierCache.notifyDied(this);var t=this.snapshot;this._snapshotUponDeath=t,this._internalEvents.clearAll(),this.baseFinalizeDeath()},e.prototype.onSnapshot=function(t){return this._addSnapshotReaction(),this._internalEvents.register(\"snapshot\",t)},e.prototype.emitSnapshot=function(t){this._internalEvents.emit(\"snapshot\",t)},e.prototype.onPatch=function(t){return this._internalEvents.register(\"patch\",t)},e.prototype.emitPatch=function(t,e){var n=this._internalEvents;if(n.hasSubscribers(\"patch\")){var r=function(t){\"oldValue\"in t||Wt(\"Patches without `oldValue` field cannot be inversed\");return[ue(t),ce(t)]}(function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var r=0;r<e.length;r++){var i=e[r];for(var o in i)t[o]=i[o]}return t}({},t,{path:e.path.substr(this.path.length)+\"/\"+t.path})),i=r[0],o=r[1];n.emit(\"patch\",i,o)}this.parent&&this.parent.emitPatch(t,e)},e.prototype.hasDisposer=function(t){return this._internalEvents.has(\"dispose\",t)},e.prototype.addDisposer=function(t){this.hasDisposer(t)?Wt(\"cannot add a disposer when it is already registered for execution\"):this._internalEvents.register(\"dispose\",t,!0)},e.prototype.removeDisposer=function(t){if(!this._internalEvents.has(\"dispose\",t))return Wt(\"cannot remove a disposer which was never registered for execution\");this._internalEvents.unregister(\"dispose\",t)},e.prototype.removeMiddleware=function(t){this.middlewares&&(this.middlewares=this.middlewares.filter((function(e){return e.handler!==t})))},e.prototype.addMiddleWare=function(t,e){var n=this;return void 0===e&&(e=!0),this.middlewares?this.middlewares.push({handler:t,includeHooks:e}):this.middlewares=[{handler:t,includeHooks:e}],function(){n.removeMiddleware(t)}},e.prototype.applyPatchLocally=function(t,e){this.assertWritable(),this.createObservableInstanceIfNeeded(),this.type.applyPatchLocally(this,t,e)},e.prototype._addSnapshotReaction=function(){var t=this;if(!this._hasSnapshotReaction){var e=Object(i.reaction)((function(){return t.snapshot}),(function(e){return t.emitSnapshot(e)}),et);this.addDisposer(e),this._hasSnapshotReaction=!0}},l([i.action],e.prototype,\"createObservableInstanceIfNeeded\",null),l([i.computed],e.prototype,\"snapshot\",null),l([i.action],e.prototype,\"detach\",null),l([i.action],e.prototype,\"die\",null),e}(q);!function(t){t[t.String=1]=\"String\",t[t.Number=2]=\"Number\",t[t.Boolean=4]=\"Boolean\",t[t.Date=8]=\"Date\",t[t.Literal=16]=\"Literal\",t[t.Array=32]=\"Array\",t[t.Map=64]=\"Map\",t[t.Object=128]=\"Object\",t[t.Frozen=256]=\"Frozen\",t[t.Optional=512]=\"Optional\",t[t.Reference=1024]=\"Reference\",t[t.Identifier=2048]=\"Identifier\",t[t.Late=4096]=\"Late\",t[t.Refinement=8192]=\"Refinement\",t[t.Union=16384]=\"Union\",t[t.Null=32768]=\"Null\",t[t.Undefined=65536]=\"Undefined\",t[t.Integer=131072]=\"Integer\"}(X||(X={}));var rt=function(){function t(t){this.isType=!0,this.name=t}return t.prototype.create=function(t,e){return void 0===t&&(t=this.getDefaultSnapshot()),Tt(this,t),this.instantiate(null,\"\",e,t).value},t.prototype.initializeChildNodes=function(t,e){return Ut},t.prototype.createNewInstance=function(t,e,n){return n},t.prototype.finalizeNewInstance=function(t,e){},t.prototype.processInitialSnapshot=function(t,e){return e},t.prototype.isAssignableFrom=function(t){return t===this},t.prototype.validate=function(t,e){return Et(t)?h(t)===this||this.isAssignableFrom(h(t))?Pt():It(e,t):this.isValidSnapshot(t,e)},t.prototype.is=function(t){return 0===this.validate(t,[{path:\"\",type:this}]).length},t.prototype.reconcile=function(t,e){if(t.snapshot===e)return t;if(Et(e)&&Dt(e)===t)return t;if(t.type===this&&Kt(e)&&!Et(e)&&(!t.identifierAttribute||t.identifier===wn(e[t.identifierAttribute])))return t.applySnapshot(e),t;var n=t.parent,r=t.subpath;if(t.die(),Et(e)&&this.isAssignableFrom(h(e))){var i=Dt(e);return i.setParent(n,r),i}return this.instantiate(n,r,t.environment,e)},Object.defineProperty(t.prototype,\"Type\",{get:function(){return Wt(\"Factory.Type should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.Type`\")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"SnapshotType\",{get:function(){return Wt(\"Factory.SnapshotType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.SnapshotType`\")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"CreationType\",{get:function(){return Wt(\"Factory.CreationType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.CreationType`\")},enumerable:!0,configurable:!0}),l([i.action],t.prototype,\"create\",null),t}(),it=function(t){function e(e){return t.call(this,e)||this}return p(e,t),e.prototype.getValue=function(t){return t.storedValue},e.prototype.getSnapshot=function(t){return t.storedValue},e.prototype.getDefaultSnapshot=function(){},e.prototype.applySnapshot=function(t,e){Wt(\"Immutable types do not support applying snapshots\")},e.prototype.applyPatchLocally=function(t,e,n){Wt(\"Immutable types do not support applying patches\")},e.prototype.getChildren=function(t){return Ht},e.prototype.getChildNode=function(t,e){return Wt(\"No child '\"+e+\"' available in type: \"+this.name)},e.prototype.getChildType=function(t){return Wt(\"No child '\"+t+\"' available in type: \"+this.name)},e.prototype.reconcile=function(t,e){if(t.type===this&&t.storedValue===e)return t;var n=this.instantiate(t.parent,t.subpath,t.environment,e);return t.die(),n},e.prototype.removeChild=function(t,e){return Wt(\"No child '\"+e+\"' available in type: \"+this.name)},e}(rt);function ot(t){return\"object\"===typeof t&&t&&!0===t.isType}var at=new Map;function st(t){return function(e,n,r){switch(e.type){case\"action\":if(t.filter&&!0!==t.filter(e))return n(e);var i=t.onStart(e);t.onResume(e,i),at.set(e.id,{call:e,context:i,async:!1});try{var o=n(e);return t.onSuspend(e,i),!1===at.get(e.id).async&&(at.delete(e.id),t.onSuccess(e,i,o)),o}catch(s){throw at.delete(e.id),t.onFail(e,i,s),s}case\"flow_spawn\":return(a=at.get(e.rootId)).async=!0,n(e);case\"flow_resume\":case\"flow_resume_error\":var a=at.get(e.rootId);t.onResume(e,a.context);try{return n(e)}finally{t.onSuspend(e,a.context)}case\"flow_throw\":a=at.get(e.rootId);return at.delete(e.rootId),t.onFail(e,a.context,e.args[0]),n(e);case\"flow_return\":a=at.get(e.rootId);return at.delete(e.rootId),t.onSuccess(e,a.context,e.args[0]),n(e)}}}function ut(t){return{$MST_UNSERIALIZABLE:!0,type:t}}function ct(t,e){Object(i.runInAction)((function(){Gt(e).forEach((function(e){return function(t,e){var n=z(t,e.path||\"\");if(!n)return Wt(\"Invalid action path: \"+(e.path||\"\"));var r=Dt(n);if(\"@APPLY_PATCHES\"===e.name)return b.call(null,n,e.args[0]);if(\"@APPLY_SNAPSHOT\"===e.name)return A.call(null,n,e.args[0]);\"function\"!==typeof n[e.name]&&Wt(\"Action '\"+e.name+\"' does not exist in '\"+r.path+\"'\");return n[e.name].apply(n,e.args?e.args.map((function(t){return(e=t)&&\"object\"===typeof e&&\"$MST_DATE\"in e?new Date(e.$MST_DATE):e;var e})):[])}(t,e)}))}))}function pt(t){var e={actions:[],stop:function(){return n()},replay:function(t){ct(t,e.actions)}},n=ft(t,e.actions.push.bind(e.actions));return e}function ft(t,e,n){return void 0===n&&(n=!1),gt(t,(function(r,i){if(\"action\"===r.type&&r.id===r.rootId){var o=Dt(r.context),a={name:r.name,path:kt(Dt(t),o),args:r.args.map((function(t,e){return function(t,e,n,r){if(r instanceof Date)return{$MST_DATE:r.getTime()};if(Xt(r))return r;if(Et(r))return ut(\"[MSTNode: \"+h(r).name+\"]\");if(\"function\"===typeof r)return ut(\"[function]\");if(\"object\"===typeof r&&!Bt(r)&&!Zt(r))return ut(\"[object \"+(r&&r.constructor&&r.constructor.name||\"Complex Object\")+\"]\");try{return JSON.stringify(r),r}catch(i){return ut(\"\"+i)}}(0,r.name,0,t)}))};if(n){var s=i(r);return e(a),s}return e(a),i(r)}return i(r)}))}var lt=1,ht=null;function dt(){return lt++}function yt(t,e){var n=Dt(t.context),o=n._isRunningAction,a=ht;\"action\"===t.type&&n.assertAlive(),n._isRunningAction=!0,ht=t;try{return function(t,e,n){var o=function(t,e,n){var r=n.$mst_middleware||Ht,i=t;for(;i;)i.middlewares&&(r=r.concat(i.middlewares)),i=i.parent;return r}(t,0,n);if(!o.length)return Object(i.action)(n).apply(null,e.args);var a=0,s=null;function u(t){var e=o[a++],c=e&&e.handler;function p(t,e){!0,s=e?e(u(t)||s):u(t)}function f(t){!0,s=t}var l=function(){return c(t,p,f),s};return c&&e.includeHooks?l():c&&!e.includeHooks?r[t.name]?u(t):l():Object(i.action)(n).apply(null,t.args)}return u(e)}(n,t,e)}finally{ht=a,n._isRunningAction=o}}function vt(){return ht||Wt(\"Not running an action!\")}function bt(t,e,n){var r=function(){var r=dt();return yt({type:\"action\",name:e,id:r,args:ne(arguments),context:t,tree:C(t),rootId:ht?ht.rootId:r,parentId:ht?ht.id:0,allParentIds:ht?ht.allParentIds.concat([ht.id]):[]},n)};return r._isMSTAction=!0,r}function gt(t,e,n){return void 0===n&&(n=!0),Dt(t).addMiddleWare(e,n)}function mt(t,e){var n={handler:t,includeHooks:!0};return e.$mst_middleware&&e.$mst_middleware.push(n),e.$mst_middleware=[n],e}function wt(t){return\"function\"===typeof t?\"<function\"+(t.name?\" \"+t.name:\"\")+\">\":Et(t)?\"<\"+t+\">\":\"`\"+function(t){try{return JSON.stringify(t)}catch(e){return\"<Unserializable: \"+e+\">\"}}(t)+\"`\"}function St(t){var e=t.value,n=t.context[t.context.length-1].type,r=t.context.map((function(t){return t.path})).filter((function(t){return t.length>0})).join(\"/\"),i=r.length>0?'at path \"/'+r+'\" ':\"\",o=Et(e)?\"value of type \"+Dt(e).type.name+\":\":Xt(e)?\"value\":\"snapshot\",a=n&&Et(e)&&n.is(Dt(e).snapshot);return\"\"+i+o+\" \"+wt(e)+\" is not assignable \"+(n?\"to type: `\"+n.name+\"`\":\"\")+(t.message?\" (\"+t.message+\")\":\"\")+(n?He(n)||Xt(e)?\".\":\", expected an instance of `\"+n.name+\"` or a snapshot like `\"+n.describe()+\"` instead.\"+(a?\" (Note that a snapshot of the provided value is compatible with the targeted type)\":\"\"):\".\")}function At(t,e,n){return t.concat([{path:e,type:n}])}function Pt(){return Ht}function It(t,e,n){return[{context:t,value:e,message:n}]}function Ot(t){return t.reduce((function(t,e){return t.concat(e)}),[])}function Tt(t,e){}function Vt(t,e){var n,r=t.validate(e,[{path:\"\",type:t}]);r.length>0&&Wt(\"Error while converting \"+(((n=wt(e)).length<280?n:n.substring(0,272)+\"......\"+n.substring(n.length-8))+\" to `\")+t.name+\"`:\\n\\n    \"+r.map(St).join(\"\\n    \"))}var Ct,jt=0,Nt=function(){function t(){this.cacheId=jt++,this.cache=i.observable.map(),this.lastCacheModificationPerId=i.observable.map()}return t.prototype.updateLastCacheModificationPerId=function(t){var e=this.lastCacheModificationPerId.get(t);this.lastCacheModificationPerId.set(t,void 0===e?1:e+1)},t.prototype.getLastCacheModificationPerId=function(t){var e=this.lastCacheModificationPerId.get(t)||0;return this.cacheId+\"-\"+e},t.prototype.addNodeToCache=function(t,e){if(void 0===e&&(e=!0),t.identifierAttribute){var n=t.identifier;this.cache.has(n)||this.cache.set(n,i.observable.array([],$t));var r=this.cache.get(n);-1!==r.indexOf(t)&&Wt(\"Already registered\"),r.push(t),e&&this.updateLastCacheModificationPerId(n)}},t.prototype.mergeCache=function(t){var e=this;Object(i.values)(t.identifierCache.cache).forEach((function(t){return t.forEach((function(t){e.addNodeToCache(t)}))}))},t.prototype.notifyDied=function(t){if(t.identifierAttribute){var e=t.identifier,n=this.cache.get(e);n&&(n.remove(t),n.length||this.cache.delete(e),this.updateLastCacheModificationPerId(t.identifier))}},t.prototype.splitCache=function(e){var n=this,r=new t,o=e.path;return Object(i.entries)(this.cache).forEach((function(t){for(var e=t[0],i=t[1],a=!1,s=i.length-1;s>=0;s--)0===i[s].path.indexOf(o)&&(r.addNodeToCache(i[s],!1),i.splice(s,1),a=!0);a&&n.updateLastCacheModificationPerId(e)})),r},t.prototype.has=function(t,e){var n=this.cache.get(e);return!!n&&n.some((function(e){return t.isAssignableFrom(e.type)}))},t.prototype.resolve=function(t,e){var n=this.cache.get(e);if(!n)return null;var r=n.filter((function(e){return t.isAssignableFrom(e.type)}));switch(r.length){case 0:return null;case 1:return r[0];default:return Wt(\"Cannot resolve a reference to type '\"+t.name+\"' with id: '\"+e+\"' unambigously, there are multiple candidates: \"+r.map((function(t){return t.path})).join(\", \"))}},t}();function _t(t,e,n,r,i){var o,a=(o=i)&&o.$treenode||null;if(a){if(a.isRoot)return a.setParent(e,n),a;Wt(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\"+(e?e.path:\"\")+\"/\"+n+\"', but it lives already at '\"+a.path+\"'\")}return new(t.shouldAttachNode?nt:Q)(t,e,n,r,i)}function Et(t){return!(!t||!t.$treenode)}function Dt(t){return Et(t)?t.$treenode:Wt(\"Value \"+t+\" is no MST Node\")}function Rt(){return Dt(this).snapshot}!function(t){t[t.INITIALIZING=0]=\"INITIALIZING\",t[t.CREATED=1]=\"CREATED\",t[t.FINALIZED=2]=\"FINALIZED\",t[t.DETACHING=3]=\"DETACHING\",t[t.DEAD=4]=\"DEAD\"}(Ct||(Ct={}));var xt=function(t){return\"..\"};function kt(t,e){if(t.root!==e.root)return Wt(\"Cannot calculate relative path: objects '\"+t+\"' and '\"+e+\"' are not part of the same object tree\");for(var n=he(t.path),r=he(e.path),i=0;i<n.length&&n[i]===r[i];i++);return n.slice(i).map(xt).join(\"/\")+le(r.slice(i))}function zt(t,e,n){return void 0===n&&(n=!0),Mt(t,he(e),n)}function Mt(t,e,n){void 0===n&&(n=!0);for(var r=t,i=0;i<e.length;i++){var o=e[i];if(\"..\"===o){if(r=r.parent)continue}else{if(\".\"===o)continue;if(r){if(r instanceof Q)try{var a=r.value;Et(a)&&(r=Dt(a))}catch(s){if(!n)return;throw s}if(r instanceof nt)if(r.getChildType(o)&&(r=r.getChildNode(o)))continue}}return n?Wt(\"Could not resolve '\"+o+\"' in path '\"+(le(e.slice(0,i))||\"/\")+\"' while resolving '\"+le(e)+\"'\"):void 0}return r}function Ft(t){if(!t)return Ht;var e=Object.keys(t);if(!e.length)return Ht;var n=new Array(e.length);return e.forEach((function(e,r){n[r]=t[e]})),n}function Lt(t){return ie(\"process\",\"`process()` has been renamed to `flow()`. See https://github.com/mobxjs/mobx-state-tree/issues/399 for more information. Note that the middleware event types starting with `process` now start with `flow`.\"),ae(t)}var Ht=Object.freeze([]),Ut=Object.freeze({}),$t=\"string\"===typeof i.$mobx?{deep:!1}:{deep:!1,proxy:!1};function Wt(t){throw void 0===t&&(t=\"Illegal state\"),new Error(\"[mobx-state-tree] \"+t)}function Jt(t){return t}Object.freeze($t);var Yt=Number.isInteger||function(t){return\"number\"===typeof t&&isFinite(t)&&Math.floor(t)===t};function Zt(t){return!(!Array.isArray(t)&&!Object(i.isObservableArray)(t))}function Gt(t){return t?Zt(t)?t:[t]:Ht}function Bt(t){if(null===t||\"object\"!==typeof t)return!1;var e=Object.getPrototypeOf(t);return e===Object.prototype||null===e}function Kt(t){return null!==t&&\"object\"===typeof t&&!(t instanceof Date)&&!(t instanceof RegExp)}function Xt(t){return null===t||void 0===t||(\"string\"===typeof t||\"number\"===typeof t||\"boolean\"===typeof t||t instanceof Date)}function qt(t){return t}function Qt(t,e,n){Object.defineProperty(t,e,{enumerable:!1,writable:!1,configurable:!0,value:n})}var te=function(){function t(){this.handlers=[]}return Object.defineProperty(t.prototype,\"hasSubscribers\",{get:function(){return this.handlers.length>0},enumerable:!0,configurable:!0}),t.prototype.register=function(t,e){var n=this;return void 0===e&&(e=!1),e?this.handlers.unshift(t):this.handlers.push(t),function(){n.unregister(t)}},t.prototype.has=function(t){return this.handlers.indexOf(t)>=0},t.prototype.unregister=function(t){var e=this.handlers.indexOf(t);e>=0&&this.handlers.splice(e,1)},t.prototype.clear=function(){this.handlers.length=0},t.prototype.emit=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=this.handlers.slice();n.forEach((function(e){return e.apply(void 0,t)}))},t}(),ee=function(){function t(){}return t.prototype.hasSubscribers=function(t){var e=this.eventHandlers&&this.eventHandlers[t];return!!e&&e.hasSubscribers},t.prototype.register=function(t,e,n){void 0===n&&(n=!1),this.eventHandlers||(this.eventHandlers={});var r=this.eventHandlers[t];return r||(r=this.eventHandlers[t]=new te),r.register(e,n)},t.prototype.has=function(t,e){var n=this.eventHandlers&&this.eventHandlers[t];return!!n&&n.has(e)},t.prototype.unregister=function(t,e){var n=this.eventHandlers&&this.eventHandlers[t];n&&n.unregister(e)},t.prototype.clear=function(t){this.eventHandlers&&delete this.eventHandlers[t]},t.prototype.clearAll=function(){this.eventHandlers=void 0},t.prototype.emit=function(t){for(var e,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var i=this.eventHandlers&&this.eventHandlers[t];i&&(e=i).emit.apply(e,n)},t}();function ne(t){for(var e=new Array(t.length),n=0;n<t.length;n++)e[n]=t[n];return e}function re(t,e){return 0===t.indexOf(e)}var ie=function(t,e){};function oe(t){console.warn(new Error(\"[mobx-state-tree] \"+t))}function ae(t){return function(t,e){var n=function(){var r=dt(),i=vt(),o=arguments;function a(e,o,a){e.$mst_middleware=n.$mst_middleware,yt({name:t,type:o,id:r,args:[a],tree:i.tree,context:i.context,parentId:i.id,allParentIds:i.allParentIds.concat([i.id]),rootId:i.rootId},e)}return new Promise((function(s,u){var c,p=function(){c=e.apply(null,arguments),f(void 0)};function f(t){var e;try{a((function(t){e=c.next(t)}),\"flow_resume\",t)}catch(n){return void setImmediate((function(){a((function(t){u(n)}),\"flow_throw\",n)}))}h(e)}function l(t){var e;try{a((function(t){e=c.throw(t)}),\"flow_resume_error\",t)}catch(n){return void setImmediate((function(){a((function(t){u(n)}),\"flow_throw\",n)}))}h(e)}function h(t){if(!t.done)return t.value&&\"function\"===typeof t.value.then||Wt(\"Only promises can be yielded to `async`, got: \"+t),t.value.then(f,l);setImmediate((function(){a((function(t){s(t)}),\"flow_return\",t.value)}))}p.$mst_middleware=n.$mst_middleware,yt({name:t,type:\"flow_spawn\",id:r,args:ne(o),tree:i.tree,context:i.context,parentId:i.id,allParentIds:i.allParentIds.concat([i.id]),rootId:i.rootId},p)}))};return n}(t.name,t)}function se(t){return t}function ue(t){switch(t.op){case\"add\":return{op:\"add\",path:t.path,value:t.value};case\"remove\":return{op:\"remove\",path:t.path};case\"replace\":return{op:\"replace\",path:t.path,value:t.value}}}function ce(t){switch(t.op){case\"add\":return{op:\"remove\",path:t.path};case\"remove\":return{op:\"add\",path:t.path,value:t.oldValue};case\"replace\":return{op:\"replace\",path:t.path,value:t.oldValue}}}function pe(t){return!0===(\"number\"===typeof t)?\"\"+t:-1===t.indexOf(\"/\")&&-1===t.indexOf(\"~\")?t:t.replace(/~/g,\"~0\").replace(/\\//g,\"~1\")}function fe(t){return t.replace(/~1/g,\"/\").replace(/~0/g,\"~\")}function le(t){if(0===t.length)return\"\";var e=function(t){return t.map(pe).join(\"/\")};return\".\"===t[0]||\"..\"===t[0]?e(t):\"/\"+e(t)}function he(t){var e=t.split(\"/\").map(fe);return\"\"===t||\".\"===t||\"..\"===t||re(t,\"/\")||re(t,\"./\")||re(t,\"../\")?(\"\"===e[0]&&e.shift(),e):Wt(\"a json path must be either rooted, empty or relative, but got '\"+t+\"'\")}ie.ids={};var de,ye=\"Map.put can only be used to store complex values that have an identifier type attribute\";function ve(t,e){if(t instanceof Ne)e.push(t);else if(t instanceof Ke){if(!ve(t.type,e))return!1}else if(t instanceof Ze)for(var n=0;n<t.types.length;n++){if(!ve(t.types[n],e))return!1}else if(t instanceof nn){var r=t.getSubType(!1);if(!r)return!1;ve(r,e)}return!0}!function(t){t[t.UNKNOWN=0]=\"UNKNOWN\",t[t.YES=1]=\"YES\",t[t.NO=2]=\"NO\"}(de||(de={}));var be=function(t){function e(e){return t.call(this,e,i.observable.ref.enhancer)||this}return p(e,t),e.prototype.get=function(e){return t.prototype.get.call(this,\"\"+e)},e.prototype.has=function(e){return t.prototype.has.call(this,\"\"+e)},e.prototype.delete=function(e){return t.prototype.delete.call(this,\"\"+e)},e.prototype.set=function(e,n){return t.prototype.set.call(this,\"\"+e,n)},e.prototype.put=function(t){if(t||Wt(\"Map.put cannot be used to set empty values\"),Et(t)){var e=Dt(t);0;var n=e.identifier;return this.set(n,e.value),e.value}if(Kt(t)){n=void 0;var r=Dt(this).type;return r.identifierMode===de.NO?Wt(ye):r.identifierMode===de.YES?(n=wn(t[r.mapIdentifierAttribute]),this.set(n,t),this.get(n)):Wt(ye)}return Wt(\"Map.put can only be used to store complex values\")},e}(i.ObservableMap),ge=function(t){function e(e,n){var r=t.call(this,e)||this;return r.shouldAttachNode=!0,r.identifierMode=de.UNKNOWN,r.mapIdentifierAttribute=void 0,r.flags=X.Map,r.subType=n,r._determineIdentifierMode(),r}return p(e,t),e.prototype.instantiate=function(t,e,n,r){return this.identifierMode===de.UNKNOWN&&this._determineIdentifierMode(),_t(this,t,e,n,r)},e.prototype._determineIdentifierMode=function(){var t=[];if(ve(this.subType,t)){var e=void 0;t.forEach((function(t){t.identifierAttribute&&(e&&e!==t.identifierAttribute&&Wt(\"The objects in a map should all have the same identifier attribute, expected '\"+e+\"', but child of type '\"+t.name+\"' declared attribute '\"+t.identifierAttribute+\"' as identifier\"),e=t.identifierAttribute)})),e?(this.identifierMode=de.YES,this.mapIdentifierAttribute=e):this.identifierMode=de.NO}},e.prototype.initializeChildNodes=function(t,e){void 0===e&&(e={});var n=t.type.subType,r=t.environment,i={};return Object.keys(e).forEach((function(o){i[o]=n.instantiate(t,o,r,e[o])})),i},e.prototype.createNewInstance=function(t,e,n){return new be(e)},e.prototype.finalizeNewInstance=function(t,e){Object(i._interceptReads)(e,t.unbox),Object(i.intercept)(e,this.willChange),Object(i.observe)(e,this.didChange)},e.prototype.describe=function(){return\"Map<string, \"+this.subType.describe()+\">\"},e.prototype.getChildren=function(t){return Object(i.values)(t.storedValue)},e.prototype.getChildNode=function(t,e){var n=t.storedValue.get(\"\"+e);return n||Wt(\"Not a child \"+e),n},e.prototype.willChange=function(t){var e=Dt(t.object),n=t.name;e.assertWritable();var r=e.type,i=r.subType;switch(t.type){case\"update\":var o=t.newValue;if(o===t.object.get(n))return null;t.newValue=i.reconcile(e.getChildNode(n),t.newValue),r.processIdentifier(n,t.newValue);break;case\"add\":t.newValue,t.newValue=i.instantiate(e,n,void 0,t.newValue),r.processIdentifier(n,t.newValue)}return t},e.prototype.processIdentifier=function(t,e){if(this.identifierMode===de.YES&&e instanceof nt){var n=e.identifier;n!==t&&Wt(\"A map of objects containing an identifier should always store the object under their own identifier. Trying to store key '\"+n+\"', but expected: '\"+t+\"'\")}},e.prototype.getValue=function(t){return t.storedValue},e.prototype.getSnapshot=function(t){var e={};return t.getChildren().forEach((function(t){e[t.subpath]=t.snapshot})),e},e.prototype.processInitialSnapshot=function(t,e){var n={};return Object.keys(t).forEach((function(e){n[e]=t[e].getSnapshot()})),n},e.prototype.didChange=function(t){var e=Dt(t.object);switch(t.type){case\"update\":return void e.emitPatch({op:\"replace\",path:pe(t.name),value:t.newValue.snapshot,oldValue:t.oldValue?t.oldValue.snapshot:void 0},e);case\"add\":return void e.emitPatch({op:\"add\",path:pe(t.name),value:t.newValue.snapshot,oldValue:void 0},e);case\"delete\":var n=t.oldValue.snapshot;return t.oldValue.die(),void e.emitPatch({op:\"remove\",path:pe(t.name),oldValue:n},e)}},e.prototype.applyPatchLocally=function(t,e,n){var r=t.storedValue;switch(n.op){case\"add\":case\"replace\":r.set(e,n.value);break;case\"remove\":r.delete(e)}},e.prototype.applySnapshot=function(t,e){var n=t.storedValue,r={};for(var i in Array.from(n.keys()).forEach((function(t){r[t]=!1})),e)n.set(i,e[i]),r[\"\"+i]=!0;Object.keys(r).forEach((function(t){!1===r[t]&&n.delete(t)}))},e.prototype.getChildType=function(t){return this.subType},e.prototype.isValidSnapshot=function(t,e){var n=this;return Bt(t)?Ot(Object.keys(t).map((function(r){return n.subType.validate(t[r],At(e,r,n.subType))}))):It(e,t,\"Value is not a plain object\")},e.prototype.getDefaultSnapshot=function(){return Ut},e.prototype.removeChild=function(t,e){t.storedValue.delete(e)},l([i.action],e.prototype,\"applySnapshot\",null),e}(rt);function me(t){return ot(t)&&(t.flags&X.Map)>0}var we=function(t){function e(e,n){var r=t.call(this,e)||this;return r.shouldAttachNode=!0,r.flags=X.Array,r.subType=n,r}return p(e,t),e.prototype.instantiate=function(t,e,n,r){return _t(this,t,e,n,r)},e.prototype.initializeChildNodes=function(t,e){void 0===e&&(e=[]);var n=t.type.subType,r=t.environment,i={};return e.forEach((function(e,o){var a=\"\"+o;i[a]=n.instantiate(t,a,r,e)})),i},e.prototype.createNewInstance=function(t,e,n){return i.observable.array(Ft(e),$t)},e.prototype.finalizeNewInstance=function(t,e){Object(i._getAdministration)(e).dehancer=t.unbox,Object(i.intercept)(e,this.willChange),Object(i.observe)(e,this.didChange)},e.prototype.describe=function(){return this.subType.describe()+\"[]\"},e.prototype.getChildren=function(t){return t.storedValue.slice()},e.prototype.getChildNode=function(t,e){var n=parseInt(e,10);return n<t.storedValue.length?t.storedValue[n]:Wt(\"Not a child: \"+e)},e.prototype.willChange=function(t){var e=Dt(t.object);e.assertWritable();var n=e.type.subType,r=e.getChildren(),i=null;switch(t.type){case\"update\":if(t.newValue===t.object[t.index])return null;if(!(i=Se(e,n,[r[t.index]],[t.newValue],[t.index])))return null;t.newValue=i[0];break;case\"splice\":var o=t.index,a=t.removedCount,s=t.added;if(!(i=Se(e,n,r.slice(o,o+a),s,s.map((function(t,e){return o+e})))))return null;t.added=i;for(var u=o+a;u<r.length;u++)r[u].setParent(e,\"\"+(u+s.length-a))}return t},e.prototype.getValue=function(t){return t.storedValue},e.prototype.getSnapshot=function(t){return t.getChildren().map((function(t){return t.snapshot}))},e.prototype.processInitialSnapshot=function(t,e){var n=[];return Object.keys(t).forEach((function(e){n.push(t[e].getSnapshot())})),n},e.prototype.didChange=function(t){var e=Dt(t.object);switch(t.type){case\"update\":return void e.emitPatch({op:\"replace\",path:\"\"+t.index,value:t.newValue.snapshot,oldValue:t.oldValue?t.oldValue.snapshot:void 0},e);case\"splice\":for(var n=t.removedCount-1;n>=0;n--)e.emitPatch({op:\"remove\",path:\"\"+(t.index+n),oldValue:t.removed[n].snapshot},e);for(n=0;n<t.addedCount;n++)e.emitPatch({op:\"add\",path:\"\"+(t.index+n),value:e.getChildNode(\"\"+(t.index+n)).snapshot,oldValue:void 0},e);return}},e.prototype.applyPatchLocally=function(t,e,n){var r=t.storedValue,i=\"-\"===e?r.length:parseInt(e);switch(n.op){case\"replace\":r[i]=n.value;break;case\"add\":r.splice(i,0,n.value);break;case\"remove\":r.splice(i,1)}},e.prototype.applySnapshot=function(t,e){t.storedValue.replace(e)},e.prototype.getChildType=function(t){return this.subType},e.prototype.isValidSnapshot=function(t,e){var n=this;return Zt(t)?Ot(t.map((function(t,r){return n.subType.validate(t,At(e,\"\"+r,n.subType))}))):It(e,t,\"Value is not an array\")},e.prototype.getDefaultSnapshot=function(){return Ht},e.prototype.removeChild=function(t,e){t.storedValue.splice(parseInt(e,10),1)},l([i.action],e.prototype,\"applySnapshot\",null),e}(rt);function Se(t,e,n,r,i){for(var o,a,s,u=!1,c=void 0,p=!0,f=0;u=f<=r.length-1,o=n[f],a=u?r[f]:void 0,((s=a)instanceof Q||s instanceof nt)&&(a=a.storedValue),o||u;f++)if(u)if(o)if(Pe(o,a))n[f]=Ae(e,t,\"\"+i[f],a,o);else{c=void 0;for(var l=f;l<n.length;l++)if(Pe(n[l],a)){c=n.splice(l,1)[0];break}n.splice(f,0,Ae(e,t,\"\"+i[f],a,c)),p=!1}else Et(a)&&Dt(a).parent===t&&Wt(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\"+t.path+\"/\"+i[f]+\"', but it lives already at '\"+Dt(a).path+\"'\"),n.splice(f,0,Ae(e,t,\"\"+i[f],a)),p=!1;else o.die(),n.splice(f,1),f--,p=!1;return p?null:n}function Ae(t,e,n,r,i){var o;if(Et(r)&&((o=Dt(r)).assertAlive(),null!==o.parent&&o.parent===e))return o.setParent(e,n),i&&i!==o&&i.die(),o;return i?((o=t.reconcile(i,r)).setParent(e,n),o):t.instantiate(e,n,e.environment,r)}function Pe(t,e){return Et(e)?Dt(e)===t:t.snapshot===e||!!(t instanceof nt&&null!==t.identifier&&t.identifierAttribute&&Bt(e)&&t.identifier===wn(e[t.identifierAttribute])&&t.type.is(e))}function Ie(t){return ot(t)&&(t.flags&X.Array)>0}var Oe=\"preProcessSnapshot\",Te=\"postProcessSnapshot\";function Ve(){return Dt(this).toString()}var Ce={name:\"AnonymousModel\",properties:{},initializers:Ht};function je(t){return Object.keys(t).reduce((function(t,e){var n,i,o;if(e in r)return Wt(\"Hook '\"+e+\"' was defined as property. Hooks should be defined as part of the actions\");var a=Object.getOwnPropertyDescriptor(t,e);\"get\"in a&&Wt(\"Getters are not supported as properties. Please use views instead\");var s=a.value;if(null===s||void 0===s)Wt(\"The default value of an attribute cannot be null or undefined as the type cannot be inferred. Did you mean `types.maybe(someType)`?\");else{if(Xt(s))return Object.assign({},t,((n={})[e]=Xe(function(t){switch(typeof t){case\"string\":return Re;case\"number\":return xe;case\"boolean\":return ze;case\"object\":if(t instanceof Date)return Le}return Wt(\"Cannot determine primitive type from value \"+t)}(s),s),n));if(s instanceof ge)return Object.assign({},t,((i={})[e]=Xe(s,{}),i));if(s instanceof we)return Object.assign({},t,((o={})[e]=Xe(s,[]),o));if(ot(s))return t;Wt(\"Invalid type definition for property '\"+e+\"', cannot infer a type from a value like '\"+s+\"' (\"+typeof s+\")\")}}),t)}var Ne=function(t){function e(e){var n=t.call(this,e.name||Ce.name)||this;n.flags=X.Object,n.shouldAttachNode=!0;var r=e.name||Ce.name;return/^\\w[\\w\\d_]*$/.test(r)||Wt(\"Typename should be a valid identifier: \"+r),Object.assign(n,Ce,e),n.properties=je(n.properties),n.properties,n.propertyNames=Object.keys(n.properties),n.identifierAttribute=n._getIdentifierAttribute(),n}return p(e,t),e.prototype._getIdentifierAttribute=function(){var t=void 0;return this.forAllProps((function(e,n){n.flags&X.Identifier&&(t&&Wt(\"Cannot define property '\"+e+\"' as object identifier, property '\"+t+\"' is already defined as identifier property\"),t=e)})),t},e.prototype.cloneAndEnhance=function(t){return new e({name:t.name||this.name,properties:Object.assign({},this.properties,t.properties),initializers:this.initializers.concat(t.initializers||[]),preProcessor:t.preProcessor||this.preProcessor,postProcessor:t.postProcessor||this.postProcessor})},e.prototype.actions=function(t){var e=this;return this.cloneAndEnhance({initializers:[function(n){return e.instantiateActions(n,t(n)),n}]})},e.prototype.instantiateActions=function(t,e){Bt(e)||Wt(\"actions initializer should return a plain object containing actions\"),Object.keys(e).forEach((function(n){n===Oe&&Wt(\"Cannot define action 'preProcessSnapshot', it should be defined using 'type.preProcessSnapshot(fn)' instead\"),n===Te&&Wt(\"Cannot define action 'postProcessSnapshot', it should be defined using 'type.postProcessSnapshot(fn)' instead\");var i=e[n],o=t[n];if(n in r&&o){var a=i;i=function(){o.apply(null,arguments),a.apply(null,arguments)}}var s=i.$mst_middleware,u=i.bind(e);u.$mst_middleware=s;var c=bt(t,n,u);e[n]=c,Qt(t,n,c)}))},e.prototype.named=function(t){return this.cloneAndEnhance({name:t})},e.prototype.props=function(t){return this.cloneAndEnhance({properties:t})},e.prototype.volatile=function(t){var e=this;return this.cloneAndEnhance({initializers:[function(n){return e.instantiateVolatileState(n,t(n)),n}]})},e.prototype.instantiateVolatileState=function(t,e){Bt(e)||Wt(\"volatile state initializer should return a plain object containing state\"),Object(i.set)(t,e)},e.prototype.extend=function(t){var e=this;return this.cloneAndEnhance({initializers:[function(n){var r=t(n),i=r.actions,o=r.views,a=r.state,s=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&\"function\"===typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&(n[r[i]]=t[r[i]])}return n}(r,[\"actions\",\"views\",\"state\"]);for(var u in s)Wt(\"The `extend` function should return an object with a subset of the fields 'actions', 'views' and 'state'. Found invalid key '\"+u+\"'\");return a&&e.instantiateVolatileState(n,a),o&&e.instantiateViews(n,o),i&&e.instantiateActions(n,i),n}]})},e.prototype.views=function(t){var e=this;return this.cloneAndEnhance({initializers:[function(n){return e.instantiateViews(n,t(n)),n}]})},e.prototype.instantiateViews=function(t,e){Bt(e)||Wt(\"views initializer should return a plain object containing views\"),Object.keys(e).forEach((function(n){var r=Object.getOwnPropertyDescriptor(e,n),o=r.value;if(\"get\"in r)if(Object(i.isComputedProp)(t,n)){var a=Object(i._getAdministration)(t,n);a.derivation=r.get,a.scope=t,r.set&&(a.setter=Object(i.action)(a.name+\"-setter\",r.set))}else Object(i.computed)(t,n,r,!0);else\"function\"===typeof o?Qt(t,n,o):Wt(\"A view member should either be a function or getter based property\")}))},e.prototype.preProcessSnapshot=function(t){var e=this.preProcessor;return e?this.cloneAndEnhance({preProcessor:function(n){return e(t(n))}}):this.cloneAndEnhance({preProcessor:t})},e.prototype.postProcessSnapshot=function(t){var e=this.postProcessor;return e?this.cloneAndEnhance({postProcessor:function(n){return t(e(n))}}):this.cloneAndEnhance({postProcessor:t})},e.prototype.instantiate=function(t,e,n,r){return _t(this,t,e,n,Et(r)?r:this.applySnapshotPreProcessor(r))},e.prototype.initializeChildNodes=function(t,e){void 0===e&&(e={});var n=t.type,r={};return n.forAllProps((function(n,i){r[n]=i.instantiate(t,n,t.environment,e[n])})),r},e.prototype.createNewInstance=function(t,e,n){return i.observable.object(e,Ut,$t)},e.prototype.finalizeNewInstance=function(t,e){Qt(e,\"toString\",Ve),this.forAllProps((function(n){Object(i._interceptReads)(e,n,t.unbox)})),this.initializers.reduce((function(t,e){return e(t)}),e),Object(i.intercept)(e,this.willChange),Object(i.observe)(e,this.didChange)},e.prototype.willChange=function(t){var e=Dt(t.object);e.assertWritable();var n=e.type.properties[t.name];return n&&(t.newValue,t.newValue=n.reconcile(e.getChildNode(t.name),t.newValue)),t},e.prototype.didChange=function(t){var e=Dt(t.object);if(e.type.properties[t.name]){var n=t.oldValue?t.oldValue.snapshot:void 0;e.emitPatch({op:\"replace\",path:pe(t.name),value:t.newValue.snapshot,oldValue:n},e)}},e.prototype.getChildren=function(t){var e=this,n=[];return this.forAllProps((function(r,i){n.push(e.getChildNode(t,r))})),n},e.prototype.getChildNode=function(t,e){if(!(e in this.properties))return Wt(\"Not a value property: \"+e);var n=Object(i._getAdministration)(t.storedValue,e).value;return n||Wt(\"Node not available for property \"+e)},e.prototype.getValue=function(t){return t.storedValue},e.prototype.getSnapshot=function(t,e){var n=this;void 0===e&&(e=!0);var r={};return this.forAllProps((function(e,o){Object(i.getAtom)(t.storedValue,e).reportObserved(),r[e]=n.getChildNode(t,e).snapshot})),e?this.applySnapshotPostProcessor(r):r},e.prototype.processInitialSnapshot=function(t,e){var n={};return Object.keys(t).forEach((function(e){n[e]=t[e].getSnapshot()})),this.applySnapshotPostProcessor(this.applyOptionalValuesToSnapshot(n))},e.prototype.applyPatchLocally=function(t,e,n){\"replace\"!==n.op&&\"add\"!==n.op&&Wt(\"object does not support operation \"+n.op),t.storedValue[e]=n.value},e.prototype.applySnapshot=function(t,e){var n=this.applySnapshotPreProcessor(e);this.forAllProps((function(e,r){t.storedValue[e]=n[e]}))},e.prototype.applySnapshotPreProcessor=function(t){var e=this.preProcessor;return e?e.call(null,t):t},e.prototype.applyOptionalValuesToSnapshot=function(t){return t&&(t=Object.assign({},t),this.forAllProps((function(e,n){if(!(e in t)){var r=Ee(n);r&&(t[e]=r.getDefaultValueSnapshot())}}))),t},e.prototype.applySnapshotPostProcessor=function(t){var e=this.postProcessor;return e?e.call(null,t):t},e.prototype.getChildType=function(t){return this.properties[t]},e.prototype.isValidSnapshot=function(t,e){var n=this,r=this.applySnapshotPreProcessor(t);return Bt(r)?Ot(this.propertyNames.map((function(t){return n.properties[t].validate(r[t],At(e,t,n.properties[t]))}))):It(e,r,\"Value is not a plain object\")},e.prototype.forAllProps=function(t){var e=this;this.propertyNames.forEach((function(n){return t(n,e.properties[n])}))},e.prototype.describe=function(){var t=this;return\"{ \"+this.propertyNames.map((function(e){return e+\": \"+t.properties[e].describe()})).join(\"; \")+\" }\"},e.prototype.getDefaultSnapshot=function(){return Ut},e.prototype.removeChild=function(t,e){t.storedValue[e]=void 0},l([i.action],e.prototype,\"applySnapshot\",null),e}(rt);function _e(t){return ot(t)&&(t.flags&X.Object)>0}function Ee(t){if(t)return t.flags&X.Union&&t.types?t.types.find(Ee):t.flags&X.Late&&t.getSubType&&t.getSubType(!1)?Ee(t.subType):t.flags&X.Optional?t:void 0}var De=function(t){function e(e,n,r,i){void 0===i&&(i=Jt);var o=t.call(this,e)||this;return o.shouldAttachNode=!1,o.flags=n,o.checker=r,o.initializer=i,o}return p(e,t),e.prototype.describe=function(){return this.name},e.prototype.instantiate=function(t,e,n,r){return _t(this,t,e,n,r)},e.prototype.createNewInstance=function(t,e,n){return this.initializer(n)},e.prototype.isValidSnapshot=function(t,e){return Xt(t)&&this.checker(t)?Pt():It(e,t,\"Value is not a \"+(\"Date\"===this.name?\"Date or a unix milliseconds timestamp\":this.name))},e}(it),Re=new De(\"string\",X.String,(function(t){return\"string\"===typeof t})),xe=new De(\"number\",X.Number,(function(t){return\"number\"===typeof t})),ke=new De(\"integer\",X.Integer,(function(t){return Yt(t)})),ze=new De(\"boolean\",X.Boolean,(function(t){return\"boolean\"===typeof t})),Me=new De(\"null\",X.Null,(function(t){return null===t})),Fe=new De(\"undefined\",X.Undefined,(function(t){return void 0===t})),Le=new De(\"Date\",X.Date,(function(t){return\"number\"===typeof t||t instanceof Date}),(function(t){return t instanceof Date?t:new Date(t)}));function He(t){return ot(t)&&(t.flags&(X.String|X.Number|X.Integer|X.Boolean|X.Date))>0}Le.getSnapshot=function(t){return t.storedValue.getTime()};var Ue=function(t){function e(e){var n=t.call(this,JSON.stringify(e))||this;return n.shouldAttachNode=!1,n.flags=X.Literal,n.value=e,n}return p(e,t),e.prototype.instantiate=function(t,e,n,r){return _t(this,t,e,n,r)},e.prototype.describe=function(){return JSON.stringify(this.value)},e.prototype.isValidSnapshot=function(t,e){return Xt(t)&&t===this.value?Pt():It(e,t,\"Value is not a literal \"+JSON.stringify(this.value))},e}(it);function $e(t){return new Ue(t)}function We(t){return ot(t)&&(t.flags&X.Literal)>0}var Je=function(t){function e(e,n,r,i){var o=t.call(this,e)||this;return o.type=n,o.predicate=r,o.message=i,o}return p(e,t),Object.defineProperty(e.prototype,\"flags\",{get:function(){return this.type.flags|X.Refinement},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"shouldAttachNode\",{get:function(){return this.type.shouldAttachNode},enumerable:!0,configurable:!0}),e.prototype.describe=function(){return this.name},e.prototype.instantiate=function(t,e,n,r){return this.type.instantiate(t,e,n,r)},e.prototype.isAssignableFrom=function(t){return this.type.isAssignableFrom(t)},e.prototype.isValidSnapshot=function(t,e){var n=this.type.validate(t,e);if(n.length>0)return n;var r=Et(t)?Dt(t).snapshot:t;return this.predicate(r)?Pt():It(e,t,this.message(t))},e}(it);function Ye(t){return(t.flags&X.Refinement)>0}var Ze=function(t){function e(e,n,r){var i=t.call(this,e)||this;return i.eager=!0,r=f({eager:!0,dispatcher:void 0},r),i.dispatcher=r.dispatcher,r.eager||(i.eager=!1),i.types=n,i}return p(e,t),Object.defineProperty(e.prototype,\"flags\",{get:function(){var t=X.Union;return this.types.forEach((function(e){t|=e.flags})),t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"shouldAttachNode\",{get:function(){return this.types.some((function(t){return t.shouldAttachNode}))},enumerable:!0,configurable:!0}),e.prototype.isAssignableFrom=function(t){return this.types.some((function(e){return e.isAssignableFrom(t)}))},e.prototype.describe=function(){return\"(\"+this.types.map((function(t){return t.describe()})).join(\" | \")+\")\"},e.prototype.instantiate=function(t,e,n,r){var i=this.determineType(r,void 0);return i?i.instantiate(t,e,n,r):Wt(\"No matching type for union \"+this.describe())},e.prototype.reconcile=function(t,e){var n=this.determineType(e,t.type);return n?n.reconcile(t,e):Wt(\"No matching type for union \"+this.describe())},e.prototype.determineType=function(t,e){return this.dispatcher?this.dispatcher(t):e?e.is(t)?e:this.types.filter((function(t){return t!==e})).find((function(e){return e.is(t)})):this.types.find((function(e){return e.is(t)}))},e.prototype.isValidSnapshot=function(t,e){if(this.dispatcher)return this.dispatcher(t).validate(t,e);for(var n=[],r=0,i=0;i<this.types.length;i++){var o=this.types[i].validate(t,e);if(0===o.length){if(this.eager)return Pt();r++}else n.push(o)}return 1===r?Pt():It(e,t,\"No type is applicable for the union\").concat(Ot(n))},e}(it);function Ge(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var r=ot(t)?void 0:t,i=ot(t)?[t].concat(e):e,o=\"(\"+i.map((function(t){return t.name})).join(\" | \")+\")\";return new Ze(o,i,r)}function Be(t){return(t.flags&X.Union)>0}var Ke=function(t){function e(e,n){var r=t.call(this,e.name)||this;return r.type=e,r.defaultValue=n,r}return p(e,t),Object.defineProperty(e.prototype,\"flags\",{get:function(){return this.type.flags|X.Optional},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"shouldAttachNode\",{get:function(){return this.type.shouldAttachNode},enumerable:!0,configurable:!0}),e.prototype.describe=function(){return this.type.describe()+\"?\"},e.prototype.instantiate=function(t,e,n,r){if(\"undefined\"===typeof r){var i=this.getDefaultInstanceOrSnapshot();return this.type.instantiate(t,e,n,i)}return this.type.instantiate(t,e,n,r)},e.prototype.reconcile=function(t,e){return this.type.reconcile(t,this.type.is(e)&&void 0!==e?e:this.getDefaultInstanceOrSnapshot())},e.prototype.getDefaultInstanceOrSnapshot=function(){var t=\"function\"===typeof this.defaultValue?this.defaultValue():this.defaultValue;return this.defaultValue,t},e.prototype.getDefaultValueSnapshot=function(){var t=this.getDefaultInstanceOrSnapshot();return Et(t)?Dt(t).snapshot:t},e.prototype.isValidSnapshot=function(t,e){return void 0===t?Pt():this.type.validate(t,e)},e.prototype.isAssignableFrom=function(t){return this.type.isAssignableFrom(t)},e}(it);function Xe(t,e){return\"function\"!==typeof e&&Et(e)&&Wt(\"default value cannot be an instance, pass a snapshot or a function that creates an instance/snapshot instead\"),new Ke(t,e)}function qe(t){return ot(t)&&(t.flags&X.Optional)>0}var Qe=Xe(Fe,void 0),tn=Xe(Me,null);function en(t){return Ge(t,Qe)}var nn=function(t){function e(e,n){var r=t.call(this,e)||this;return r._subType=null,r.definition=n,r}return p(e,t),Object.defineProperty(e.prototype,\"flags\",{get:function(){return(this._subType?this._subType.flags:0)|X.Late},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"shouldAttachNode\",{get:function(){return this.getSubType(!0).shouldAttachNode},enumerable:!0,configurable:!0}),e.prototype.getSubType=function(t){if(null===this._subType){var e=void 0;try{e=this.definition()}catch(n){if(!(n instanceof ReferenceError))throw n;e=void 0}if(t&&void 0===e&&Wt(\"Late type seems to be used too early, the definition (still) returns undefined\"),e)return this._subType=e,e}return this._subType},e.prototype.instantiate=function(t,e,n,r){return this.getSubType(!0).instantiate(t,e,n,r)},e.prototype.reconcile=function(t,e){return this.getSubType(!0).reconcile(t,e)},e.prototype.describe=function(){var t=this.getSubType(!1);return t?t.name:\"<uknown late type>\"},e.prototype.isValidSnapshot=function(t,e){var n=this.getSubType(!1);return n?n.validate(t,e):Pt()},e.prototype.isAssignableFrom=function(t){var e=this.getSubType(!1);return!!e&&e.isAssignableFrom(t)},e}(it);function rn(t){return ot(t)&&(t.flags&X.Late)>0}var on=function(t){function e(e){var n=t.call(this,e?\"frozen(\"+e.name+\")\":\"frozen\")||this;return n.subType=e,n.shouldAttachNode=!1,n.flags=X.Frozen,n}return p(e,t),e.prototype.describe=function(){return\"<any immutable value>\"},e.prototype.instantiate=function(t,e,n,r){return _t(this,t,e,n,r)},e.prototype.isValidSnapshot=function(t,e){return function(t){return\"function\"!==typeof t}(t)?this.subType?this.subType.validate(t,e):Pt():It(e,t,\"Value is not serializable and cannot be frozen\")},e}(it),an=new on;function sn(t){return ot(t)&&(t.flags&X.Frozen)>0}var un=function(){function t(t,e){if(this.targetType=e,\"string\"===typeof t||\"number\"===typeof t)this.identifier=t;else{if(!Et(t))return Wt(\"Can only store references to tree nodes or identifiers, got: '\"+t+\"'\");var n=Dt(t);if(!n.identifierAttribute)return Wt(\"Can only store references with a defined identifier attribute.\");var r=n.unnormalizedIdentifier;if(null===r||void 0===r)return Wt(\"Can only store references to tree nodes with a defined identifier.\");this.identifier=r}}return t.prototype.updateResolvedReference=function(t){var e=wn(this.identifier),n=t.root.identifierCache.getLastCacheModificationPerId(e);if(!this.resolvedReference||this.resolvedReference.lastCacheModification!==n){var r=this.targetType,i=t.root.identifierCache.resolve(r,e);if(!i)throw new cn(\"[mobx-state-tree] Failed to resolve reference '\"+this.identifier+\"' to type '\"+this.targetType.name+\"' (from node: \"+t.path+\")\");this.resolvedReference={node:i,lastCacheModification:n}}},Object.defineProperty(t.prototype,\"resolvedValue\",{get:function(){return this.updateResolvedReference(this.node),this.resolvedReference.node.value},enumerable:!0,configurable:!0}),t}(),cn=function(t){function e(n){var r=t.call(this,n)||this;return Object.setPrototypeOf(r,e.prototype),r}return p(e,t),e}(Error),pn=function(t){function e(e,n){var r=t.call(this,\"reference(\"+e.name+\")\")||this;return r.targetType=e,r.onInvalidated=n,r.shouldAttachNode=!1,r.flags=X.Reference,r}return p(e,t),e.prototype.describe=function(){return this.name},e.prototype.isAssignableFrom=function(t){return this.targetType.isAssignableFrom(t)},e.prototype.isValidSnapshot=function(t,e){return\"string\"===typeof t||\"number\"===typeof t?Pt():It(e,t,\"Value is not a valid identifier, which is a string or a number\")},e.prototype.fireInvalidated=function(t,e,n,r){var i=e.parent;if(i&&i.isAlive){var o=i.storedValue;o&&this.onInvalidated({cause:t,parent:o,invalidTarget:r?r.storedValue:void 0,invalidId:n,replaceRef:function(t){b(e.root.storedValue,{op:\"replace\",value:t,path:e.path})},removeRef:function(){_e(i.type)?this.replaceRef(void 0):b(e.root.storedValue,{op:\"remove\",path:e.path})}})}},e.prototype.addTargetNodeWatcher=function(t,e){var n=this,i=this.getValue(t);if(i){var o=Dt(i),a=function(i,a){var s=function(t){switch(t){case r.beforeDestroy:return\"destroy\";case r.beforeDetach:return\"detach\";default:return}}(a);s&&n.fireInvalidated(s,t,e,o)},s=o.hookSubscribers.register(r.beforeDetach,a),u=o.hookSubscribers.register(r.beforeDestroy,a);return function(){s(),u()}}},e.prototype.watchTargetNodeForInvalidations=function(t,e,n){var i=this;if(this.onInvalidated){var o;t.hookSubscribers.register(r.beforeDestroy,(function(){o&&o()}));var a=function(r){o&&o();var a=t.parent,s=a&&a.storedValue;if(a&&a.isAlive&&s){(n?!!n.get(e,s):t.root.identifierCache.has(i.targetType,wn(e)))?o=i.addTargetNodeWatcher(t,e):r||i.fireInvalidated(\"invalidSnapshotReference\",t,e,null)}};t.state===Ct.FINALIZED?a(!0):(t.isRoot||t.root.hookSubscribers.register(r.afterCreationFinalization,(function(){t.parent&&t.parent.createObservableInstanceIfNeeded()})),t.hookSubscribers.register(r.afterAttach,(function(){a(!1)})))}},e}(it),fn=function(t){function e(e,n){return t.call(this,e,n)||this}return p(e,t),e.prototype.getValue=function(t){if(t.isAlive)return t.storedValue.resolvedValue},e.prototype.getSnapshot=function(t){return t.storedValue.identifier},e.prototype.instantiate=function(t,e,n,r){var i=Et(r)?R(r):r,o=new un(r,this.targetType),a=_t(this,t,e,n,o);return o.node=a,this.watchTargetNodeForInvalidations(a,i,void 0),a},e.prototype.reconcile=function(t,e){if(t.type===this){var n=Et(e),r=t.storedValue;if(!n&&r.identifier===e)return t;if(n&&r.resolvedValue===e)return t}var i=this.instantiate(t.parent,t.subpath,t.environment,e);return t.die(),i},e}(pn),ln=function(t){function e(e,n,r){var i=t.call(this,e,r)||this;return i.options=n,i}return p(e,t),e.prototype.getValue=function(t){if(t.isAlive)return this.options.get(t.storedValue,t.parent?t.parent.storedValue:null)},e.prototype.getSnapshot=function(t){return t.storedValue},e.prototype.instantiate=function(t,e,n,r){var i=Et(r)?this.options.set(r,t?t.storedValue:null):r,o=_t(this,t,e,n,i);return this.watchTargetNodeForInvalidations(o,i,this.options),o},e.prototype.reconcile=function(t,e){var n=Et(e)?this.options.set(e,t?t.storedValue:null):e;if(t.type===this&&t.storedValue===n)return t;var r=this.instantiate(t.parent,t.subpath,t.environment,n);return t.die(),r},e}(pn);function hn(t,e){var n=e||void 0,r=e?e.onInvalidated:void 0;return n&&(n.get||n.set)?new ln(t,{get:n.get,set:n.set},r):new fn(t,r)}function dn(t){return(t.flags&X.Reference)>0}var yn=function(t){function e(){var e=t.call(this,\"identifier\")||this;return e.shouldAttachNode=!1,e.flags=X.Identifier,e}return p(e,t),e.prototype.instantiate=function(t,e,n,r){return t&&t.type instanceof Ne||Wt(\"Identifier types can only be instantiated as direct child of a model type\"),_t(this,t,e,n,r)},e.prototype.reconcile=function(t,e){return t.storedValue!==e?Wt(\"Tried to change identifier from '\"+t.storedValue+\"' to '\"+e+\"'. Changing identifiers is not allowed.\"):t},e.prototype.describe=function(){return\"identifier\"},e.prototype.isValidSnapshot=function(t,e){return\"string\"!==typeof t?It(e,t,\"Value is not a valid identifier, expected a string\"):Pt()},e}(it),vn=function(t){function e(){var e=t.call(this)||this;return e.name=\"identifierNumber\",e}return p(e,t),e.prototype.instantiate=function(e,n,r,i){return t.prototype.instantiate.call(this,e,n,r,i)},e.prototype.isValidSnapshot=function(t,e){return\"number\"===typeof t?Pt():It(e,t,\"Value is not a valid identifierNumber, expected a number\")},e.prototype.reconcile=function(e,n){return t.prototype.reconcile.call(this,e,n)},e.prototype.getSnapshot=function(t){return t.storedValue},e.prototype.describe=function(){return\"identifierNumber\"},e}(yn),bn=new yn,gn=new vn;function mn(t){return ot(t)&&(t.flags&X.Identifier)>0}function wn(t){return\"\"+t}var Sn=function(t){function e(e){var n=t.call(this,e.name)||this;return n.options=e,n.flags=X.Reference,n.shouldAttachNode=!1,n}return p(e,t),e.prototype.describe=function(){return this.name},e.prototype.isAssignableFrom=function(t){return t===this},e.prototype.isValidSnapshot=function(t,e){if(this.options.isTargetType(t))return Pt();var n=this.options.getValidationMessage(t);return n?It(e,t,\"Invalid value for type '\"+this.name+\"': \"+n):Pt()},e.prototype.getValue=function(t){if(t.isAlive)return t.storedValue},e.prototype.getSnapshot=function(t){return this.options.toSnapshot(t.storedValue)},e.prototype.instantiate=function(t,e,n,r){return _t(this,t,e,n,this.options.isTargetType(r)?r:this.options.fromSnapshot(r))},e.prototype.reconcile=function(t,e){var n=!this.options.isTargetType(e);if(t.type===this&&(n?e===t.snapshot:e===t.storedValue))return t;var r=n?this.options.fromSnapshot(e):e,i=this.instantiate(t.parent,t.subpath,t.environment,r);return t.die(),i},e}(it),An={enumeration:function(t,e){var n=\"string\"===typeof t?e:t,r=Ge.apply(void 0,n.map((function(t){return $e(\"\"+t)})));return\"string\"===typeof t&&(r.name=t),r},model:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"string\"===typeof t[0]?t.shift():\"AnonymousModel\",r=t.shift()||{};return new Ne({name:n,properties:r})},compose:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"string\"===typeof t[0]?t.shift():\"AnonymousModel\";return t.reduce((function(t,e){return t.cloneAndEnhance({name:t.name+\"_\"+e.name,properties:e.properties,initializers:e.initializers,preProcessor:function(n){return e.applySnapshotPreProcessor(t.applySnapshotPreProcessor(n))},postProcessor:function(n){return e.applySnapshotPostProcessor(t.applySnapshotPostProcessor(n))}})})).named(n)},custom:function(t){return new Sn(t)},reference:hn,safeReference:function(t,e){return en(hn(t,f({},e,{onInvalidated:function(t){t.removeRef()}})))},union:Ge,optional:Xe,literal:$e,maybe:en,maybeNull:function(t){return Ge(t,tn)},refinement:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"string\"===typeof t[0]?t.shift():ot(t[0])?t[0].name:null,r=t[0],i=t[1],o=t[2]?t[2]:function(t){return\"Value does not respect the refinement predicate\"};return new Je(n,r,i,o)},string:Re,boolean:ze,number:xe,integer:ke,Date:Le,map:function(t){return new ge(\"map<string, \"+t.name+\">\",t)},array:function(t){return new we(t.name+\"[]\",t)},frozen:function(t){return 0===arguments.length?an:ot(t)?new on(t):Xe(an,t)},identifier:bn,identifierNumber:gn,late:function(t,e){var n=\"string\"===typeof t?t:\"late(\"+t.toString()+\")\";return new nn(n,\"string\"===typeof t?e:t)},undefined:Fe,null:Me}}}]);","map":{"version":3,"sources":["static/chunks/0d62de73.b6b22855697f1a316c12.js"],"names":["window","push","xPCX","module","__webpack_exports__","__webpack_require__","r","d","typecheck$$1","escapeJsonPath$$1","unescapeJsonPath$$1","joinJsonPath$$1","splitJsonPath$$1","decorate$$1","addMiddleware$$1","process$$1","isStateTreeNode$$1","flow","castFlowReturn","applyAction$$1","onAction$$1","recordActions$$1","createActionTrackingMiddleware","setLivelinessChecking","getLivelinessChecking","setLivelynessChecking","getType$$1","getChildType$$1","onPatch$$1","onSnapshot$$1","applyPatch$$1","recordPatches$$1","protect$$1","unprotect$$1","isProtected$$1","applySnapshot$$1","getSnapshot$$1","hasParent$$1","getParent$$1","hasParentOfType$$1","getParentOfType$$1","getRoot$$1","getPath$$1","getPathParts$$1","isRoot$$1","resolvePath$$1","resolveIdentifier$$1","getIdentifier$$1","tryResolve$$1","getRelativePath$$1","clone$$1","detach$$1","destroy$$1","isAlive$$1","addDisposer$$1","getEnv$$1","walk$$1","getMembers$$1","getPropertyMembers$$1","cast$$1","castToSnapshot$$1","castToReferenceSnapshot$$1","isType$$1","isArrayType$$1","isFrozenType$$1","isIdentifierType$$1","isLateType$$1","isLiteralType$$1","isMapType$$1","isModelType$$1","isOptionalType$$1","isPrimitiveType$$1","isReferenceType$$1","isRefinementType$$1","isUnionType$$1","tryReference$$1","isValidReference$$1","types$$1","Hook","mobx__WEBPACK_IMPORTED_MODULE_0__","livelinessChecking","mode","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","object","getStateTreeNode$$1","type","child","getChildType","callback","onPatch","onSnapshot","patch","applyPatches","asArray","subject","disposer","resume","inversePatch","recorder","rawPatches","patches","map","_a","inversePatches","stop","replay","undo","slice","reverse","node","isRoot","fail","isProtectionEnabled","isProtected","snapshot","applySnapshot","applyPostProcess","freeze","getSnapshot","depth","parent","storedValue","is","root","path","resolveNodeByPath$$1","value","undefined","identifier$$1","identifierCache","resolve","normalizeIdentifier$$1","identifier","getter","checkIfAlive","e","InvalidReferenceError$$1","base","getRelativePathBetweenNodes$$1","source","keepEnvironment","environment","detach","die","removeChild","subpath","observableIsAlive","addDisposer","env","EMPTY_OBJECT","processor","getChildren","forEach","typeOrNode","name","properties","reflected","actions","volatile","views","getOwnPropertyNames","descriptor","get","_isMSTAction","snapshotOrInstance","instance","TypeFlags$$1","BaseNode$$1","_state","NodeLifeCycle$$1","INITIALIZING","hookSubscribers","EventHandlers","baseSetParent","_subpath","enumerable","configurable","set","val","wasAlive","isAlive","aliveAtom","reportChanged","_parent","_escapedSubpath","pathAtom","reportObserved","fireInternalHook","emit","state","DEAD","baseFinalizeCreation","whenFinalized","CREATED","FINALIZED","fireHook","afterAttach","baseFinalizeDeath","clearAll","baseAboutToDie","beforeDestroy","ScalarNode$$1","_super","initialSnapshot","_this","createNewInstance","finalizeCreation","setParent","newParent","newPath","getValue","toString","DETACHING","aboutToDie","finalizeDeath","nextNodeId","snapshotReactionOptions","onError","ObjectNode$$1","nodeId","middlewares","_autoUnbox","_isRunningAction","_hasSnapshotReaction","_internalEvents","_observableInstanceState","_cachedInitialSnapshot","unbox","childNode","assertAlive","_initialSnapshot","identifierAttribute","IdentifierCache$$1","_childNodes","initializeChildNodes","unnormalizedIdentifier","id","addNodeToCache","createObservableInstanceIfNeeded","_applyPatches","_applySnapshot","parentChain","unshift","_i","parentChain_1","propName","preboot","finalizeNewInstance","trackAndCompute","_addSnapshotReaction","afterCreate","mergeCache","fn","_getActualSnapshot","_getInitialSnapshot","_snapshotUponDeath","childNodes","processInitialSnapshot","isRunningAction","error","warnError","getChildNode","convertChildNodesToArray$$1","assertWritable","afterCreationFinalization","beforeDetach","splitCache","self","createActionInvoker$$1","parts","resolveNodeByPathParts$$1","applyPatchLocally","addHiddenFinalProp","toJSON$$1","unregisterIdentifiers","clear","keys","k","notifyDied","onChange","register","emitSnapshot","handler","emitPatch","basePatch","intEvs","hasSubscribers","stripPatch$$1","invertPatch","splitPatch$$1","a","current","extend","substr","reversePatch","hasDisposer","has","removeDisposer","unregister","removeMiddleware","filter","middleware","addMiddleWare","includeHooks","snapshotDisposer","ComplexType$$1","isType","getDefaultSnapshot","typecheckInternal$$1","instantiate","isAssignableFrom","validate","context","typeCheckSuccess$$1","typeCheckFailure$$1","isValidSnapshot","reconcile","newValue","isMutable","newNode","Type$$1","EMPTY_ARRAY","res","runningActions","Map","hooks","next","abort","onStart","onResume","async","onSuspend","delete","onSuccess","onFail","rootId","args","serializeTheUnserializable","baseType","$MST_UNSERIALIZABLE","action$$1","resolvedTarget","v","Date","baseApplyAction","bind","listener","attachAfter","rawCall","sourceNode_1","info","arg","index","actionName","$MST_DATE","getTime","isPrimitive","isPlainObject","isArray","JSON","stringify","serializeArgument","nextActionId","currentActionContext","getNextActionId$$1","runWithActionContext$$1","baseIsRunningAction","prevContext","baseCall","originalFn","$mst_middleware","concat","collectMiddlewares","result","runNextMiddleware","call2","invokeHandler","runMiddleWares","getActionContext$$1","argsToArray","tree","parentId","allParentIds","prettyPrintValue$$1","safeStringify","toErrorString","fullPath","join","pathPrefix","currentTypename","isSnapshotCompatible","message","describe","getContextForPath$$1","flattenTypeErrors$$1","errors","reduce","valueInString","substring","identifierCacheId","cacheId","cache","lastCacheModificationPerId","updateLastCacheModificationPerId","lcm","getLastCacheModificationPerId","modificationId","lastCacheUpdate","array","mobxShallow","set$$1","indexOf","nodes","remove","basePath","modified","splice","some","candidate","matches","createNode$$1","initialValue","existingNode","$treenode","shouldAttachNode","doubleDot","_","baseParts","targetParts","common","failIfResolveFails","pathParts","part","asyncAction","deprecated","deep","proxy","Error","identity","isInteger","Number","isFinite","Math","floor","proto","getPrototypeOf","RegExp","writable","EventHandler","handlers","atTheBeginning","f","event","eventHandlers","stringStartsWith","str","beginning","msg","console","warn","generator","spawner","runId","baseContext","wrap","Promise","reject","gen","init","onFulfilled","ret","setImmediate","onRejected","err","throw","done","then","createFlowSpawner","op","oldValue","replace","getPathStr","split","shift","ids","MapIdentifierMode$$1","needsIdentifierError","tryCollectModelTypes","modelTypes","ModelType$$1","OptionalValue$$1","Union$$1","types","Late$$1","getSubType","MSTMap","initialData","ref","enhancer","put","mapType","identifierMode","NO","YES","mapIdentifierAttribute","MapType$$1","subType","UNKNOWN","flags","_determineIdentifierMode","identifierAttribute_1","objNode","willChange","didChange","change","processIdentifier","expected","processed","oldSnapshot","currentKeys","from","ArrayType$$1","item","dehancer","parseInt","reconcileArrayChildren","index_1","removedCount","added","removed","addedCount","childType","oldNodes","newValues","newPaths","oldNode","hasNewNode","oldMatch","nothingChanged","areSame","valueAsNode","j","PRE_PROCESS_SNAPSHOT","POST_PROCESS_SNAPSHOT","objectTypeToString","defaultObjectOptions","initializers","toPropertiesObject","declaredProps","props","_b","_c","optional$$1","string$$1","number$$1","boolean$$1","DatePrimitive$$1","getPrimitiveFactoryFromValue$$1","opts","test","propertyNames","_getIdentifierAttribute","forAllProps","propType","Identifier","cloneAndEnhance","preProcessor","postProcessor","instantiateActions","action2","baseAction","specializedAction_1","boundAction","actionInvoker","named","instantiateVolatileState","rest","getOwnPropertySymbols","__rest","instantiateViews","computedValue","derivation","scope","setter","preProcessSnapshot","currentPreprocessor","postProcessSnapshot","currentPostprocessor","applySnapshotPreProcessor","applySnapshotPostProcessor","applyOptionalValuesToSnapshot","optional2","tryGetOptional","getDefaultValueSnapshot","Union","find","Late","Optional","CoreType$$1","checker","initializer","String","integer$$1","Integer","Boolean","nullType$$1","Null","undefinedType$$1","Undefined","Literal$$1","Literal","literal$$1","Refinement$$1","predicate","Refinement","subtypeErrors","options","eager","dispatcher","factory","determineType","reconcileCurrentType","allErrors","applicableTypes","union$$1","optionsOrType","otherTypes","defaultValue","defaultInstanceOrSnapshot","getDefaultInstanceOrSnapshot","instanceOrSnapshot","defaultValueOrFunction","optionalUndefinedType","optionalNullType","maybe$$1","definition","_subType","mustSucceed","ReferenceError","Frozen$$1","Frozen","isSerializable","untypedFrozenInstance","StoredReference","targetType","targetNode","updateResolvedReference","normalizedId","lastCacheModification","resolvedReference","m","BaseReferenceType$$1","onInvalidated","Reference","fireInvalidated","cause","storedRefNode","referenceId","refTargetNode","storedRefParentNode","storedRefParentValue","invalidTarget","invalidId","replaceRef","newRef","removeRef","addTargetNodeWatcher","refTargetValue","hookHandler","refTargetNodeHook","hook","getInvalidationCause","refTargetDetachHookDisposer","refTargetDestroyHookDisposer","watchTargetNodeForInvalidations","customGetSet","onRefTargetDestroyedHookDisposer","startWatching","sync","IdentifierReferenceType$$1","resolvedValue","storedRef","compareByValue","CustomReferenceType$$1","newIdentifier","reference$$1","getSetOptions","IdentifierType$$1","IdentifierNumberType$$1","identifierNumber$$1","CustomType$$1","isTargetType","typeError","getValidationMessage","toSnapshot","fromSnapshot","isSnapshot","valueToStore","enumeration","realOptions","option","model","compose","typeName","prev","cur","custom","reference","safeReference","ev","union","optional","literal","maybe","maybeNull","refinement","string","boolean","number","integer","subtype","frozen","identifierNumber","late","nameOrType","maybeType","null"],"mappings":"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"},"name":"static/chunks/0d62de73.b6b22855697f1a316c12.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[11],{\n\n/***/ \"xPCX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"typecheck\", function() { return typecheck$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"escapeJsonPath\", function() { return escapeJsonPath$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unescapeJsonPath\", function() { return unescapeJsonPath$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"joinJsonPath\", function() { return joinJsonPath$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"splitJsonPath\", function() { return splitJsonPath$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decorate\", function() { return decorate$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addMiddleware\", function() { return addMiddleware$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"process\", function() { return process$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isStateTreeNode\", function() { return isStateTreeNode$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flow\", function() { return flow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"castFlowReturn\", function() { return castFlowReturn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyAction\", function() { return applyAction$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onAction\", function() { return onAction$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"recordActions\", function() { return recordActions$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createActionTrackingMiddleware\", function() { return createActionTrackingMiddleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLivelinessChecking\", function() { return setLivelinessChecking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLivelinessChecking\", function() { return getLivelinessChecking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLivelynessChecking\", function() { return setLivelynessChecking; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getType\", function() { return getType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getChildType\", function() { return getChildType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onPatch\", function() { return onPatch$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onSnapshot\", function() { return onSnapshot$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyPatch\", function() { return applyPatch$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"recordPatches\", function() { return recordPatches$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"protect\", function() { return protect$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unprotect\", function() { return unprotect$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isProtected\", function() { return isProtected$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applySnapshot\", function() { return applySnapshot$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSnapshot\", function() { return getSnapshot$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasParent\", function() { return hasParent$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getParent\", function() { return getParent$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasParentOfType\", function() { return hasParentOfType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getParentOfType\", function() { return getParentOfType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRoot\", function() { return getRoot$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPath\", function() { return getPath$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPathParts\", function() { return getPathParts$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRoot\", function() { return isRoot$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolvePath\", function() { return resolvePath$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveIdentifier\", function() { return resolveIdentifier$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIdentifier\", function() { return getIdentifier$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tryResolve\", function() { return tryResolve$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRelativePath\", function() { return getRelativePath$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"detach\", function() { return detach$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"destroy\", function() { return destroy$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAlive\", function() { return isAlive$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addDisposer\", function() { return addDisposer$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEnv\", function() { return getEnv$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"walk\", function() { return walk$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMembers\", function() { return getMembers$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPropertyMembers\", function() { return getPropertyMembers$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cast\", function() { return cast$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"castToSnapshot\", function() { return castToSnapshot$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"castToReferenceSnapshot\", function() { return castToReferenceSnapshot$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isType\", function() { return isType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArrayType\", function() { return isArrayType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFrozenType\", function() { return isFrozenType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIdentifierType\", function() { return isIdentifierType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLateType\", function() { return isLateType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLiteralType\", function() { return isLiteralType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMapType\", function() { return isMapType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isModelType\", function() { return isModelType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOptionalType\", function() { return isOptionalType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPrimitiveType\", function() { return isPrimitiveType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isReferenceType\", function() { return isReferenceType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRefinementType\", function() { return isRefinementType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUnionType\", function() { return isUnionType$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tryReference\", function() { return tryReference$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidReference\", function() { return isValidReference$$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"types\", function() { return types$$1; });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"cneo\");\n\n\nvar livelinessChecking = \"warn\";\r\n/**\r\n * Defines what MST should do when running into reads / writes to objects that have died.\r\n * By default it will print a warning.\r\n * Use the `\"error\"` option to easy debugging to see where the error was thrown and when the offending read / write took place\r\n *\r\n * @param mode `\"warn\"`, `\"error\"` or `\"ignore\"`\r\n */\r\nfunction setLivelinessChecking(mode) {\r\n    livelinessChecking = mode;\r\n}\r\n/**\r\n * Returns the current liveliness checking mode.\r\n *\r\n * @returns `\"warn\"`, `\"error\"` or `\"ignore\"`\r\n */\r\nfunction getLivelinessChecking() {\r\n    return livelinessChecking;\r\n}\r\n/**\r\n * @deprecated use setLivelinessChecking instead\r\n * @hidden\r\n *\r\n * Defines what MST should do when running into reads / writes to objects that have died.\r\n * By default it will print a warning.\r\n * Use the `\"error\"` option to easy debugging to see where the error was thrown and when the offending read / write took place\r\n *\r\n * @param mode `\"warn\"`, `\"error\"` or `\"ignore\"`\r\n */\r\nfunction setLivelynessChecking(mode) {\r\n    setLivelinessChecking(mode);\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar Hook;\r\n(function (Hook) {\r\n    Hook[\"afterCreate\"] = \"afterCreate\";\r\n    Hook[\"afterAttach\"] = \"afterAttach\";\r\n    Hook[\"afterCreationFinalization\"] = \"afterCreationFinalization\";\r\n    Hook[\"beforeDetach\"] = \"beforeDetach\";\r\n    Hook[\"beforeDestroy\"] = \"beforeDestroy\";\r\n})(Hook || (Hook = {}));\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\n\n/**\r\n * Returns the _actual_ type of the given tree node. (Or throws)\r\n *\r\n * @param object\r\n * @returns\r\n */\r\nfunction getType$$1(object) {\r\n    return getStateTreeNode$$1(object).type;\r\n}\r\n/**\r\n * Returns the _declared_ type of the given sub property of an object, array or map.\r\n *\r\n * Example:\r\n * ```ts\r\n * const Box = types.model({ x: 0, y: 0 })\r\n * const box = Box.create()\r\n *\r\n * console.log(getChildType(box, \"x\").name) // 'number'\r\n * ```\r\n *\r\n * @param object\r\n * @param child\r\n * @returns\r\n */\r\nfunction getChildType$$1(object, child) {\r\n    return getStateTreeNode$$1(object).getChildType(child);\r\n}\r\n/**\r\n * Registers a function that will be invoked for each mutation that is applied to the provided model instance, or to any of its children.\r\n * See [patches](https://github.com/mobxjs/mobx-state-tree#patches) for more details. onPatch events are emitted immediately and will not await the end of a transaction.\r\n * Patches can be used to deep observe a model tree.\r\n *\r\n * @param target the model instance from which to receive patches\r\n * @param callback the callback that is invoked for each patch. The reversePatch is a patch that would actually undo the emitted patch\r\n * @returns function to remove the listener\r\n */\r\nfunction onPatch$$1(target, callback) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).onPatch(callback);\r\n}\r\n/**\r\n * Registers a function that is invoked whenever a new snapshot for the given model instance is available.\r\n * The listener will only be fire at the and of the current MobX (trans)action.\r\n * See [snapshots](https://github.com/mobxjs/mobx-state-tree#snapshots) for more details.\r\n *\r\n * @param target\r\n * @param callback\r\n * @returns\r\n */\r\nfunction onSnapshot$$1(target, callback) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).onSnapshot(callback);\r\n}\r\n/**\r\n * Applies a JSON-patch to the given model instance or bails out if the patch couldn't be applied\r\n * See [patches](https://github.com/mobxjs/mobx-state-tree#patches) for more details.\r\n *\r\n * Can apply a single past, or an array of patches.\r\n *\r\n * @param target\r\n * @param patch\r\n * @returns\r\n */\r\nfunction applyPatch$$1(target, patch) {\r\n    // check all arguments\r\n    if (false) {}\r\n    getStateTreeNode$$1(target).applyPatches(asArray(patch));\r\n}\r\n/**\r\n * Small abstraction around `onPatch` and `applyPatch`, attaches a patch listener to a tree and records all the patches.\r\n * Returns an recorder object with the following signature:\r\n *\r\n * Example:\r\n * ```ts\r\n * export interface IPatchRecorder {\r\n *      // the recorded patches\r\n *      patches: IJsonPatch[]\r\n *      // the inverse of the recorded patches\r\n *      inversePatches: IJsonPatch[]\r\n *      // stop recording patches\r\n *      stop(target?: IStateTreeNode): any\r\n *      // resume recording patches\r\n *      resume()\r\n *      // apply all the recorded patches on the given target (the original subject if omitted)\r\n *      replay(target?: IStateTreeNode): any\r\n *      // reverse apply the recorded patches on the given target  (the original subject if omitted)\r\n *      // stops the recorder if not already stopped\r\n *      undo(): void\r\n * }\r\n * ```\r\n *\r\n * @param subject\r\n * @returns\r\n */\r\nfunction recordPatches$$1(subject) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var disposer = null;\r\n    function resume() {\r\n        if (disposer)\r\n            return;\r\n        disposer = onPatch$$1(subject, function (patch, inversePatch) {\r\n            recorder.rawPatches.push([patch, inversePatch]);\r\n        });\r\n    }\r\n    var recorder = {\r\n        rawPatches: [],\r\n        get patches() {\r\n            return this.rawPatches.map(function (_a) {\r\n                var a = _a[0];\r\n                return a;\r\n            });\r\n        },\r\n        get inversePatches() {\r\n            return this.rawPatches.map(function (_a) {\r\n                var _ = _a[0], b = _a[1];\r\n                return b;\r\n            });\r\n        },\r\n        stop: function () {\r\n            if (disposer)\r\n                disposer();\r\n            disposer = null;\r\n        },\r\n        resume: resume,\r\n        replay: function (target) {\r\n            applyPatch$$1(target || subject, recorder.patches);\r\n        },\r\n        undo: function (target) {\r\n            applyPatch$$1(target || subject, recorder.inversePatches.slice().reverse());\r\n        }\r\n    };\r\n    resume();\r\n    return recorder;\r\n}\r\n/**\r\n * The inverse of `unprotect`.\r\n *\r\n * @param {IStateTreeNode} target\r\n */\r\nfunction protect$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target);\r\n    if (!node.isRoot)\r\n        fail(\"`protect` can only be invoked on root nodes\");\r\n    node.isProtectionEnabled = true;\r\n}\r\n/**\r\n * By default it is not allowed to directly modify a model. Models can only be modified through actions.\r\n * However, in some cases you don't care about the advantages (like replayability, traceability, etc) this yields.\r\n * For example because you are building a PoC or don't have any middleware attached to your tree.\r\n *\r\n * In that case you can disable this protection by calling `unprotect` on the root of your tree.\r\n *\r\n * Example:\r\n * ```ts\r\n * const Todo = types.model({\r\n *     done: false\r\n * }).actions(self => ({\r\n *     toggle() {\r\n *         self.done = !self.done\r\n *     }\r\n * }))\r\n *\r\n * const todo = Todo.create()\r\n * todo.done = true // throws!\r\n * todo.toggle() // OK\r\n * unprotect(todo)\r\n * todo.done = false // OK\r\n * ```\r\n */\r\nfunction unprotect$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target);\r\n    if (!node.isRoot)\r\n        fail(\"`unprotect` can only be invoked on root nodes\");\r\n    node.isProtectionEnabled = false;\r\n}\r\n/**\r\n * Returns true if the object is in protected mode, @see protect\r\n */\r\nfunction isProtected$$1(target) {\r\n    return getStateTreeNode$$1(target).isProtected;\r\n}\r\n/**\r\n * Applies a snapshot to a given model instances. Patch and snapshot listeners will be invoked as usual.\r\n *\r\n * @param target\r\n * @param snapshot\r\n * @returns\r\n */\r\nfunction applySnapshot$$1(target, snapshot) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).applySnapshot(snapshot);\r\n}\r\n/**\r\n * Calculates a snapshot from the given model instance. The snapshot will always reflect the latest state but use\r\n * structural sharing where possible. Doesn't require MobX transactions to be completed.\r\n *\r\n * @param target\r\n * @param applyPostProcess If true (the default) then postProcessSnapshot gets applied.\r\n * @returns\r\n */\r\nfunction getSnapshot$$1(target, applyPostProcess) {\r\n    if (applyPostProcess === void 0) { applyPostProcess = true; }\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target);\r\n    if (applyPostProcess)\r\n        return node.snapshot;\r\n    return freeze(node.type.getSnapshot(node, false));\r\n}\r\n/**\r\n * Given a model instance, returns `true` if the object has a parent, that is, is part of another object, map or array.\r\n *\r\n * @param target\r\n * @param depth How far should we look upward? 1 by default.\r\n * @returns\r\n */\r\nfunction hasParent$$1(target, depth) {\r\n    if (depth === void 0) { depth = 1; }\r\n    // check all arguments\r\n    if (false) {}\r\n    var parent = getStateTreeNode$$1(target).parent;\r\n    while (parent) {\r\n        if (--depth === 0)\r\n            return true;\r\n        parent = parent.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns the immediate parent of this object, or throws.\r\n *\r\n * Note that the immediate parent can be either an object, map or array, and\r\n * doesn't necessarily refer to the parent model.\r\n *\r\n * Please note that in child nodes access to the root is only possible\r\n * once the `afterAttach` hook has fired.\r\n *\r\n * @param target\r\n * @param depth How far should we look upward? 1 by default.\r\n * @returns\r\n */\r\nfunction getParent$$1(target, depth) {\r\n    if (depth === void 0) { depth = 1; }\r\n    // check all arguments\r\n    if (false) {}\r\n    var d = depth;\r\n    var parent = getStateTreeNode$$1(target).parent;\r\n    while (parent) {\r\n        if (--d === 0)\r\n            return parent.storedValue;\r\n        parent = parent.parent;\r\n    }\r\n    return fail(\"Failed to find the parent of \" + getStateTreeNode$$1(target) + \" at depth \" + depth);\r\n}\r\n/**\r\n * Given a model instance, returns `true` if the object has a parent of given type, that is, is part of another object, map or array\r\n *\r\n * @param target\r\n * @param type\r\n * @returns\r\n */\r\nfunction hasParentOfType$$1(target, type) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var parent = getStateTreeNode$$1(target).parent;\r\n    while (parent) {\r\n        if (type.is(parent.storedValue))\r\n            return true;\r\n        parent = parent.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns the target's parent of a given type, or throws.\r\n *\r\n * @param target\r\n * @param type\r\n * @returns\r\n */\r\nfunction getParentOfType$$1(target, type) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var parent = getStateTreeNode$$1(target).parent;\r\n    while (parent) {\r\n        if (type.is(parent.storedValue))\r\n            return parent.storedValue;\r\n        parent = parent.parent;\r\n    }\r\n    return fail(\"Failed to find the parent of \" + getStateTreeNode$$1(target) + \" of a given type\");\r\n}\r\n/**\r\n * Given an object in a model tree, returns the root object of that tree.\r\n *\r\n * Please note that in child nodes access to the root is only possible\r\n * once the `afterAttach` hook has fired.\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction getRoot$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).root.storedValue;\r\n}\r\n/**\r\n * Returns the path of the given object in the model tree\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction getPath$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).path;\r\n}\r\n/**\r\n * Returns the path of the given object as unescaped string array.\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction getPathParts$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return splitJsonPath$$1(getStateTreeNode$$1(target).path);\r\n}\r\n/**\r\n * Returns true if the given object is the root of a model tree.\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction isRoot$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).isRoot;\r\n}\r\n/**\r\n * Resolves a path relatively to a given object.\r\n * Returns undefined if no value can be found.\r\n *\r\n * @param target\r\n * @param path escaped json path\r\n * @returns\r\n */\r\nfunction resolvePath$$1(target, path) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = resolveNodeByPath$$1(getStateTreeNode$$1(target), path);\r\n    return node ? node.value : undefined;\r\n}\r\n/**\r\n * Resolves a model instance given a root target, the type and the identifier you are searching for.\r\n * Returns undefined if no value can be found.\r\n *\r\n * @param type\r\n * @param target\r\n * @param identifier\r\n * @returns\r\n */\r\nfunction resolveIdentifier$$1(type, target, identifier$$1) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target).root.identifierCache.resolve(type, normalizeIdentifier$$1(identifier$$1));\r\n    return node ? node.value : undefined;\r\n}\r\n/**\r\n * Returns the identifier of the target node.\r\n * This is the *string normalized* identifier, which might not match the type of the identifier attribute\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction getIdentifier$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).identifier;\r\n}\r\n/**\r\n * Tests if a reference is valid (pointing to an existing node and optionally if alive) and returns such reference if it the check passes,\r\n * else it returns undefined.\r\n *\r\n * @param getter Function to access the reference.\r\n * @param checkIfAlive true to also make sure the referenced node is alive (default), false to skip this check.\r\n * @returns\r\n */\r\nfunction tryReference$$1(getter, checkIfAlive) {\r\n    if (checkIfAlive === void 0) { checkIfAlive = true; }\r\n    try {\r\n        var node = getter();\r\n        if (node === undefined || node === null) {\r\n            return undefined;\r\n        }\r\n        else if (isStateTreeNode$$1(node)) {\r\n            if (!checkIfAlive) {\r\n                return node;\r\n            }\r\n            else {\r\n                return isAlive$$1(node) ? node : undefined;\r\n            }\r\n        }\r\n        else {\r\n            return fail(\"The reference to be checked is not one of node, null or undefined\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        if (e instanceof InvalidReferenceError$$1) {\r\n            return undefined;\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n/**\r\n * Tests if a reference is valid (pointing to an existing node and optionally if alive) and returns if the check passes or not.\r\n *\r\n * @param getter Function to access the reference.\r\n * @param checkIfAlive true to also make sure the referenced node is alive (default), false to skip this check.\r\n * @returns\r\n */\r\nfunction isValidReference$$1(getter, checkIfAlive) {\r\n    if (checkIfAlive === void 0) { checkIfAlive = true; }\r\n    try {\r\n        var node = getter();\r\n        if (node === undefined || node === null) {\r\n            return false;\r\n        }\r\n        else if (isStateTreeNode$$1(node)) {\r\n            return checkIfAlive ? isAlive$$1(node) : true;\r\n        }\r\n        else {\r\n            return fail(\"The reference to be checked is not one of node, null or undefined\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        if (e instanceof InvalidReferenceError$$1) {\r\n            return false;\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n/**\r\n * Try to resolve a given path relative to a given node.\r\n *\r\n * @param target\r\n * @param path\r\n * @returns\r\n */\r\nfunction tryResolve$$1(target, path) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = resolveNodeByPath$$1(getStateTreeNode$$1(target), path, false);\r\n    if (node === undefined)\r\n        return undefined;\r\n    try {\r\n        return node.value;\r\n    }\r\n    catch (e) {\r\n        // For what ever reason not resolvable (e.g. totally not existing path, or value that cannot be fetched)\r\n        // see test / issue: 'try resolve doesn't work #686'\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Given two state tree nodes that are part of the same tree,\r\n * returns the shortest jsonpath needed to navigate from the one to the other\r\n *\r\n * @param base\r\n * @param target\r\n * @returns\r\n */\r\nfunction getRelativePath$$1(base, target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getRelativePathBetweenNodes$$1(getStateTreeNode$$1(base), getStateTreeNode$$1(target));\r\n}\r\n/**\r\n * Returns a deep copy of the given state tree node as new tree.\r\n * Short hand for `snapshot(x) = getType(x).create(getSnapshot(x))`\r\n *\r\n * _Tip: clone will create a literal copy, including the same identifiers. To modify identifiers etc during cloning, don't use clone but take a snapshot of the tree, modify it, and create new instance_\r\n *\r\n * @param source\r\n * @param keepEnvironment indicates whether the clone should inherit the same environment (`true`, the default), or not have an environment (`false`). If an object is passed in as second argument, that will act as the environment for the cloned tree.\r\n * @returns\r\n */\r\nfunction clone$$1(source, keepEnvironment) {\r\n    if (keepEnvironment === void 0) { keepEnvironment = true; }\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(source);\r\n    return node.type.create(node.snapshot, keepEnvironment === true\r\n        ? node.root.environment\r\n        : keepEnvironment === false\r\n            ? undefined\r\n            : keepEnvironment); // it's an object or something else\r\n}\r\n/**\r\n * Removes a model element from the state tree, and let it live on as a new state tree\r\n */\r\nfunction detach$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    getStateTreeNode$$1(target).detach();\r\n    return target;\r\n}\r\n/**\r\n * Removes a model element from the state tree, and mark it as end-of-life; the element should not be used anymore\r\n */\r\nfunction destroy$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target);\r\n    if (node.isRoot)\r\n        node.die();\r\n    else\r\n        node.parent.removeChild(node.subpath);\r\n}\r\n/**\r\n * Returns true if the given state tree node is not killed yet.\r\n * This means that the node is still a part of a tree, and that `destroy`\r\n * has not been called. If a node is not alive anymore, the only thing one can do with it\r\n * is requesting it's last path and snapshot\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction isAlive$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    return getStateTreeNode$$1(target).observableIsAlive;\r\n}\r\n/**\r\n * Use this utility to register a function that should be called whenever the\r\n * targeted state tree node is destroyed. This is a useful alternative to managing\r\n * cleanup methods yourself using the `beforeDestroy` hook.\r\n *\r\n * This methods returns the same disposer that was passed as argument.\r\n *\r\n * Example:\r\n * ```ts\r\n * const Todo = types.model({\r\n *   title: types.string\r\n * }).actions(self => ({\r\n *   afterCreate() {\r\n *     const autoSaveDisposer = reaction(\r\n *       () => getSnapshot(self),\r\n *       snapshot => sendSnapshotToServerSomehow(snapshot)\r\n *     )\r\n *     // stop sending updates to server if this\r\n *     // instance is destroyed\r\n *     addDisposer(self, autoSaveDisposer)\r\n *   }\r\n * }))\r\n * ```\r\n *\r\n * @param target\r\n * @param disposer\r\n * @returns The same disposer that was passed as argument\r\n */\r\nfunction addDisposer$$1(target, disposer) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target);\r\n    node.addDisposer(disposer);\r\n    return disposer;\r\n}\r\n/**\r\n * Returns the environment of the current state tree. For more info on environments,\r\n * see [Dependency injection](https://github.com/mobxjs/mobx-state-tree#dependency-injection)\r\n *\r\n * Please note that in child nodes access to the root is only possible\r\n * once the `afterAttach` hook has fired\r\n *\r\n * Returns an empty environment if the tree wasn't initialized with an environment\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction getEnv$$1(target) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target);\r\n    var env = node.root.environment;\r\n    if (!!!env)\r\n        return EMPTY_OBJECT;\r\n    return env;\r\n}\r\n/**\r\n * Performs a depth first walk through a tree.\r\n */\r\nfunction walk$$1(target, processor) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var node = getStateTreeNode$$1(target);\r\n    // tslint:disable-next-line:no_unused-variable\r\n    node.getChildren().forEach(function (child) {\r\n        if (isStateTreeNode$$1(child.storedValue))\r\n            walk$$1(child.storedValue, processor);\r\n    });\r\n    processor(node.storedValue);\r\n}\r\n/**\r\n * Returns a reflection of the model type properties and name for either a model type or model node.\r\n *\r\n * @param typeOrNode\r\n * @returns\r\n */\r\nfunction getPropertyMembers$$1(typeOrNode) {\r\n    var type;\r\n    if (isStateTreeNode$$1(typeOrNode)) {\r\n        type = getType$$1(typeOrNode);\r\n    }\r\n    else {\r\n        type = typeOrNode;\r\n    }\r\n    if (false) {}\r\n    return {\r\n        name: type.name,\r\n        properties: __assign({}, type.properties)\r\n    };\r\n}\r\n/**\r\n * Returns a reflection of the model node, including name, properties, views, volatile and actions.\r\n *\r\n * @param target\r\n * @returns\r\n */\r\nfunction getMembers$$1(target) {\r\n    var type = getStateTreeNode$$1(target).type;\r\n    var reflected = __assign({}, getPropertyMembers$$1(type), { actions: [], volatile: [], views: [] });\r\n    var props = Object.getOwnPropertyNames(target);\r\n    props.forEach(function (key) {\r\n        if (key in reflected.properties)\r\n            return;\r\n        var descriptor = Object.getOwnPropertyDescriptor(target, key);\r\n        if (descriptor.get) {\r\n            if (Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"isComputedProp\"])(target, key))\r\n                reflected.views.push(key);\r\n            else\r\n                reflected.volatile.push(key);\r\n            return;\r\n        }\r\n        if (descriptor.value._isMSTAction === true)\r\n            reflected.actions.push(key);\r\n        else if (Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"isObservableProp\"])(target, key))\r\n            reflected.volatile.push(key);\r\n        else\r\n            reflected.views.push(key);\r\n    });\r\n    return reflected;\r\n}\r\n/**\r\n * Casts a node snapshot or instance type to an instance type so it can be assigned to a type instance.\r\n * Note that this is just a cast for the type system, this is, it won't actually convert a snapshot to an instance,\r\n * but just fool typescript into thinking so.\r\n * Either way, casting when outside an assignation operation won't compile.\r\n *\r\n * Example:\r\n * ```ts\r\n * const ModelA = types.model({\r\n *   n: types.number\r\n * }).actions(self => ({\r\n *   setN(aNumber: number) {\r\n *     self.n = aNumber\r\n *   }\r\n * }))\r\n *\r\n * const ModelB = types.model({\r\n *   innerModel: ModelA\r\n * }).actions(self => ({\r\n *   someAction() {\r\n *     // this will allow the compiler to assign a snapshot to the property\r\n *     self.innerModel = cast({ a: 5 })\r\n *   }\r\n * }))\r\n * ```\r\n *\r\n * @param snapshotOrInstance Snapshot or instance\r\n * @returns The same object casted as an instance\r\n */\r\nfunction cast$$1(snapshotOrInstance) {\r\n    return snapshotOrInstance;\r\n}\r\n/**\r\n * Casts a node instance type to an snapshot type so it can be assigned to a type snapshot (e.g. to be used inside a create call).\r\n * Note that this is just a cast for the type system, this is, it won't actually convert an instance to a snapshot,\r\n * but just fool typescript into thinking so.\r\n *\r\n * Example:\r\n * ```ts\r\n * const ModelA = types.model({\r\n *   n: types.number\r\n * }).actions(self => ({\r\n *   setN(aNumber: number) {\r\n *     self.n = aNumber\r\n *   }\r\n * }))\r\n *\r\n * const ModelB = types.model({\r\n *   innerModel: ModelA\r\n * })\r\n *\r\n * const a = ModelA.create({ n: 5 });\r\n * // this will allow the compiler to use a model as if it were a snapshot\r\n * const b = ModelB.create({ innerModel: castToSnapshot(a)})\r\n * ```\r\n *\r\n * @param snapshotOrInstance Snapshot or instance\r\n * @returns The same object casted as an input (creation) snapshot\r\n */\r\nfunction castToSnapshot$$1(snapshotOrInstance) {\r\n    return snapshotOrInstance;\r\n}\r\n/**\r\n * Casts a node instance type to a reference snapshot type so it can be assigned to a refernence snapshot (e.g. to be used inside a create call).\r\n * Note that this is just a cast for the type system, this is, it won't actually convert an instance to a refererence snapshot,\r\n * but just fool typescript into thinking so.\r\n *\r\n * Example:\r\n * ```ts\r\n * const ModelA = types.model({\r\n *   id: types.identifier,\r\n *   n: types.number\r\n * }).actions(self => ({\r\n *   setN(aNumber: number) {\r\n *     self.n = aNumber\r\n *   }\r\n * }))\r\n *\r\n * const ModelB = types.model({\r\n *   refA: types.reference(ModelA)\r\n * })\r\n *\r\n * const a = ModelA.create({ id: 'someId', n: 5 });\r\n * // this will allow the compiler to use a model as if it were a reference snapshot\r\n * const b = ModelB.create({ refA: castToReference(a)})\r\n * ```\r\n *\r\n * @param instance Instance\r\n * @returns The same object casted as an reference snapshot (string or number)\r\n */\r\nfunction castToReferenceSnapshot$$1(instance) {\r\n    return instance;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar BaseNode$$1 = /** @class */ (function () {\r\n    function BaseNode$$1(type, parent, subpath, environment) {\r\n        this._state = NodeLifeCycle$$1.INITIALIZING;\r\n        this.hookSubscribers = new EventHandlers();\r\n        this.environment = undefined;\r\n        this.environment = environment;\r\n        this.type = type;\r\n        this.baseSetParent(parent, subpath);\r\n    }\r\n    Object.defineProperty(BaseNode$$1.prototype, \"subpath\", {\r\n        get: function () {\r\n            return this._subpath;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseNode$$1.prototype, \"state\", {\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        set: function (val) {\r\n            var wasAlive = this.isAlive;\r\n            this._state = val;\r\n            var isAlive = this.isAlive;\r\n            if (this.aliveAtom && wasAlive !== isAlive) {\r\n                this.aliveAtom.reportChanged();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseNode$$1.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseNode$$1.prototype.baseSetParent = function (parent, subpath) {\r\n        this._parent = parent;\r\n        this._subpath = subpath;\r\n        this._escapedSubpath = undefined; // regenerate when needed\r\n        if (this.pathAtom) {\r\n            this.pathAtom.reportChanged();\r\n        }\r\n    };\r\n    Object.defineProperty(BaseNode$$1.prototype, \"path\", {\r\n        /*\r\n         * Returns (escaped) path representation as string\r\n         */\r\n        get: function () {\r\n            if (!this.pathAtom) {\r\n                this.pathAtom = Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"createAtom\"])(\"path\");\r\n            }\r\n            this.pathAtom.reportObserved();\r\n            if (!this.parent)\r\n                return \"\";\r\n            // regenerate escaped subpath if needed\r\n            if (this._escapedSubpath === undefined) {\r\n                this._escapedSubpath = !this._subpath ? \"\" : escapeJsonPath$$1(this._subpath);\r\n            }\r\n            return this.parent.path + \"/\" + this._escapedSubpath;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseNode$$1.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.parent === null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseNode$$1.prototype.fireInternalHook = function (name) {\r\n        this.hookSubscribers.emit(name, this, name);\r\n    };\r\n    Object.defineProperty(BaseNode$$1.prototype, \"isAlive\", {\r\n        get: function () {\r\n            return this.state !== NodeLifeCycle$$1.DEAD;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseNode$$1.prototype, \"observableIsAlive\", {\r\n        get: function () {\r\n            if (!this.aliveAtom) {\r\n                this.aliveAtom = Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"createAtom\"])(\"alive\");\r\n            }\r\n            this.aliveAtom.reportObserved();\r\n            return this.isAlive;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseNode$$1.prototype.baseFinalizeCreation = function (whenFinalized) {\r\n        // goal: afterCreate hooks runs depth-first. After attach runs parent first, so on afterAttach the parent has completed already\r\n        if (this.state === NodeLifeCycle$$1.CREATED) {\r\n            if (this.parent) {\r\n                if (this.parent.state !== NodeLifeCycle$$1.FINALIZED) {\r\n                    // parent not ready yet, postpone\r\n                    return;\r\n                }\r\n                this.fireHook(Hook.afterAttach);\r\n            }\r\n            this.state = NodeLifeCycle$$1.FINALIZED;\r\n            if (whenFinalized) {\r\n                whenFinalized();\r\n            }\r\n        }\r\n    };\r\n    BaseNode$$1.prototype.baseFinalizeDeath = function () {\r\n        this.hookSubscribers.clearAll();\r\n        this.baseSetParent(null, \"\");\r\n        this.state = NodeLifeCycle$$1.DEAD;\r\n    };\r\n    BaseNode$$1.prototype.baseAboutToDie = function () {\r\n        this.fireHook(Hook.beforeDestroy);\r\n    };\r\n    return BaseNode$$1;\r\n}());\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar ScalarNode$$1 = /** @class */ (function (_super) {\r\n    __extends(ScalarNode$$1, _super);\r\n    // note about hooks:\r\n    // - afterCreate is not emmited in scalar nodes, since it would be emitted in the\r\n    //   constructor, before it can be subscribed by anybody\r\n    // - afterCreationFinalization could be emitted, but there's no need for it right now\r\n    // - beforeDetach is never emitted for scalar nodes, since they cannot be detached\r\n    function ScalarNode$$1(type, parent, subpath, environment, initialSnapshot) {\r\n        var _this = _super.call(this, type, parent, subpath, environment) || this;\r\n        try {\r\n            _this.storedValue = type.createNewInstance(_this, {}, initialSnapshot);\r\n        }\r\n        catch (e) {\r\n            // short-cut to die the instance, to avoid the snapshot computed starting to throw...\r\n            _this.state = NodeLifeCycle$$1.DEAD;\r\n            throw e;\r\n        }\r\n        _this.state = NodeLifeCycle$$1.CREATED;\r\n        // for scalar nodes there's no point in firing this event since it would fire on the constructor, before\r\n        // anybody can actually register for/listen to it\r\n        // this.fireHook(Hook.AfterCreate)\r\n        _this.finalizeCreation();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ScalarNode$$1.prototype, \"root\", {\r\n        get: function () {\r\n            // future optimization: store root ref in the node and maintain it\r\n            if (!this.parent)\r\n                return fail(\"This scalar node is not part of a tree\");\r\n            return this.parent.root;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScalarNode$$1.prototype.setParent = function (newParent, subpath) {\r\n        if (subpath === void 0) { subpath = null; }\r\n        if (this.parent === newParent && this.subpath === subpath)\r\n            return;\r\n        if (this.parent && !newParent) {\r\n            this.die();\r\n        }\r\n        else {\r\n            var newPath = subpath === null ? \"\" : subpath;\r\n            if (newParent && newParent !== this.parent) {\r\n                fail(\"assertion failed: scalar nodes cannot change their parent\");\r\n            }\r\n            else if (this.subpath !== newPath) {\r\n                this.baseSetParent(this.parent, newPath);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ScalarNode$$1.prototype, \"value\", {\r\n        get: function () {\r\n            // if we ever find a case where scalar nodes can be accessed without iterating through its parent\r\n            // uncomment this to make sure the parent chain is created when this is accessed\r\n            // if (this.parent) {\r\n            //     this.parent.createObservableInstanceIfNeeded()\r\n            // }\r\n            return this.type.getValue(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ScalarNode$$1.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return freeze(this.getSnapshot());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScalarNode$$1.prototype.getSnapshot = function () {\r\n        return this.type.getSnapshot(this);\r\n    };\r\n    ScalarNode$$1.prototype.toString = function () {\r\n        return this.type.name + \"@\" + (this.path || \"<root>\") + (this.isAlive ? \"\" : \"[dead]\");\r\n    };\r\n    ScalarNode$$1.prototype.die = function () {\r\n        if (this.state === NodeLifeCycle$$1.DETACHING)\r\n            return;\r\n        this.aboutToDie();\r\n        this.finalizeDeath();\r\n    };\r\n    ScalarNode$$1.prototype.finalizeCreation = function () {\r\n        this.baseFinalizeCreation();\r\n    };\r\n    ScalarNode$$1.prototype.aboutToDie = function () {\r\n        this.baseAboutToDie();\r\n    };\r\n    ScalarNode$$1.prototype.finalizeDeath = function () {\r\n        this.baseFinalizeDeath();\r\n    };\r\n    ScalarNode$$1.prototype.fireHook = function (name) {\r\n        this.fireInternalHook(name);\r\n    };\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], ScalarNode$$1.prototype, \"die\", null);\r\n    return ScalarNode$$1;\r\n}(BaseNode$$1));\n\nvar nextNodeId = 1;\r\nvar snapshotReactionOptions = {\r\n    onError: function (e) {\r\n        throw e;\r\n    }\r\n};\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar ObjectNode$$1 = /** @class */ (function (_super) {\r\n    __extends(ObjectNode$$1, _super);\r\n    function ObjectNode$$1(type, parent, subpath, environment, initialSnapshot) {\r\n        var _this = _super.call(this, type, parent, subpath, environment) || this;\r\n        _this.nodeId = ++nextNodeId;\r\n        _this.isProtectionEnabled = true;\r\n        _this.middlewares = null;\r\n        _this._autoUnbox = true; // unboxing is disabled when reading child nodes\r\n        _this._isRunningAction = false; // only relevant for root\r\n        _this._hasSnapshotReaction = false;\r\n        _this._internalEvents = new EventHandlers();\r\n        _this._observableInstanceState = 0 /* UNINITIALIZED */;\r\n        _this._cachedInitialSnapshot = null;\r\n        // this method must be bound\r\n        _this.unbox = function (childNode) {\r\n            if (childNode)\r\n                _this.assertAlive();\r\n            if (childNode && _this._autoUnbox)\r\n                return childNode.value;\r\n            return childNode;\r\n        };\r\n        _this._initialSnapshot = freeze(initialSnapshot);\r\n        _this.identifierAttribute = type.identifierAttribute;\r\n        if (!parent) {\r\n            _this.identifierCache = new IdentifierCache$$1();\r\n        }\r\n        _this._childNodes = type.initializeChildNodes(_this, _this._initialSnapshot);\r\n        // identifier can not be changed during lifecycle of a node\r\n        // so we safely can read it from initial snapshot\r\n        _this.identifier = null;\r\n        _this.unnormalizedIdentifier = null;\r\n        if (_this.identifierAttribute && _this._initialSnapshot) {\r\n            var id = _this._initialSnapshot[_this.identifierAttribute];\r\n            if (id === undefined) {\r\n                // try with the actual node if not (for optional identifiers)\r\n                var childNode = _this._childNodes[_this.identifierAttribute];\r\n                if (childNode) {\r\n                    id = childNode.value;\r\n                }\r\n            }\r\n            if (typeof id !== \"string\" && typeof id !== \"number\") {\r\n                fail(\"Instance identifier '\" + _this.identifierAttribute + \"' for type '\" + _this.type.name + \"' must be a string or a number\");\r\n            }\r\n            // normalize internal identifier to string\r\n            _this.identifier = normalizeIdentifier$$1(id);\r\n            _this.unnormalizedIdentifier = id;\r\n        }\r\n        if (!parent) {\r\n            _this.identifierCache.addNodeToCache(_this);\r\n        }\r\n        else {\r\n            parent.root.identifierCache.addNodeToCache(_this);\r\n        }\r\n        return _this;\r\n    }\r\n    ObjectNode$$1.prototype.applyPatches = function (patches) {\r\n        this.createObservableInstanceIfNeeded();\r\n        this._applyPatches(patches);\r\n    };\r\n    ObjectNode$$1.prototype.applySnapshot = function (snapshot) {\r\n        this.createObservableInstanceIfNeeded();\r\n        this._applySnapshot(snapshot);\r\n    };\r\n    ObjectNode$$1.prototype.createObservableInstanceIfNeeded = function () {\r\n        if (this._observableInstanceState !== 0 /* UNINITIALIZED */) {\r\n            return;\r\n        }\r\n        this._observableInstanceState = 1 /* CREATING */;\r\n        // make sure the parent chain is created as well\r\n        // array with parent chain from parent to child\r\n        var parentChain = [];\r\n        var parent = this.parent;\r\n        // for performance reasons we never go back further than the most direct\r\n        // uninitialized parent\r\n        // this is done to avoid traversing the whole tree to the root when using\r\n        // the same reference again\r\n        while (parent &&\r\n            parent._observableInstanceState === 0 /* UNINITIALIZED */) {\r\n            parentChain.unshift(parent);\r\n            parent = parent.parent;\r\n        }\r\n        // initialize the uninitialized parent chain from parent to child\r\n        for (var _i = 0, parentChain_1 = parentChain; _i < parentChain_1.length; _i++) {\r\n            var p = parentChain_1[_i];\r\n            p.createObservableInstanceIfNeeded();\r\n        }\r\n        var type = this.type;\r\n        try {\r\n            this.storedValue = type.createNewInstance(this, this._childNodes, this._initialSnapshot);\r\n            this.preboot();\r\n            this._isRunningAction = true;\r\n            type.finalizeNewInstance(this, this.storedValue);\r\n        }\r\n        catch (e) {\r\n            // short-cut to die the instance, to avoid the snapshot computed starting to throw...\r\n            this.state = NodeLifeCycle$$1.DEAD;\r\n            throw e;\r\n        }\r\n        finally {\r\n            this._isRunningAction = false;\r\n        }\r\n        this._observableInstanceState = 2 /* CREATED */;\r\n        // NOTE: we need to touch snapshot, because non-observable\r\n        // \"_observableInstanceState\" field was touched\r\n        invalidateComputed(this, \"snapshot\");\r\n        if (this.isRoot)\r\n            this._addSnapshotReaction();\r\n        this._childNodes = EMPTY_OBJECT;\r\n        this.state = NodeLifeCycle$$1.CREATED;\r\n        this.fireHook(Hook.afterCreate);\r\n        this.finalizeCreation();\r\n    };\r\n    Object.defineProperty(ObjectNode$$1.prototype, \"root\", {\r\n        get: function () {\r\n            var parent = this.parent;\r\n            return parent ? parent.root : this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObjectNode$$1.prototype.setParent = function (newParent, subpath) {\r\n        if (subpath === void 0) { subpath = null; }\r\n        if (this.parent === newParent && this.subpath === subpath)\r\n            return;\r\n        if (newParent && \"production\" !== \"production\") {\r\n            if (this.parent && newParent !== this.parent) {\r\n                fail(\"A node cannot exists twice in the state tree. Failed to add \" + this + \" to path '\" + newParent.path + \"/\" + subpath + \"'.\");\r\n            }\r\n            if (!this.parent && newParent.root === this) {\r\n                fail(\"A state tree is not allowed to contain itself. Cannot assign \" + this + \" to path '\" + newParent.path + \"/\" + subpath + \"'\");\r\n            }\r\n            if (!this.parent &&\r\n                !!this.root.environment &&\r\n                this.root.environment !== newParent.root.environment) {\r\n                fail(\"A state tree cannot be made part of another state tree as long as their environments are different.\");\r\n            }\r\n        }\r\n        if (this.parent && !newParent) {\r\n            this.die();\r\n        }\r\n        else {\r\n            var newPath = subpath === null ? \"\" : subpath;\r\n            if (newParent && newParent !== this.parent) {\r\n                newParent.root.identifierCache.mergeCache(this);\r\n                this.baseSetParent(newParent, newPath);\r\n                this.fireHook(Hook.afterAttach);\r\n            }\r\n            else if (this.subpath !== newPath) {\r\n                this.baseSetParent(this.parent, newPath);\r\n            }\r\n        }\r\n    };\r\n    ObjectNode$$1.prototype.fireHook = function (name) {\r\n        var _this = this;\r\n        this.fireInternalHook(name);\r\n        var fn = this.storedValue && typeof this.storedValue === \"object\" && this.storedValue[name];\r\n        if (typeof fn === \"function\") {\r\n            // we check for it to allow old mobx peer dependencies that don't have the method to work (even when still bugged)\r\n            if (mobx__WEBPACK_IMPORTED_MODULE_0__[\"_allowStateChangesInsideComputed\"]) {\r\n                Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"_allowStateChangesInsideComputed\"])(function () {\r\n                    fn.apply(_this.storedValue);\r\n                });\r\n            }\r\n            else {\r\n                fn.apply(this.storedValue);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ObjectNode$$1.prototype, \"value\", {\r\n        get: function () {\r\n            this.createObservableInstanceIfNeeded();\r\n            if (!this.isAlive)\r\n                return undefined;\r\n            return this.type.getValue(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectNode$$1.prototype, \"snapshot\", {\r\n        // advantage of using computed for a snapshot is that nicely respects transactions etc.\r\n        get: function () {\r\n            return freeze(this.getSnapshot());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // NOTE: we use this method to get snapshot without creating @computed overhead\r\n    ObjectNode$$1.prototype.getSnapshot = function () {\r\n        if (!this.isAlive)\r\n            return this._snapshotUponDeath;\r\n        return this._observableInstanceState === 2 /* CREATED */\r\n            ? this._getActualSnapshot()\r\n            : this._getInitialSnapshot();\r\n    };\r\n    ObjectNode$$1.prototype._getActualSnapshot = function () {\r\n        return this.type.getSnapshot(this);\r\n    };\r\n    ObjectNode$$1.prototype._getInitialSnapshot = function () {\r\n        if (!this._initialSnapshot)\r\n            return this._initialSnapshot;\r\n        if (this._cachedInitialSnapshot)\r\n            return this._cachedInitialSnapshot;\r\n        var type = this.type;\r\n        var childNodes = this._childNodes;\r\n        var snapshot = this._initialSnapshot;\r\n        this._cachedInitialSnapshot = type.processInitialSnapshot(childNodes, snapshot);\r\n        return this._cachedInitialSnapshot;\r\n    };\r\n    ObjectNode$$1.prototype.isRunningAction = function () {\r\n        if (this._isRunningAction)\r\n            return true;\r\n        if (this.isRoot)\r\n            return false;\r\n        return this.parent.isRunningAction();\r\n    };\r\n    ObjectNode$$1.prototype.assertAlive = function () {\r\n        if (!this.isAlive) {\r\n            var error = \"You are trying to read or write to an object that is no longer part of a state tree. (Object type was '\" + this.type.name + \"'). Either detach nodes first, or don't use objects after removing / replacing them in the tree.\";\r\n            switch (getLivelinessChecking()) {\r\n                case \"error\":\r\n                    return fail(error);\r\n                case \"warn\":\r\n                    warnError(error);\r\n            }\r\n        }\r\n    };\r\n    ObjectNode$$1.prototype.getChildNode = function (subpath) {\r\n        this.assertAlive();\r\n        this._autoUnbox = false;\r\n        try {\r\n            return this._observableInstanceState === 2 /* CREATED */\r\n                ? this.type.getChildNode(this, subpath)\r\n                : this._childNodes[subpath];\r\n        }\r\n        finally {\r\n            this._autoUnbox = true;\r\n        }\r\n    };\r\n    ObjectNode$$1.prototype.getChildren = function () {\r\n        this.assertAlive();\r\n        this._autoUnbox = false;\r\n        try {\r\n            return this._observableInstanceState === 2 /* CREATED */\r\n                ? this.type.getChildren(this)\r\n                : convertChildNodesToArray$$1(this._childNodes);\r\n        }\r\n        finally {\r\n            this._autoUnbox = true;\r\n        }\r\n    };\r\n    ObjectNode$$1.prototype.getChildType = function (key) {\r\n        return this.type.getChildType(key);\r\n    };\r\n    Object.defineProperty(ObjectNode$$1.prototype, \"isProtected\", {\r\n        get: function () {\r\n            return this.root.isProtectionEnabled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObjectNode$$1.prototype.assertWritable = function () {\r\n        this.assertAlive();\r\n        if (!this.isRunningAction() && this.isProtected) {\r\n            fail(\"Cannot modify '\" + this + \"', the object is protected and can only be modified by using an action.\");\r\n        }\r\n    };\r\n    ObjectNode$$1.prototype.removeChild = function (subpath) {\r\n        this.type.removeChild(this, subpath);\r\n    };\r\n    ObjectNode$$1.prototype.toString = function () {\r\n        var identifier$$1 = this.identifier ? \"(id: \" + this.identifier + \")\" : \"\";\r\n        return this.type.name + \"@\" + (this.path || \"<root>\") + identifier$$1 + (this.isAlive ? \"\" : \"[dead]\");\r\n    };\r\n    ObjectNode$$1.prototype.finalizeCreation = function () {\r\n        var _this = this;\r\n        this.baseFinalizeCreation(function () {\r\n            for (var _i = 0, _a = _this.getChildren(); _i < _a.length; _i++) {\r\n                var child = _a[_i];\r\n                child.finalizeCreation();\r\n            }\r\n            _this.fireInternalHook(Hook.afterCreationFinalization);\r\n        });\r\n    };\r\n    ObjectNode$$1.prototype.detach = function () {\r\n        if (!this.isAlive)\r\n            fail(\"Error while detaching, node is not alive.\");\r\n        if (this.isRoot)\r\n            return;\r\n        this.fireHook(Hook.beforeDetach);\r\n        this.state = NodeLifeCycle$$1.DETACHING;\r\n        this.environment = this.root.environment; // make backup of environment\r\n        this.identifierCache = this.root.identifierCache.splitCache(this);\r\n        this.parent.removeChild(this.subpath);\r\n        this.baseSetParent(null, \"\");\r\n        this.state = NodeLifeCycle$$1.FINALIZED;\r\n    };\r\n    ObjectNode$$1.prototype.preboot = function () {\r\n        var self = this;\r\n        this._applyPatches = createActionInvoker$$1(this.storedValue, \"@APPLY_PATCHES\", function (patches) {\r\n            patches.forEach(function (patch) {\r\n                var parts = splitJsonPath$$1(patch.path);\r\n                var node = resolveNodeByPathParts$$1(self, parts.slice(0, -1));\r\n                node.applyPatchLocally(parts[parts.length - 1], patch);\r\n            });\r\n        });\r\n        this._applySnapshot = createActionInvoker$$1(this.storedValue, \"@APPLY_SNAPSHOT\", function (snapshot) {\r\n            // if the snapshot is the same as the current one, avoid performing a reconcile\r\n            if (snapshot === self.snapshot)\r\n                return;\r\n            // else, apply it by calling the type logic\r\n            return self.type.applySnapshot(self, snapshot);\r\n        });\r\n        addHiddenFinalProp(this.storedValue, \"$treenode\", this);\r\n        addHiddenFinalProp(this.storedValue, \"toJSON\", toJSON$$1);\r\n    };\r\n    ObjectNode$$1.prototype.die = function () {\r\n        if (this.state === NodeLifeCycle$$1.DETACHING)\r\n            return;\r\n        if (this._observableInstanceState === 2 /* CREATED */) {\r\n            this.aboutToDie();\r\n            this.finalizeDeath();\r\n        }\r\n        else {\r\n            // get rid of own and child ids at least\r\n            this.unregisterIdentifiers();\r\n        }\r\n    };\r\n    ObjectNode$$1.prototype.aboutToDie = function () {\r\n        this.getChildren().forEach(function (node) {\r\n            node.aboutToDie();\r\n        });\r\n        // beforeDestroy should run before the disposers since else we could end up in a situation where\r\n        // a disposer added with addDisposer at this stage (beforeDestroy) is actually never released\r\n        this.baseAboutToDie();\r\n        this._internalEvents.emit(\"dispose\" /* Dispose */);\r\n        this._internalEvents.clear(\"dispose\" /* Dispose */);\r\n    };\r\n    ObjectNode$$1.prototype.unregisterIdentifiers = function () {\r\n        var _this = this;\r\n        Object.keys(this._childNodes).forEach(function (k) {\r\n            var childNode = _this._childNodes[k];\r\n            if (childNode instanceof ObjectNode$$1) {\r\n                childNode.unregisterIdentifiers();\r\n            }\r\n        });\r\n        this.root.identifierCache.notifyDied(this);\r\n    };\r\n    ObjectNode$$1.prototype.finalizeDeath = function () {\r\n        // invariant: not called directly but from \"die\"\r\n        this.getChildren().forEach(function (node) {\r\n            node.finalizeDeath();\r\n        });\r\n        this.root.identifierCache.notifyDied(this);\r\n        // \"kill\" the computed prop and just store the last snapshot\r\n        var snapshot = this.snapshot;\r\n        this._snapshotUponDeath = snapshot;\r\n        this._internalEvents.clearAll();\r\n        this.baseFinalizeDeath();\r\n    };\r\n    ObjectNode$$1.prototype.onSnapshot = function (onChange) {\r\n        this._addSnapshotReaction();\r\n        return this._internalEvents.register(\"snapshot\" /* Snapshot */, onChange);\r\n    };\r\n    ObjectNode$$1.prototype.emitSnapshot = function (snapshot) {\r\n        this._internalEvents.emit(\"snapshot\" /* Snapshot */, snapshot);\r\n    };\r\n    ObjectNode$$1.prototype.onPatch = function (handler) {\r\n        return this._internalEvents.register(\"patch\" /* Patch */, handler);\r\n    };\r\n    ObjectNode$$1.prototype.emitPatch = function (basePatch, source) {\r\n        var intEvs = this._internalEvents;\r\n        if (intEvs.hasSubscribers(\"patch\" /* Patch */)) {\r\n            var localizedPatch = extend({}, basePatch, {\r\n                path: source.path.substr(this.path.length) + \"/\" + basePatch.path // calculate the relative path of the patch\r\n            });\r\n            var _a = splitPatch$$1(localizedPatch), patch = _a[0], reversePatch = _a[1];\r\n            intEvs.emit(\"patch\" /* Patch */, patch, reversePatch);\r\n        }\r\n        if (this.parent)\r\n            this.parent.emitPatch(basePatch, source);\r\n    };\r\n    ObjectNode$$1.prototype.hasDisposer = function (disposer) {\r\n        return this._internalEvents.has(\"dispose\" /* Dispose */, disposer);\r\n    };\r\n    ObjectNode$$1.prototype.addDisposer = function (disposer) {\r\n        if (!this.hasDisposer(disposer)) {\r\n            this._internalEvents.register(\"dispose\" /* Dispose */, disposer, true);\r\n            return;\r\n        }\r\n        fail(\"cannot add a disposer when it is already registered for execution\");\r\n    };\r\n    ObjectNode$$1.prototype.removeDisposer = function (disposer) {\r\n        if (!this._internalEvents.has(\"dispose\" /* Dispose */, disposer)) {\r\n            return fail(\"cannot remove a disposer which was never registered for execution\");\r\n        }\r\n        this._internalEvents.unregister(\"dispose\" /* Dispose */, disposer);\r\n    };\r\n    ObjectNode$$1.prototype.removeMiddleware = function (handler) {\r\n        if (this.middlewares)\r\n            this.middlewares = this.middlewares.filter(function (middleware) { return middleware.handler !== handler; });\r\n    };\r\n    ObjectNode$$1.prototype.addMiddleWare = function (handler, includeHooks) {\r\n        var _this = this;\r\n        if (includeHooks === void 0) { includeHooks = true; }\r\n        if (!this.middlewares)\r\n            this.middlewares = [{ handler: handler, includeHooks: includeHooks }];\r\n        else\r\n            this.middlewares.push({ handler: handler, includeHooks: includeHooks });\r\n        return function () {\r\n            _this.removeMiddleware(handler);\r\n        };\r\n    };\r\n    ObjectNode$$1.prototype.applyPatchLocally = function (subpath, patch) {\r\n        this.assertWritable();\r\n        this.createObservableInstanceIfNeeded();\r\n        this.type.applyPatchLocally(this, subpath, patch);\r\n    };\r\n    ObjectNode$$1.prototype._addSnapshotReaction = function () {\r\n        var _this = this;\r\n        if (!this._hasSnapshotReaction) {\r\n            var snapshotDisposer = Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"reaction\"])(function () { return _this.snapshot; }, function (snapshot) { return _this.emitSnapshot(snapshot); }, snapshotReactionOptions);\r\n            this.addDisposer(snapshotDisposer);\r\n            this._hasSnapshotReaction = true;\r\n        }\r\n    };\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], ObjectNode$$1.prototype, \"createObservableInstanceIfNeeded\", null);\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"]\r\n    ], ObjectNode$$1.prototype, \"snapshot\", null);\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], ObjectNode$$1.prototype, \"detach\", null);\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], ObjectNode$$1.prototype, \"die\", null);\r\n    return ObjectNode$$1;\r\n}(BaseNode$$1));\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar TypeFlags$$1;\r\n(function (TypeFlags$$1) {\r\n    TypeFlags$$1[TypeFlags$$1[\"String\"] = 1] = \"String\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Number\"] = 2] = \"Number\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Boolean\"] = 4] = \"Boolean\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Date\"] = 8] = \"Date\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Literal\"] = 16] = \"Literal\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Array\"] = 32] = \"Array\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Map\"] = 64] = \"Map\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Object\"] = 128] = \"Object\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Frozen\"] = 256] = \"Frozen\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Optional\"] = 512] = \"Optional\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Reference\"] = 1024] = \"Reference\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Identifier\"] = 2048] = \"Identifier\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Late\"] = 4096] = \"Late\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Refinement\"] = 8192] = \"Refinement\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Union\"] = 16384] = \"Union\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Null\"] = 32768] = \"Null\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Undefined\"] = 65536] = \"Undefined\";\r\n    TypeFlags$$1[TypeFlags$$1[\"Integer\"] = 131072] = \"Integer\";\r\n})(TypeFlags$$1 || (TypeFlags$$1 = {}));\r\n/**\r\n * A complex type produces a MST node (Node in the state tree)\r\n *\r\n * @internal\r\n * @hidden\r\n */\r\nvar ComplexType$$1 = /** @class */ (function () {\r\n    function ComplexType$$1(name) {\r\n        this.isType = true;\r\n        this.name = name;\r\n    }\r\n    ComplexType$$1.prototype.create = function (snapshot, environment) {\r\n        if (snapshot === void 0) { snapshot = this.getDefaultSnapshot(); }\r\n        typecheckInternal$$1(this, snapshot);\r\n        return this.instantiate(null, \"\", environment, snapshot).value;\r\n    };\r\n    ComplexType$$1.prototype.initializeChildNodes = function (node, snapshot) {\r\n        return EMPTY_OBJECT;\r\n    };\r\n    ComplexType$$1.prototype.createNewInstance = function (node, childNodes, snapshot) {\r\n        return snapshot;\r\n    };\r\n    ComplexType$$1.prototype.finalizeNewInstance = function (node, instance) { };\r\n    ComplexType$$1.prototype.processInitialSnapshot = function (childNodes, snapshot) {\r\n        return snapshot;\r\n    };\r\n    ComplexType$$1.prototype.isAssignableFrom = function (type) {\r\n        return type === this;\r\n    };\r\n    ComplexType$$1.prototype.validate = function (value, context) {\r\n        if (isStateTreeNode$$1(value)) {\r\n            return getType$$1(value) === this || this.isAssignableFrom(getType$$1(value))\r\n                ? typeCheckSuccess$$1()\r\n                : typeCheckFailure$$1(context, value);\r\n            // it is tempting to compare snapshots, but in that case we should always clone on assignments...\r\n        }\r\n        return this.isValidSnapshot(value, context);\r\n    };\r\n    ComplexType$$1.prototype.is = function (value) {\r\n        return this.validate(value, [{ path: \"\", type: this }]).length === 0;\r\n    };\r\n    ComplexType$$1.prototype.reconcile = function (current, newValue) {\r\n        if (current.snapshot === newValue)\r\n            // newValue is the current snapshot of the node, noop\r\n            return current;\r\n        if (isStateTreeNode$$1(newValue) && getStateTreeNode$$1(newValue) === current)\r\n            // the current node is the same as the new one\r\n            return current;\r\n        if (current.type === this &&\r\n            isMutable(newValue) &&\r\n            !isStateTreeNode$$1(newValue) &&\r\n            (!current.identifierAttribute ||\r\n                current.identifier === normalizeIdentifier$$1(newValue[current.identifierAttribute]))) {\r\n            // the newValue has no node, so can be treated like a snapshot\r\n            // we can reconcile\r\n            current.applySnapshot(newValue);\r\n            return current;\r\n        }\r\n        // current node cannot be recycled in any way\r\n        var parent = current.parent, subpath = current.subpath;\r\n        current.die();\r\n        // attempt to reuse the new one\r\n        if (isStateTreeNode$$1(newValue) && this.isAssignableFrom(getType$$1(newValue))) {\r\n            // newValue is a Node as well, move it here..\r\n            var newNode = getStateTreeNode$$1(newValue);\r\n            newNode.setParent(parent, subpath);\r\n            return newNode;\r\n        }\r\n        // nothing to do, we have to create a new node\r\n        return this.instantiate(parent, subpath, current.environment, newValue);\r\n    };\r\n    Object.defineProperty(ComplexType$$1.prototype, \"Type\", {\r\n        get: function () {\r\n            return fail(\"Factory.Type should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.Type`\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ComplexType$$1.prototype, \"SnapshotType\", {\r\n        get: function () {\r\n            return fail(\"Factory.SnapshotType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.SnapshotType`\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ComplexType$$1.prototype, \"CreationType\", {\r\n        get: function () {\r\n            return fail(\"Factory.CreationType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.CreationType`\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], ComplexType$$1.prototype, \"create\", null);\r\n    return ComplexType$$1;\r\n}());\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar Type$$1 = /** @class */ (function (_super) {\r\n    __extends(Type$$1, _super);\r\n    function Type$$1(name) {\r\n        return _super.call(this, name) || this;\r\n    }\r\n    Type$$1.prototype.getValue = function (node) {\r\n        return node.storedValue;\r\n    };\r\n    Type$$1.prototype.getSnapshot = function (node) {\r\n        return node.storedValue;\r\n    };\r\n    Type$$1.prototype.getDefaultSnapshot = function () {\r\n        return undefined;\r\n    };\r\n    Type$$1.prototype.applySnapshot = function (node, snapshot) {\r\n        fail(\"Immutable types do not support applying snapshots\");\r\n    };\r\n    Type$$1.prototype.applyPatchLocally = function (node, subpath, patch) {\r\n        fail(\"Immutable types do not support applying patches\");\r\n    };\r\n    Type$$1.prototype.getChildren = function (node) {\r\n        return EMPTY_ARRAY;\r\n    };\r\n    Type$$1.prototype.getChildNode = function (node, key) {\r\n        return fail(\"No child '\" + key + \"' available in type: \" + this.name);\r\n    };\r\n    Type$$1.prototype.getChildType = function (key) {\r\n        return fail(\"No child '\" + key + \"' available in type: \" + this.name);\r\n    };\r\n    Type$$1.prototype.reconcile = function (current, newValue) {\r\n        // reconcile only if type and value are still the same\r\n        if (current.type === this && current.storedValue === newValue)\r\n            return current;\r\n        var res = this.instantiate(current.parent, current.subpath, current.environment, newValue);\r\n        current.die();\r\n        return res;\r\n    };\r\n    Type$$1.prototype.removeChild = function (node, subpath) {\r\n        return fail(\"No child '\" + subpath + \"' available in type: \" + this.name);\r\n    };\r\n    return Type$$1;\r\n}(ComplexType$$1));\r\n/**\r\n * Returns if a given value represents a type.\r\n *\r\n * @param value Value to check.\r\n * @returns `true` if the value is a type.\r\n */\r\nfunction isType$$1(value) {\r\n    return typeof value === \"object\" && value && value.isType === true;\r\n}\n\nvar runningActions = new Map();\r\n/**\r\n * Convenience utility to create action based middleware that supports async processes more easily.\r\n * All hooks are called for both synchronous and asynchronous actions. Except that either `onSuccess` or `onFail` is called\r\n *\r\n * The create middleware tracks the process of an action (assuming it passes the `filter`).\r\n * `onResume` can return any value, which will be passed as second argument to any other hook. This makes it possible to keep state during a process.\r\n *\r\n * See the `atomic` middleware for an example\r\n *\r\n * @param hooks\r\n * @returns\r\n */\r\nfunction createActionTrackingMiddleware(hooks) {\r\n    return function actionTrackingMiddleware(call, next, abort) {\r\n        switch (call.type) {\r\n            case \"action\": {\r\n                if (!hooks.filter || hooks.filter(call) === true) {\r\n                    var context = hooks.onStart(call);\r\n                    hooks.onResume(call, context);\r\n                    runningActions.set(call.id, {\r\n                        call: call,\r\n                        context: context,\r\n                        async: false\r\n                    });\r\n                    try {\r\n                        var res = next(call);\r\n                        hooks.onSuspend(call, context);\r\n                        if (runningActions.get(call.id).async === false) {\r\n                            runningActions.delete(call.id);\r\n                            hooks.onSuccess(call, context, res);\r\n                        }\r\n                        return res;\r\n                    }\r\n                    catch (e) {\r\n                        runningActions.delete(call.id);\r\n                        hooks.onFail(call, context, e);\r\n                        throw e;\r\n                    }\r\n                }\r\n                else {\r\n                    return next(call);\r\n                }\r\n            }\r\n            case \"flow_spawn\": {\r\n                var root = runningActions.get(call.rootId);\r\n                root.async = true;\r\n                return next(call);\r\n            }\r\n            case \"flow_resume\":\r\n            case \"flow_resume_error\": {\r\n                var root = runningActions.get(call.rootId);\r\n                hooks.onResume(call, root.context);\r\n                try {\r\n                    return next(call);\r\n                }\r\n                finally {\r\n                    hooks.onSuspend(call, root.context);\r\n                }\r\n            }\r\n            case \"flow_throw\": {\r\n                var root = runningActions.get(call.rootId);\r\n                runningActions.delete(call.rootId);\r\n                hooks.onFail(call, root.context, call.args[0]);\r\n                return next(call);\r\n            }\r\n            case \"flow_return\": {\r\n                var root = runningActions.get(call.rootId);\r\n                runningActions.delete(call.rootId);\r\n                hooks.onSuccess(call, root.context, call.args[0]);\r\n                return next(call);\r\n            }\r\n        }\r\n    };\r\n}\n\nfunction serializeArgument(node, actionName, index, arg) {\r\n    if (arg instanceof Date)\r\n        return { $MST_DATE: arg.getTime() };\r\n    if (isPrimitive(arg))\r\n        return arg;\r\n    // We should not serialize MST nodes, even if we can, because we don't know if the receiving party can handle a raw snapshot instead of an\r\n    // MST type instance. So if one wants to serialize a MST node that was pass in, either explitly pass: 1: an id, 2: a (relative) path, 3: a snapshot\r\n    if (isStateTreeNode$$1(arg))\r\n        return serializeTheUnserializable(\"[MSTNode: \" + getType$$1(arg).name + \"]\");\r\n    if (typeof arg === \"function\")\r\n        return serializeTheUnserializable(\"[function]\");\r\n    if (typeof arg === \"object\" && !isPlainObject(arg) && !isArray(arg))\r\n        return serializeTheUnserializable(\"[object \" + ((arg && arg.constructor && arg.constructor.name) ||\r\n            \"Complex Object\") + \"]\");\r\n    try {\r\n        // Check if serializable, cycle free etc...\r\n        // MWE: there must be a better way....\r\n        JSON.stringify(arg); // or throws\r\n        return arg;\r\n    }\r\n    catch (e) {\r\n        return serializeTheUnserializable(\"\" + e);\r\n    }\r\n}\r\nfunction deserializeArgument(adm, value) {\r\n    if (value && typeof value === \"object\" && \"$MST_DATE\" in value)\r\n        return new Date(value[\"$MST_DATE\"]);\r\n    return value;\r\n}\r\nfunction serializeTheUnserializable(baseType) {\r\n    return {\r\n        $MST_UNSERIALIZABLE: true,\r\n        type: baseType\r\n    };\r\n}\r\n/**\r\n * Applies an action or a series of actions in a single MobX transaction.\r\n * Does not return any value\r\n * Takes an action description as produced by the `onAction` middleware.\r\n *\r\n * @param target\r\n * @param actions\r\n */\r\nfunction applyAction$$1(target, actions) {\r\n    // check all arguments\r\n    if (false) {}\r\n    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"runInAction\"])(function () {\r\n        asArray(actions).forEach(function (action$$1) { return baseApplyAction(target, action$$1); });\r\n    });\r\n}\r\nfunction baseApplyAction(target, action$$1) {\r\n    var resolvedTarget = tryResolve$$1(target, action$$1.path || \"\");\r\n    if (!resolvedTarget)\r\n        return fail(\"Invalid action path: \" + (action$$1.path || \"\"));\r\n    var node = getStateTreeNode$$1(resolvedTarget);\r\n    // Reserved functions\r\n    if (action$$1.name === \"@APPLY_PATCHES\") {\r\n        return applyPatch$$1.call(null, resolvedTarget, action$$1.args[0]);\r\n    }\r\n    if (action$$1.name === \"@APPLY_SNAPSHOT\") {\r\n        return applySnapshot$$1.call(null, resolvedTarget, action$$1.args[0]);\r\n    }\r\n    if (!(typeof resolvedTarget[action$$1.name] === \"function\"))\r\n        fail(\"Action '\" + action$$1.name + \"' does not exist in '\" + node.path + \"'\");\r\n    return resolvedTarget[action$$1.name].apply(resolvedTarget, action$$1.args ? action$$1.args.map(function (v) { return deserializeArgument(node, v); }) : []);\r\n}\r\n/**\r\n * Small abstraction around `onAction` and `applyAction`, attaches an action listener to a tree and records all the actions emitted.\r\n * Returns an recorder object with the following signature:\r\n *\r\n * Example:\r\n * ```ts\r\n * export interface IActionRecorder {\r\n *      // the recorded actions\r\n *      actions: ISerializedActionCall[]\r\n *      // stop recording actions\r\n *      stop(): any\r\n *      // apply all the recorded actions on the given object\r\n *      replay(target: IStateTreeNode): any\r\n * }\r\n * ```\r\n *\r\n * @param subject\r\n * @returns\r\n */\r\nfunction recordActions$$1(subject) {\r\n    // check all arguments\r\n    if (false) {}\r\n    var recorder = {\r\n        actions: [],\r\n        stop: function () { return disposer(); },\r\n        replay: function (target) {\r\n            applyAction$$1(target, recorder.actions);\r\n        }\r\n    };\r\n    var disposer = onAction$$1(subject, recorder.actions.push.bind(recorder.actions));\r\n    return recorder;\r\n}\r\n/**\r\n * Registers a function that will be invoked for each action that is called on the provided model instance, or to any of its children.\r\n * See [actions](https://github.com/mobxjs/mobx-state-tree#actions) for more details. onAction events are emitted only for the outermost called action in the stack.\r\n * Action can also be intercepted by middleware using addMiddleware to change the function call before it will be run.\r\n *\r\n * Not all action arguments might be serializable. For unserializable arguments, a struct like `{ $MST_UNSERIALIZABLE: true, type: \"someType\" }` will be generated.\r\n * MST Nodes are considered non-serializable as well (they could be serialized as there snapshot, but it is uncertain whether an replaying party will be able to handle such a non-instantiated snapshot).\r\n * Rather, when using `onAction` middleware, one should consider in passing arguments which are 1: an id, 2: a (relative) path, or 3: a snapshot. Instead of a real MST node.\r\n *\r\n * Example:\r\n * ```ts\r\n * const Todo = types.model({\r\n *   task: types.string\r\n * })\r\n *\r\n * const TodoStore = types.model({\r\n *   todos: types.array(Todo)\r\n * }).actions(self => ({\r\n *   add(todo) {\r\n *     self.todos.push(todo);\r\n *   }\r\n * }))\r\n *\r\n * const s = TodoStore.create({ todos: [] })\r\n *\r\n * let disposer = onAction(s, (call) => {\r\n *   console.log(call);\r\n * })\r\n *\r\n * s.add({ task: \"Grab a coffee\" })\r\n * // Logs: { name: \"add\", path: \"\", args: [{ task: \"Grab a coffee\" }] }\r\n * ```\r\n *\r\n * @param target\r\n * @param listener\r\n * @param attachAfter (default false) fires the listener *after* the action has executed instead of before.\r\n * @returns\r\n */\r\nfunction onAction$$1(target, listener, attachAfter) {\r\n    if (attachAfter === void 0) { attachAfter = false; }\r\n    // check all arguments\r\n    if (false) {}\r\n    return addMiddleware$$1(target, function handler(rawCall, next) {\r\n        if (rawCall.type === \"action\" && rawCall.id === rawCall.rootId) {\r\n            var sourceNode_1 = getStateTreeNode$$1(rawCall.context);\r\n            var info = {\r\n                name: rawCall.name,\r\n                path: getRelativePathBetweenNodes$$1(getStateTreeNode$$1(target), sourceNode_1),\r\n                args: rawCall.args.map(function (arg, index) {\r\n                    return serializeArgument(sourceNode_1, rawCall.name, index, arg);\r\n                })\r\n            };\r\n            if (attachAfter) {\r\n                var res = next(rawCall);\r\n                listener(info);\r\n                return res;\r\n            }\r\n            else {\r\n                listener(info);\r\n                return next(rawCall);\r\n            }\r\n        }\r\n        else {\r\n            return next(rawCall);\r\n        }\r\n    });\r\n}\n\nvar nextActionId = 1;\r\nvar currentActionContext = null;\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction getNextActionId$$1() {\r\n    return nextActionId++;\r\n}\r\n// TODO: optimize away entire action context if there is no middleware in tree?\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction runWithActionContext$$1(context, fn) {\r\n    var node = getStateTreeNode$$1(context.context);\r\n    var baseIsRunningAction = node._isRunningAction;\r\n    var prevContext = currentActionContext;\r\n    if (context.type === \"action\") {\r\n        node.assertAlive();\r\n    }\r\n    node._isRunningAction = true;\r\n    currentActionContext = context;\r\n    try {\r\n        return runMiddleWares(node, context, fn);\r\n    }\r\n    finally {\r\n        currentActionContext = prevContext;\r\n        node._isRunningAction = baseIsRunningAction;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction getActionContext$$1() {\r\n    if (!currentActionContext)\r\n        return fail(\"Not running an action!\");\r\n    return currentActionContext;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction createActionInvoker$$1(target, name, fn) {\r\n    var res = function () {\r\n        var id = getNextActionId$$1();\r\n        return runWithActionContext$$1({\r\n            type: \"action\",\r\n            name: name,\r\n            id: id,\r\n            args: argsToArray(arguments),\r\n            context: target,\r\n            tree: getRoot$$1(target),\r\n            rootId: currentActionContext ? currentActionContext.rootId : id,\r\n            parentId: currentActionContext ? currentActionContext.id : 0,\r\n            allParentIds: currentActionContext\r\n                ? currentActionContext.allParentIds.concat([currentActionContext.id]) : []\r\n        }, fn);\r\n    };\r\n    res._isMSTAction = true;\r\n    return res;\r\n}\r\n/**\r\n * Middleware can be used to intercept any action is invoked on the subtree where it is attached.\r\n * If a tree is protected (by default), this means that any mutation of the tree will pass through your middleware.\r\n *\r\n * For more details, see the [middleware docs](docs/middleware.md)\r\n *\r\n * @param target Node to apply the middleware to.\r\n * @param middleware Middleware to apply.\r\n * @returns A callable function to dispose the middleware.\r\n */\r\nfunction addMiddleware$$1(target, handler, includeHooks) {\r\n    if (includeHooks === void 0) { includeHooks = true; }\r\n    var node = getStateTreeNode$$1(target);\r\n    if (false) {}\r\n    return node.addMiddleWare(handler, includeHooks);\r\n}\r\n/**\r\n * Binds middleware to a specific action.\r\n *\r\n * Example:\r\n * ```ts\r\n * type.actions(self => {\r\n *   function takeA____() {\r\n *       self.toilet.donate()\r\n *       self.wipe()\r\n *       self.wipe()\r\n *       self.toilet.flush()\r\n *   }\r\n *   return {\r\n *     takeA____: decorate(atomic, takeA____)\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * @param handler\r\n * @param fn\r\n * @returns The original function\r\n */\r\nfunction decorate$$1(handler, fn) {\r\n    var middleware = { handler: handler, includeHooks: true };\r\n    if (fn.$mst_middleware)\r\n        fn.$mst_middleware.push(middleware);\r\n    fn.$mst_middleware = [middleware];\r\n    return fn;\r\n}\r\nfunction collectMiddlewares(node, baseCall, fn) {\r\n    var middlewares = fn.$mst_middleware || EMPTY_ARRAY;\r\n    var n = node;\r\n    // Find all middlewares. Optimization: cache this?\r\n    while (n) {\r\n        if (n.middlewares)\r\n            middlewares = middlewares.concat(n.middlewares);\r\n        n = n.parent;\r\n    }\r\n    return middlewares;\r\n}\r\nfunction runMiddleWares(node, baseCall, originalFn) {\r\n    var middlewares = collectMiddlewares(node, baseCall, originalFn);\r\n    // Short circuit\r\n    if (!middlewares.length)\r\n        return Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(originalFn).apply(null, baseCall.args);\r\n    var index = 0;\r\n    var result = null;\r\n    function runNextMiddleware(call) {\r\n        var middleware = middlewares[index++];\r\n        var handler = middleware && middleware.handler;\r\n        var nextInvoked = false;\r\n        var abortInvoked = false;\r\n        function next(call2, callback) {\r\n            nextInvoked = true;\r\n            // the result can contain\r\n            // - the non manipulated return value from an action\r\n            // - the non manipulated abort value\r\n            // - one of the above but manipulated through the callback function\r\n            if (callback) {\r\n                result = callback(runNextMiddleware(call2) || result);\r\n            }\r\n            else {\r\n                result = runNextMiddleware(call2);\r\n            }\r\n        }\r\n        function abort(value) {\r\n            abortInvoked = true;\r\n            // overwrite the result\r\n            // can be manipulated through middlewares earlier in the queue using the callback fn\r\n            result = value;\r\n        }\r\n        var invokeHandler = function () {\r\n            handler(call, next, abort);\r\n            if (false) { var node2; }\r\n            return result;\r\n        };\r\n        if (handler && middleware.includeHooks) {\r\n            return invokeHandler();\r\n        }\r\n        else if (handler && !middleware.includeHooks) {\r\n            if (Hook[call.name])\r\n                return runNextMiddleware(call);\r\n            return invokeHandler();\r\n        }\r\n        else {\r\n            return Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(originalFn).apply(null, call.args);\r\n        }\r\n    }\r\n    return runNextMiddleware(baseCall);\r\n}\n\nfunction safeStringify(value) {\r\n    try {\r\n        return JSON.stringify(value);\r\n    }\r\n    catch (e) {\r\n        return \"<Unserializable: \" + e + \">\";\r\n    }\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction prettyPrintValue$$1(value) {\r\n    return typeof value === \"function\"\r\n        ? \"<function\" + (value.name ? \" \" + value.name : \"\") + \">\"\r\n        : isStateTreeNode$$1(value)\r\n            ? \"<\" + value + \">\"\r\n            : \"`\" + safeStringify(value) + \"`\";\r\n}\r\nfunction shortenPrintValue(valueInString) {\r\n    return valueInString.length < 280\r\n        ? valueInString\r\n        : valueInString.substring(0, 272) + \"......\" + valueInString.substring(valueInString.length - 8);\r\n}\r\nfunction toErrorString(error) {\r\n    var value = error.value;\r\n    var type = error.context[error.context.length - 1].type;\r\n    var fullPath = error.context\r\n        .map(function (_a) {\r\n        var path = _a.path;\r\n        return path;\r\n    })\r\n        .filter(function (path) { return path.length > 0; })\r\n        .join(\"/\");\r\n    var pathPrefix = fullPath.length > 0 ? \"at path \\\"/\" + fullPath + \"\\\" \" : \"\";\r\n    var currentTypename = isStateTreeNode$$1(value)\r\n        ? \"value of type \" + getStateTreeNode$$1(value).type.name + \":\"\r\n        : isPrimitive(value)\r\n            ? \"value\"\r\n            : \"snapshot\";\r\n    var isSnapshotCompatible = type && isStateTreeNode$$1(value) && type.is(getStateTreeNode$$1(value).snapshot);\r\n    return (\"\" + pathPrefix + currentTypename + \" \" + prettyPrintValue$$1(value) + \" is not assignable \" + (type ? \"to type: `\" + type.name + \"`\" : \"\") +\r\n        (error.message ? \" (\" + error.message + \")\" : \"\") +\r\n        (type\r\n            ? isPrimitiveType$$1(type) || isPrimitive(value)\r\n                ? \".\"\r\n                : \", expected an instance of `\" + type.name + \"` or a snapshot like `\" + type.describe() + \"` instead.\" +\r\n                    (isSnapshotCompatible\r\n                        ? \" (Note that a snapshot of the provided value is compatible with the targeted type)\"\r\n                        : \"\")\r\n            : \".\"));\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction getContextForPath$$1(context, path, type) {\r\n    return context.concat([{ path: path, type: type }]);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction typeCheckSuccess$$1() {\r\n    return EMPTY_ARRAY;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction typeCheckFailure$$1(context, value, message) {\r\n    return [{ context: context, value: value, message: message }];\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction flattenTypeErrors$$1(errors) {\r\n    return errors.reduce(function (a, i) { return a.concat(i); }, []);\r\n}\r\n// TODO; doublecheck: typecheck should only needed to be invoked from: type.create and array / map / value.property will change\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction typecheckInternal$$1(type, value) {\r\n    // if not in dev-mode, do not even try to run typecheck. Everything is developer fault!\r\n    if (true)\r\n        return;\r\n    typecheck$$1(type, value);\r\n}\r\n/**\r\n * Run's the typechecker on the given type.\r\n * Throws if the given value is not according the provided type specification.\r\n * Use this if you need typechecks even in a production build (by default all automatic runtime type checks will be skipped in production builds)\r\n *\r\n * @param type Type to check against.\r\n * @param value Value to be checked.\r\n */\r\nfunction typecheck$$1(type, value) {\r\n    var errors = type.validate(value, [{ path: \"\", type: type }]);\r\n    if (errors.length > 0) {\r\n        fail(\"Error while converting \" + shortenPrintValue(prettyPrintValue$$1(value)) + \" to `\" + type.name + \"`:\\n\\n    \" + errors.map(toErrorString).join(\"\\n    \"));\r\n    }\r\n}\n\nvar identifierCacheId = 0;\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar IdentifierCache$$1 = /** @class */ (function () {\r\n    function IdentifierCache$$1() {\r\n        this.cacheId = identifierCacheId++;\r\n        // n.b. in cache all identifiers are normalized to strings\r\n        this.cache = mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"].map();\r\n        // last time the cache (array) for a given time changed\r\n        // n.b. it is not really the time, but just an integer that gets increased after each modification to the array\r\n        this.lastCacheModificationPerId = mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"].map();\r\n    }\r\n    IdentifierCache$$1.prototype.updateLastCacheModificationPerId = function (identifier$$1) {\r\n        var lcm = this.lastCacheModificationPerId.get(identifier$$1);\r\n        // we start at 1 since 0 means no update since cache creation\r\n        this.lastCacheModificationPerId.set(identifier$$1, lcm === undefined ? 1 : lcm + 1);\r\n    };\r\n    IdentifierCache$$1.prototype.getLastCacheModificationPerId = function (identifier$$1) {\r\n        var modificationId = this.lastCacheModificationPerId.get(identifier$$1) || 0;\r\n        return this.cacheId + \"-\" + modificationId;\r\n    };\r\n    IdentifierCache$$1.prototype.addNodeToCache = function (node, lastCacheUpdate) {\r\n        if (lastCacheUpdate === void 0) { lastCacheUpdate = true; }\r\n        if (node.identifierAttribute) {\r\n            var identifier$$1 = node.identifier;\r\n            if (!this.cache.has(identifier$$1)) {\r\n                this.cache.set(identifier$$1, mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"].array([], mobxShallow));\r\n            }\r\n            var set$$1 = this.cache.get(identifier$$1);\r\n            if (set$$1.indexOf(node) !== -1)\r\n                fail(\"Already registered\");\r\n            set$$1.push(node);\r\n            if (lastCacheUpdate) {\r\n                this.updateLastCacheModificationPerId(identifier$$1);\r\n            }\r\n        }\r\n    };\r\n    IdentifierCache$$1.prototype.mergeCache = function (node) {\r\n        var _this = this;\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(node.identifierCache.cache).forEach(function (nodes) {\r\n            return nodes.forEach(function (child) {\r\n                _this.addNodeToCache(child);\r\n            });\r\n        });\r\n    };\r\n    IdentifierCache$$1.prototype.notifyDied = function (node) {\r\n        if (node.identifierAttribute) {\r\n            var id = node.identifier;\r\n            var set$$1 = this.cache.get(id);\r\n            if (set$$1) {\r\n                set$$1.remove(node);\r\n                // remove empty sets from cache\r\n                if (!set$$1.length) {\r\n                    this.cache.delete(id);\r\n                }\r\n                this.updateLastCacheModificationPerId(node.identifier);\r\n            }\r\n        }\r\n    };\r\n    IdentifierCache$$1.prototype.splitCache = function (node) {\r\n        var _this = this;\r\n        var res = new IdentifierCache$$1();\r\n        var basePath = node.path;\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"entries\"])(this.cache).forEach(function (_a) {\r\n            var id = _a[0], nodes = _a[1];\r\n            var modified = false;\r\n            for (var i = nodes.length - 1; i >= 0; i--) {\r\n                if (nodes[i].path.indexOf(basePath) === 0) {\r\n                    res.addNodeToCache(nodes[i], false); // no need to update lastUpdated since it is a whole new cache\r\n                    nodes.splice(i, 1);\r\n                    modified = true;\r\n                }\r\n            }\r\n            if (modified) {\r\n                _this.updateLastCacheModificationPerId(id);\r\n            }\r\n        });\r\n        return res;\r\n    };\r\n    IdentifierCache$$1.prototype.has = function (type, identifier$$1) {\r\n        var set$$1 = this.cache.get(identifier$$1);\r\n        if (!set$$1)\r\n            return false;\r\n        return set$$1.some(function (candidate) { return type.isAssignableFrom(candidate.type); });\r\n    };\r\n    IdentifierCache$$1.prototype.resolve = function (type, identifier$$1) {\r\n        var set$$1 = this.cache.get(identifier$$1);\r\n        if (!set$$1)\r\n            return null;\r\n        var matches = set$$1.filter(function (candidate) { return type.isAssignableFrom(candidate.type); });\r\n        switch (matches.length) {\r\n            case 0:\r\n                return null;\r\n            case 1:\r\n                return matches[0];\r\n            default:\r\n                return fail(\"Cannot resolve a reference to type '\" + type.name + \"' with id: '\" + identifier$$1 + \"' unambigously, there are multiple candidates: \" + matches\r\n                    .map(function (n) { return n.path; })\r\n                    .join(\", \"));\r\n        }\r\n    };\r\n    return IdentifierCache$$1;\r\n}());\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction createNode$$1(type, parent, subpath, environment, initialValue) {\r\n    var existingNode = getStateTreeNodeSafe$$1(initialValue);\r\n    if (existingNode) {\r\n        if (existingNode.isRoot) {\r\n            existingNode.setParent(parent, subpath);\r\n            return existingNode;\r\n        }\r\n        fail(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\" + (parent ? parent.path : \"\") + \"/\" + subpath + \"', but it lives already at '\" + existingNode.path + \"'\");\r\n    }\r\n    var Node = type.shouldAttachNode ? ObjectNode$$1 : ScalarNode$$1;\r\n    return new Node(type, parent, subpath, environment, initialValue);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction isNode$$1(value) {\r\n    return value instanceof ScalarNode$$1 || value instanceof ObjectNode$$1;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar NodeLifeCycle$$1;\r\n(function (NodeLifeCycle$$1) {\r\n    NodeLifeCycle$$1[NodeLifeCycle$$1[\"INITIALIZING\"] = 0] = \"INITIALIZING\";\r\n    NodeLifeCycle$$1[NodeLifeCycle$$1[\"CREATED\"] = 1] = \"CREATED\";\r\n    NodeLifeCycle$$1[NodeLifeCycle$$1[\"FINALIZED\"] = 2] = \"FINALIZED\";\r\n    NodeLifeCycle$$1[NodeLifeCycle$$1[\"DETACHING\"] = 3] = \"DETACHING\";\r\n    NodeLifeCycle$$1[NodeLifeCycle$$1[\"DEAD\"] = 4] = \"DEAD\"; // no coming back from this one\r\n})(NodeLifeCycle$$1 || (NodeLifeCycle$$1 = {}));\r\n/**\r\n * Returns true if the given value is a node in a state tree.\r\n * More precisely, that is, if the value is an instance of a\r\n * `types.model`, `types.array` or `types.map`.\r\n *\r\n * @param value\r\n * @returns true if the value is a state tree node.\r\n */\r\nfunction isStateTreeNode$$1(value) {\r\n    return !!(value && value.$treenode);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction getStateTreeNode$$1(value) {\r\n    if (isStateTreeNode$$1(value))\r\n        return value.$treenode;\r\n    else\r\n        return fail(\"Value \" + value + \" is no MST Node\");\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction getStateTreeNodeSafe$$1(value) {\r\n    return (value && value.$treenode) || null;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction toJSON$$1() {\r\n    return getStateTreeNode$$1(this).snapshot;\r\n}\r\nvar doubleDot = function (_) { return \"..\"; };\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction getRelativePathBetweenNodes$$1(base, target) {\r\n    // PRE condition target is (a child of) base!\r\n    if (base.root !== target.root) {\r\n        return fail(\"Cannot calculate relative path: objects '\" + base + \"' and '\" + target + \"' are not part of the same object tree\");\r\n    }\r\n    var baseParts = splitJsonPath$$1(base.path);\r\n    var targetParts = splitJsonPath$$1(target.path);\r\n    var common = 0;\r\n    for (; common < baseParts.length; common++) {\r\n        if (baseParts[common] !== targetParts[common])\r\n            break;\r\n    }\r\n    // TODO: assert that no targetParts paths are \"..\", \".\" or \"\"!\r\n    return (baseParts\r\n        .slice(common)\r\n        .map(doubleDot)\r\n        .join(\"/\") + joinJsonPath$$1(targetParts.slice(common)));\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction resolveNodeByPath$$1(base, path, failIfResolveFails) {\r\n    if (failIfResolveFails === void 0) { failIfResolveFails = true; }\r\n    return resolveNodeByPathParts$$1(base, splitJsonPath$$1(path), failIfResolveFails);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction resolveNodeByPathParts$$1(base, pathParts, failIfResolveFails) {\r\n    if (failIfResolveFails === void 0) { failIfResolveFails = true; }\r\n    var current = base;\r\n    for (var i = 0; i < pathParts.length; i++) {\r\n        var part = pathParts[i];\r\n        if (part === \"..\") {\r\n            current = current.parent;\r\n            if (current)\r\n                continue; // not everything has a parent\r\n        }\r\n        else if (part === \".\") {\r\n            continue;\r\n        }\r\n        else if (current) {\r\n            if (current instanceof ScalarNode$$1) {\r\n                // check if the value of a scalar resolves to a state tree node (e.g. references)\r\n                // then we can continue resolving...\r\n                try {\r\n                    var value = current.value;\r\n                    if (isStateTreeNode$$1(value)) {\r\n                        current = getStateTreeNode$$1(value);\r\n                        // fall through\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!failIfResolveFails) {\r\n                        return undefined;\r\n                    }\r\n                    throw e;\r\n                }\r\n            }\r\n            if (current instanceof ObjectNode$$1) {\r\n                var subType = current.getChildType(part);\r\n                if (subType) {\r\n                    current = current.getChildNode(part);\r\n                    if (current)\r\n                        continue;\r\n                }\r\n            }\r\n        }\r\n        if (failIfResolveFails)\r\n            return fail(\"Could not resolve '\" + part + \"' in path '\" + (joinJsonPath$$1(pathParts.slice(0, i)) ||\r\n                \"/\") + \"' while resolving '\" + joinJsonPath$$1(pathParts) + \"'\");\r\n        else\r\n            return undefined;\r\n    }\r\n    return current;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction convertChildNodesToArray$$1(childNodes) {\r\n    if (!childNodes)\r\n        return EMPTY_ARRAY;\r\n    var keys = Object.keys(childNodes);\r\n    if (!keys.length)\r\n        return EMPTY_ARRAY;\r\n    var result = new Array(keys.length);\r\n    keys.forEach(function (key, index) {\r\n        result[index] = childNodes[key];\r\n    });\r\n    return result;\r\n}\n\n// based on: https://github.com/mobxjs/mobx-utils/blob/master/src/async-action.ts\r\n/*\r\n    All contents of this file are deprecated.\r\n\r\n    The term `process` has been replaced with `flow` to avoid conflicts with the\r\n    global `process` object.\r\n\r\n    Refer to `flow.ts` for any further changes to this implementation.\r\n*/\r\nvar DEPRECATION_MESSAGE = \"See https://github.com/mobxjs/mobx-state-tree/issues/399 for more information. \" +\r\n    \"Note that the middleware event types starting with `process` now start with `flow`.\";\r\n/**\r\n * @hidden\r\n *\r\n * @deprecated has been renamed to `flow()`.\r\n * See https://github.com/mobxjs/mobx-state-tree/issues/399 for more information.\r\n * Note that the middleware event types starting with `process` now start with `flow`.\r\n *\r\n * @returns {Promise}\r\n */\r\nfunction process$$1(asyncAction) {\r\n    deprecated(\"process\", \"`process()` has been renamed to `flow()`. \" + DEPRECATION_MESSAGE);\r\n    return flow(asyncAction);\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar EMPTY_ARRAY = Object.freeze([]);\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar EMPTY_OBJECT = Object.freeze({});\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar mobxShallow = typeof mobx__WEBPACK_IMPORTED_MODULE_0__[\"$mobx\"] === \"string\" ? { deep: false } : { deep: false, proxy: false };\r\nObject.freeze(mobxShallow);\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction fail(message) {\r\n    if (message === void 0) { message = \"Illegal state\"; }\r\n    throw new Error(\"[mobx-state-tree] \" + message);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction identity(_) {\r\n    return _;\r\n}\r\n/**\r\n * pollyfill (for IE) suggested in MDN:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n * @internal\r\n * @hidden\r\n */\r\nvar isInteger = Number.isInteger ||\r\n    function (value) {\r\n        return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n    };\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction isArray(val) {\r\n    return !!(Array.isArray(val) || Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"isObservableArray\"])(val));\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction asArray(val) {\r\n    if (!val)\r\n        return EMPTY_ARRAY;\r\n    if (isArray(val))\r\n        return val;\r\n    return [val];\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction extend(a) {\r\n    var b = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        b[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < b.length; i++) {\r\n        var current = b[i];\r\n        for (var key in current)\r\n            a[key] = current[key];\r\n    }\r\n    return a;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction isPlainObject(value) {\r\n    if (value === null || typeof value !== \"object\")\r\n        return false;\r\n    var proto = Object.getPrototypeOf(value);\r\n    return proto === Object.prototype || proto === null;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction isMutable(value) {\r\n    return (value !== null &&\r\n        typeof value === \"object\" &&\r\n        !(value instanceof Date) &&\r\n        !(value instanceof RegExp));\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction isPrimitive(value) {\r\n    if (value === null || value === undefined)\r\n        return true;\r\n    if (typeof value === \"string\" ||\r\n        typeof value === \"number\" ||\r\n        typeof value === \"boolean\" ||\r\n        value instanceof Date)\r\n        return true;\r\n    return false;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n * Freeze a value and return it (if not in production)\r\n */\r\nfunction freeze(value) {\r\n    if (true)\r\n        return value;\r\n    return isPrimitive(value) || Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"isObservableArray\"])(value) ? value : Object.freeze(value);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n * Recursively freeze a value (if not in production)\r\n */\r\nfunction deepFreeze(value) {\r\n    if (true)\r\n        return value;\r\n    freeze(value);\r\n    if (isPlainObject(value)) {\r\n        Object.keys(value).forEach(function (propKey) {\r\n            if (!isPrimitive(value[propKey]) &&\r\n                !Object.isFrozen(value[propKey])) {\r\n                deepFreeze(value[propKey]);\r\n            }\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction isSerializable(value) {\r\n    return typeof value !== \"function\";\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction addHiddenFinalProp(object, propName, value) {\r\n    Object.defineProperty(object, propName, {\r\n        enumerable: false,\r\n        writable: false,\r\n        configurable: true,\r\n        value: value\r\n    });\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction addHiddenWritableProp(object, propName, value) {\r\n    Object.defineProperty(object, propName, {\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true,\r\n        value: value\r\n    });\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar EventHandler = /** @class */ (function () {\r\n    function EventHandler() {\r\n        this.handlers = [];\r\n    }\r\n    Object.defineProperty(EventHandler.prototype, \"hasSubscribers\", {\r\n        get: function () {\r\n            return this.handlers.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EventHandler.prototype.register = function (fn, atTheBeginning) {\r\n        var _this = this;\r\n        if (atTheBeginning === void 0) { atTheBeginning = false; }\r\n        if (atTheBeginning) {\r\n            this.handlers.unshift(fn);\r\n        }\r\n        else {\r\n            this.handlers.push(fn);\r\n        }\r\n        return function () {\r\n            _this.unregister(fn);\r\n        };\r\n    };\r\n    EventHandler.prototype.has = function (fn) {\r\n        return this.handlers.indexOf(fn) >= 0;\r\n    };\r\n    EventHandler.prototype.unregister = function (fn) {\r\n        var index = this.handlers.indexOf(fn);\r\n        if (index >= 0) {\r\n            this.handlers.splice(index, 1);\r\n        }\r\n    };\r\n    EventHandler.prototype.clear = function () {\r\n        this.handlers.length = 0;\r\n    };\r\n    EventHandler.prototype.emit = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        // make a copy just in case it changes\r\n        var handlers = this.handlers.slice();\r\n        handlers.forEach(function (f) { return f.apply(void 0, args); });\r\n    };\r\n    return EventHandler;\r\n}());\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar EventHandlers = /** @class */ (function () {\r\n    function EventHandlers() {\r\n    }\r\n    EventHandlers.prototype.hasSubscribers = function (event) {\r\n        var handler = this.eventHandlers && this.eventHandlers[event];\r\n        return !!handler && handler.hasSubscribers;\r\n    };\r\n    EventHandlers.prototype.register = function (event, fn, atTheBeginning) {\r\n        if (atTheBeginning === void 0) { atTheBeginning = false; }\r\n        if (!this.eventHandlers) {\r\n            this.eventHandlers = {};\r\n        }\r\n        var handler = this.eventHandlers[event];\r\n        if (!handler) {\r\n            handler = this.eventHandlers[event] = new EventHandler();\r\n        }\r\n        return handler.register(fn, atTheBeginning);\r\n    };\r\n    EventHandlers.prototype.has = function (event, fn) {\r\n        var handler = this.eventHandlers && this.eventHandlers[event];\r\n        return !!handler && handler.has(fn);\r\n    };\r\n    EventHandlers.prototype.unregister = function (event, fn) {\r\n        var handler = this.eventHandlers && this.eventHandlers[event];\r\n        if (handler) {\r\n            handler.unregister(fn);\r\n        }\r\n    };\r\n    EventHandlers.prototype.clear = function (event) {\r\n        if (this.eventHandlers) {\r\n            delete this.eventHandlers[event];\r\n        }\r\n    };\r\n    EventHandlers.prototype.clearAll = function () {\r\n        this.eventHandlers = undefined;\r\n    };\r\n    EventHandlers.prototype.emit = function (event) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var _a;\r\n        var handler = this.eventHandlers && this.eventHandlers[event];\r\n        if (handler) {\r\n            (_a = handler).emit.apply(_a, args);\r\n        }\r\n    };\r\n    return EventHandlers;\r\n}());\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction argsToArray(args) {\r\n    var res = new Array(args.length);\r\n    for (var i = 0; i < args.length; i++)\r\n        res[i] = args[i];\r\n    return res;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction invalidateComputed(target, propName) {\r\n    var atom = Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"getAtom\"])(target, propName);\r\n    atom.trackAndCompute();\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction stringStartsWith(str, beginning) {\r\n    return str.indexOf(beginning) === 0;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar deprecated = function (id, message) {\r\n    // skip if running production\r\n    if (true)\r\n        return;\r\n    // warn if hasn't been warned before\r\n    if (deprecated.ids && !deprecated.ids.hasOwnProperty(id)) {\r\n        warnError(\"Deprecation warning: \" + message);\r\n    }\r\n    // mark as warned to avoid duplicate warn message\r\n    if (deprecated.ids)\r\n        deprecated.ids[id] = true;\r\n};\r\ndeprecated.ids = {};\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction warnError(msg) {\r\n    console.warn(new Error(\"[mobx-state-tree] \" + msg));\r\n}\n\n/**\r\n * See [asynchronous actions](https://github.com/mobxjs/mobx-state-tree/blob/master/docs/async-actions.md).\r\n *\r\n * @returns The flow as a promise.\r\n */\r\nfunction flow(generator) {\r\n    return createFlowSpawner(generator.name, generator);\r\n}\r\n/**\r\n *  Used for TypeScript to make flows that return a promise return the actual promise result.\r\n *\r\n * @param val\r\n * @returns\r\n */\r\nfunction castFlowReturn(val) {\r\n    return val;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction createFlowSpawner(name, generator) {\r\n    var spawner = function flowSpawner() {\r\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\r\n        var runId = getNextActionId$$1();\r\n        var baseContext = getActionContext$$1();\r\n        var args = arguments;\r\n        function wrap(fn, type, arg) {\r\n            fn.$mst_middleware = spawner.$mst_middleware; // pick up any middleware attached to the flow\r\n            runWithActionContext$$1({\r\n                name: name,\r\n                type: type,\r\n                id: runId,\r\n                args: [arg],\r\n                tree: baseContext.tree,\r\n                context: baseContext.context,\r\n                parentId: baseContext.id,\r\n                allParentIds: baseContext.allParentIds.concat([baseContext.id]),\r\n                rootId: baseContext.rootId\r\n            }, fn);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var gen;\r\n            var init = function asyncActionInit() {\r\n                gen = generator.apply(null, arguments);\r\n                onFulfilled(undefined); // kick off the flow\r\n            };\r\n            init.$mst_middleware = spawner.$mst_middleware;\r\n            runWithActionContext$$1({\r\n                name: name,\r\n                type: \"flow_spawn\",\r\n                id: runId,\r\n                args: argsToArray(args),\r\n                tree: baseContext.tree,\r\n                context: baseContext.context,\r\n                parentId: baseContext.id,\r\n                allParentIds: baseContext.allParentIds.concat([baseContext.id]),\r\n                rootId: baseContext.rootId\r\n            }, init);\r\n            function onFulfilled(res) {\r\n                var ret;\r\n                try {\r\n                    // prettier-ignore\r\n                    wrap(function (r) { ret = gen.next(r); }, \"flow_resume\", res);\r\n                }\r\n                catch (e) {\r\n                    // prettier-ignore\r\n                    setImmediate(function () {\r\n                        wrap(function (r) { reject(e); }, \"flow_throw\", e);\r\n                    });\r\n                    return;\r\n                }\r\n                next(ret);\r\n                return;\r\n            }\r\n            function onRejected(err) {\r\n                var ret;\r\n                try {\r\n                    // prettier-ignore\r\n                    wrap(function (r) { ret = gen.throw(r); }, \"flow_resume_error\", err); // or yieldError?\r\n                }\r\n                catch (e) {\r\n                    // prettier-ignore\r\n                    setImmediate(function () {\r\n                        wrap(function (r) { reject(e); }, \"flow_throw\", e);\r\n                    });\r\n                    return;\r\n                }\r\n                next(ret);\r\n            }\r\n            function next(ret) {\r\n                if (ret.done) {\r\n                    // prettier-ignore\r\n                    setImmediate(function () {\r\n                        wrap(function (r) { resolve(r); }, \"flow_return\", ret.value);\r\n                    });\r\n                    return;\r\n                }\r\n                // TODO: support more type of values? See https://github.com/tj/co/blob/249bbdc72da24ae44076afd716349d2089b31c4c/index.js#L100\r\n                if (!ret.value || typeof ret.value.then !== \"function\")\r\n                    fail(\"Only promises can be yielded to `async`, got: \" + ret);\r\n                return ret.value.then(onFulfilled, onRejected);\r\n            }\r\n        });\r\n    };\r\n    return spawner;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction splitPatch$$1(patch) {\r\n    if (!(\"oldValue\" in patch))\r\n        fail(\"Patches without `oldValue` field cannot be inversed\");\r\n    return [stripPatch$$1(patch), invertPatch(patch)];\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction stripPatch$$1(patch) {\r\n    // strips `oldvalue` information from the patch, so that it becomes a patch conform the json-patch spec\r\n    // this removes the ability to undo the patch\r\n    switch (patch.op) {\r\n        case \"add\":\r\n            return { op: \"add\", path: patch.path, value: patch.value };\r\n        case \"remove\":\r\n            return { op: \"remove\", path: patch.path };\r\n        case \"replace\":\r\n            return { op: \"replace\", path: patch.path, value: patch.value };\r\n    }\r\n}\r\nfunction invertPatch(patch) {\r\n    switch (patch.op) {\r\n        case \"add\":\r\n            return {\r\n                op: \"remove\",\r\n                path: patch.path\r\n            };\r\n        case \"remove\":\r\n            return {\r\n                op: \"add\",\r\n                path: patch.path,\r\n                value: patch.oldValue\r\n            };\r\n        case \"replace\":\r\n            return {\r\n                op: \"replace\",\r\n                path: patch.path,\r\n                value: patch.oldValue\r\n            };\r\n    }\r\n}\r\n/**\r\n * Simple simple check to check it is a number.\r\n */\r\nfunction isNumber(x) {\r\n    return typeof x === \"number\";\r\n}\r\n/**\r\n * Escape slashes and backslashes.\r\n *\r\n * http://tools.ietf.org/html/rfc6901\r\n */\r\nfunction escapeJsonPath$$1(path) {\r\n    if (isNumber(path) === true) {\r\n        return \"\" + path;\r\n    }\r\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\r\n        return path;\r\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\r\n}\r\n/**\r\n * Unescape slashes and backslashes.\r\n */\r\nfunction unescapeJsonPath$$1(path) {\r\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\r\n}\r\n/**\r\n * Generates a json-path compliant json path from path parts.\r\n *\r\n * @param path\r\n * @returns\r\n */\r\nfunction joinJsonPath$$1(path) {\r\n    // `/` refers to property with an empty name, while `` refers to root itself!\r\n    if (path.length === 0)\r\n        return \"\";\r\n    var getPathStr = function (p) { return p.map(escapeJsonPath$$1).join(\"/\"); };\r\n    if (path[0] === \".\" || path[0] === \"..\") {\r\n        // relative\r\n        return getPathStr(path);\r\n    }\r\n    else {\r\n        // absolute\r\n        return \"/\" + getPathStr(path);\r\n    }\r\n}\r\n/**\r\n * Splits and decodes a json path into several parts.\r\n *\r\n * @param path\r\n * @returns\r\n */\r\nfunction splitJsonPath$$1(path) {\r\n    // `/` refers to property with an empty name, while `` refers to root itself!\r\n    var parts = path.split(\"/\").map(unescapeJsonPath$$1);\r\n    var valid = path === \"\" ||\r\n        path === \".\" ||\r\n        path === \"..\" ||\r\n        stringStartsWith(path, \"/\") ||\r\n        stringStartsWith(path, \"./\") ||\r\n        stringStartsWith(path, \"../\");\r\n    if (!valid) {\r\n        return fail(\"a json path must be either rooted, empty or relative, but got '\" + path + \"'\");\r\n    }\r\n    // '/a/b/c' -> [\"a\", \"b\", \"c\"]\r\n    // '../../b/c' -> [\"..\", \"..\", \"b\", \"c\"]\r\n    // '' -> []\r\n    // '/' -> ['']\r\n    // './a' -> [\".\", \"a\"]\r\n    // /./a' -> [\".\", \"a\"] equivalent to './a'\r\n    if (parts[0] === \"\") {\r\n        parts.shift();\r\n    }\r\n    return parts;\r\n}\n\nvar needsIdentifierError = \"Map.put can only be used to store complex values that have an identifier type attribute\";\r\nfunction tryCollectModelTypes(type, modelTypes) {\r\n    if (type instanceof ModelType$$1) {\r\n        modelTypes.push(type);\r\n    }\r\n    else if (type instanceof OptionalValue$$1) {\r\n        if (!tryCollectModelTypes(type.type, modelTypes))\r\n            return false;\r\n    }\r\n    else if (type instanceof Union$$1) {\r\n        for (var i = 0; i < type.types.length; i++) {\r\n            var uType = type.types[i];\r\n            if (!tryCollectModelTypes(uType, modelTypes))\r\n                return false;\r\n        }\r\n    }\r\n    else if (type instanceof Late$$1) {\r\n        var t = type.getSubType(false);\r\n        if (!t)\r\n            return false;\r\n        tryCollectModelTypes(t, modelTypes);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar MapIdentifierMode$$1;\r\n(function (MapIdentifierMode$$1) {\r\n    MapIdentifierMode$$1[MapIdentifierMode$$1[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    MapIdentifierMode$$1[MapIdentifierMode$$1[\"YES\"] = 1] = \"YES\";\r\n    MapIdentifierMode$$1[MapIdentifierMode$$1[\"NO\"] = 2] = \"NO\";\r\n})(MapIdentifierMode$$1 || (MapIdentifierMode$$1 = {}));\r\nvar MSTMap = /** @class */ (function (_super) {\r\n    __extends(MSTMap, _super);\r\n    function MSTMap(initialData) {\r\n        return _super.call(this, initialData, mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"].ref.enhancer) || this;\r\n    }\r\n    MSTMap.prototype.get = function (key) {\r\n        // maybe this is over-enthousiastic? normalize numeric keys to strings\r\n        return _super.prototype.get.call(this, \"\" + key);\r\n    };\r\n    MSTMap.prototype.has = function (key) {\r\n        return _super.prototype.has.call(this, \"\" + key);\r\n    };\r\n    MSTMap.prototype.delete = function (key) {\r\n        return _super.prototype.delete.call(this, \"\" + key);\r\n    };\r\n    MSTMap.prototype.set = function (key, value) {\r\n        return _super.prototype.set.call(this, \"\" + key, value);\r\n    };\r\n    MSTMap.prototype.put = function (value) {\r\n        if (!!!value)\r\n            fail(\"Map.put cannot be used to set empty values\");\r\n        if (isStateTreeNode$$1(value)) {\r\n            var node = getStateTreeNode$$1(value);\r\n            if (false) {}\r\n            var key = node.identifier;\r\n            this.set(key, node.value);\r\n            return node.value;\r\n        }\r\n        else if (!isMutable(value)) {\r\n            return fail(\"Map.put can only be used to store complex values\");\r\n        }\r\n        else {\r\n            var key = void 0;\r\n            var mapType = getStateTreeNode$$1(this).type;\r\n            if (mapType.identifierMode === MapIdentifierMode$$1.NO)\r\n                return fail(needsIdentifierError);\r\n            if (mapType.identifierMode === MapIdentifierMode$$1.YES) {\r\n                key = normalizeIdentifier$$1(value[mapType.mapIdentifierAttribute]);\r\n                this.set(key, value);\r\n                return this.get(key);\r\n            }\r\n            return fail(needsIdentifierError);\r\n        }\r\n    };\r\n    return MSTMap;\r\n}(mobx__WEBPACK_IMPORTED_MODULE_0__[\"ObservableMap\"]));\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar MapType$$1 = /** @class */ (function (_super) {\r\n    __extends(MapType$$1, _super);\r\n    function MapType$$1(name, subType) {\r\n        var _this = _super.call(this, name) || this;\r\n        _this.shouldAttachNode = true;\r\n        _this.identifierMode = MapIdentifierMode$$1.UNKNOWN;\r\n        _this.mapIdentifierAttribute = undefined;\r\n        _this.flags = TypeFlags$$1.Map;\r\n        _this.subType = subType;\r\n        _this._determineIdentifierMode();\r\n        return _this;\r\n    }\r\n    MapType$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        if (this.identifierMode === MapIdentifierMode$$1.UNKNOWN) {\r\n            this._determineIdentifierMode();\r\n        }\r\n        return createNode$$1(this, parent, subpath, environment, snapshot);\r\n    };\r\n    MapType$$1.prototype._determineIdentifierMode = function () {\r\n        var modelTypes = [];\r\n        if (tryCollectModelTypes(this.subType, modelTypes)) {\r\n            var identifierAttribute_1 = undefined;\r\n            modelTypes.forEach(function (type) {\r\n                if (type.identifierAttribute) {\r\n                    if (identifierAttribute_1 && identifierAttribute_1 !== type.identifierAttribute) {\r\n                        fail(\"The objects in a map should all have the same identifier attribute, expected '\" + identifierAttribute_1 + \"', but child of type '\" + type.name + \"' declared attribute '\" + type.identifierAttribute + \"' as identifier\");\r\n                    }\r\n                    identifierAttribute_1 = type.identifierAttribute;\r\n                }\r\n            });\r\n            if (identifierAttribute_1) {\r\n                this.identifierMode = MapIdentifierMode$$1.YES;\r\n                this.mapIdentifierAttribute = identifierAttribute_1;\r\n            }\r\n            else {\r\n                this.identifierMode = MapIdentifierMode$$1.NO;\r\n            }\r\n        }\r\n    };\r\n    MapType$$1.prototype.initializeChildNodes = function (objNode, initialSnapshot) {\r\n        if (initialSnapshot === void 0) { initialSnapshot = {}; }\r\n        var subType = objNode.type.subType;\r\n        var environment = objNode.environment;\r\n        var result = {};\r\n        Object.keys(initialSnapshot).forEach(function (name) {\r\n            result[name] = subType.instantiate(objNode, name, environment, initialSnapshot[name]);\r\n        });\r\n        return result;\r\n    };\r\n    MapType$$1.prototype.createNewInstance = function (node, childNodes, snapshot) {\r\n        return new MSTMap(childNodes);\r\n    };\r\n    MapType$$1.prototype.finalizeNewInstance = function (node, instance) {\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"_interceptReads\"])(instance, node.unbox);\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"intercept\"])(instance, this.willChange);\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"observe\"])(instance, this.didChange);\r\n    };\r\n    MapType$$1.prototype.describe = function () {\r\n        return \"Map<string, \" + this.subType.describe() + \">\";\r\n    };\r\n    MapType$$1.prototype.getChildren = function (node) {\r\n        // return (node.storedValue as ObservableMap<any>).values()\r\n        return Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(node.storedValue);\r\n    };\r\n    MapType$$1.prototype.getChildNode = function (node, key) {\r\n        var childNode = node.storedValue.get(\"\" + key);\r\n        if (!childNode)\r\n            fail(\"Not a child \" + key);\r\n        return childNode;\r\n    };\r\n    MapType$$1.prototype.willChange = function (change) {\r\n        var node = getStateTreeNode$$1(change.object);\r\n        var key = change.name;\r\n        node.assertWritable();\r\n        var mapType = node.type;\r\n        var subType = mapType.subType;\r\n        switch (change.type) {\r\n            case \"update\":\r\n                {\r\n                    var newValue = change.newValue;\r\n                    var oldValue = change.object.get(key);\r\n                    if (newValue === oldValue)\r\n                        return null;\r\n                    typecheckInternal$$1(subType, newValue);\r\n                    change.newValue = subType.reconcile(node.getChildNode(key), change.newValue);\r\n                    mapType.processIdentifier(key, change.newValue);\r\n                }\r\n                break;\r\n            case \"add\":\r\n                {\r\n                    typecheckInternal$$1(subType, change.newValue);\r\n                    change.newValue = subType.instantiate(node, key, undefined, change.newValue);\r\n                    mapType.processIdentifier(key, change.newValue);\r\n                }\r\n                break;\r\n        }\r\n        return change;\r\n    };\r\n    MapType$$1.prototype.processIdentifier = function (expected, node) {\r\n        if (this.identifierMode === MapIdentifierMode$$1.YES && node instanceof ObjectNode$$1) {\r\n            var identifier$$1 = node.identifier;\r\n            if (identifier$$1 !== expected)\r\n                fail(\"A map of objects containing an identifier should always store the object under their own identifier. Trying to store key '\" + identifier$$1 + \"', but expected: '\" + expected + \"'\");\r\n        }\r\n    };\r\n    MapType$$1.prototype.getValue = function (node) {\r\n        return node.storedValue;\r\n    };\r\n    MapType$$1.prototype.getSnapshot = function (node) {\r\n        var res = {};\r\n        node.getChildren().forEach(function (childNode) {\r\n            res[childNode.subpath] = childNode.snapshot;\r\n        });\r\n        return res;\r\n    };\r\n    MapType$$1.prototype.processInitialSnapshot = function (childNodes, snapshot) {\r\n        var processed = {};\r\n        Object.keys(childNodes).forEach(function (key) {\r\n            processed[key] = childNodes[key].getSnapshot();\r\n        });\r\n        return processed;\r\n    };\r\n    MapType$$1.prototype.didChange = function (change) {\r\n        var node = getStateTreeNode$$1(change.object);\r\n        switch (change.type) {\r\n            case \"update\":\r\n                return void node.emitPatch({\r\n                    op: \"replace\",\r\n                    path: escapeJsonPath$$1(change.name),\r\n                    value: change.newValue.snapshot,\r\n                    oldValue: change.oldValue ? change.oldValue.snapshot : undefined\r\n                }, node);\r\n            case \"add\":\r\n                return void node.emitPatch({\r\n                    op: \"add\",\r\n                    path: escapeJsonPath$$1(change.name),\r\n                    value: change.newValue.snapshot,\r\n                    oldValue: undefined\r\n                }, node);\r\n            case \"delete\":\r\n                // a node got deleted, get the old snapshot and make the node die\r\n                var oldSnapshot = change.oldValue.snapshot;\r\n                change.oldValue.die();\r\n                // emit the patch\r\n                return void node.emitPatch({ op: \"remove\", path: escapeJsonPath$$1(change.name), oldValue: oldSnapshot }, node);\r\n        }\r\n    };\r\n    MapType$$1.prototype.applyPatchLocally = function (node, subpath, patch) {\r\n        var target = node.storedValue;\r\n        switch (patch.op) {\r\n            case \"add\":\r\n            case \"replace\":\r\n                target.set(subpath, patch.value);\r\n                break;\r\n            case \"remove\":\r\n                target.delete(subpath);\r\n                break;\r\n        }\r\n    };\r\n    MapType$$1.prototype.applySnapshot = function (node, snapshot) {\r\n        typecheckInternal$$1(this, snapshot);\r\n        var target = node.storedValue;\r\n        var currentKeys = {};\r\n        Array.from(target.keys()).forEach(function (key) {\r\n            currentKeys[key] = false;\r\n        });\r\n        // Don't use target.replace, as it will throw all existing items first\r\n        for (var key in snapshot) {\r\n            target.set(key, snapshot[key]);\r\n            currentKeys[\"\" + key] = true;\r\n        }\r\n        Object.keys(currentKeys).forEach(function (key) {\r\n            if (currentKeys[key] === false)\r\n                target.delete(key);\r\n        });\r\n    };\r\n    MapType$$1.prototype.getChildType = function (key) {\r\n        return this.subType;\r\n    };\r\n    MapType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        var _this = this;\r\n        if (!isPlainObject(value)) {\r\n            return typeCheckFailure$$1(context, value, \"Value is not a plain object\");\r\n        }\r\n        return flattenTypeErrors$$1(Object.keys(value).map(function (path) {\r\n            return _this.subType.validate(value[path], getContextForPath$$1(context, path, _this.subType));\r\n        }));\r\n    };\r\n    MapType$$1.prototype.getDefaultSnapshot = function () {\r\n        return EMPTY_OBJECT;\r\n    };\r\n    MapType$$1.prototype.removeChild = function (node, subpath) {\r\n        node.storedValue.delete(subpath);\r\n    };\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], MapType$$1.prototype, \"applySnapshot\", null);\r\n    return MapType$$1;\r\n}(ComplexType$$1));\r\n/**\r\n * `types.map` - Creates a key based collection type who's children are all of a uniform declared type.\r\n * If the type stored in a map has an identifier, it is mandatory to store the child under that identifier in the map.\r\n *\r\n * This type will always produce [observable maps](https://mobx.js.org/refguide/map.html)\r\n *\r\n * Example:\r\n * ```ts\r\n * const Todo = types.model({\r\n *   id: types.identifier,\r\n *   task: types.string\r\n * })\r\n *\r\n * const TodoStore = types.model({\r\n *   todos: types.map(Todo)\r\n * })\r\n *\r\n * const s = TodoStore.create({ todos: {} })\r\n * unprotect(s)\r\n * s.todos.set(17, { task: \"Grab coffee\", id: 17 })\r\n * s.todos.put({ task: \"Grab cookie\", id: 18 }) // put will infer key from the identifier\r\n * console.log(s.todos.get(17).task) // prints: \"Grab coffee\"\r\n * ```\r\n *\r\n * @param subtype\r\n * @returns\r\n */\r\nfunction map$$1(subtype) {\r\n    var ret = new MapType$$1(\"map<string, \" + subtype.name + \">\", subtype);\r\n    return ret;\r\n}\r\n/**\r\n * Returns if a given value represents a map type.\r\n *\r\n * @param type\r\n * @returns `true` if it is a map type.\r\n */\r\nfunction isMapType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Map) > 0;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar ArrayType$$1 = /** @class */ (function (_super) {\r\n    __extends(ArrayType$$1, _super);\r\n    function ArrayType$$1(name, subType) {\r\n        var _this = _super.call(this, name) || this;\r\n        _this.shouldAttachNode = true;\r\n        _this.flags = TypeFlags$$1.Array;\r\n        _this.subType = subType;\r\n        return _this;\r\n    }\r\n    ArrayType$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        return createNode$$1(this, parent, subpath, environment, snapshot);\r\n    };\r\n    ArrayType$$1.prototype.initializeChildNodes = function (objNode, snapshot) {\r\n        if (snapshot === void 0) { snapshot = []; }\r\n        var subType = objNode.type.subType;\r\n        var environment = objNode.environment;\r\n        var result = {};\r\n        snapshot.forEach(function (item, index) {\r\n            var subpath = \"\" + index;\r\n            result[subpath] = subType.instantiate(objNode, subpath, environment, item);\r\n        });\r\n        return result;\r\n    };\r\n    ArrayType$$1.prototype.createNewInstance = function (node, childNodes, snapshot) {\r\n        return mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"].array(convertChildNodesToArray$$1(childNodes), mobxShallow);\r\n    };\r\n    ArrayType$$1.prototype.finalizeNewInstance = function (node, instance) {\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"_getAdministration\"])(instance).dehancer = node.unbox;\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"intercept\"])(instance, this.willChange);\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"observe\"])(instance, this.didChange);\r\n    };\r\n    ArrayType$$1.prototype.describe = function () {\r\n        return this.subType.describe() + \"[]\";\r\n    };\r\n    ArrayType$$1.prototype.getChildren = function (node) {\r\n        return node.storedValue.slice();\r\n    };\r\n    ArrayType$$1.prototype.getChildNode = function (node, key) {\r\n        var index = parseInt(key, 10);\r\n        if (index < node.storedValue.length)\r\n            return node.storedValue[index];\r\n        return fail(\"Not a child: \" + key);\r\n    };\r\n    ArrayType$$1.prototype.willChange = function (change) {\r\n        var node = getStateTreeNode$$1(change.object);\r\n        node.assertWritable();\r\n        var subType = node.type.subType;\r\n        var childNodes = node.getChildren();\r\n        var nodes = null;\r\n        switch (change.type) {\r\n            case \"update\":\r\n                if (change.newValue === change.object[change.index])\r\n                    return null;\r\n                nodes = reconcileArrayChildren(node, subType, [childNodes[change.index]], [change.newValue], [change.index]);\r\n                if (!nodes) {\r\n                    return null;\r\n                }\r\n                change.newValue = nodes[0];\r\n                break;\r\n            case \"splice\":\r\n                var index_1 = change.index, removedCount = change.removedCount, added = change.added;\r\n                nodes = reconcileArrayChildren(node, subType, childNodes.slice(index_1, index_1 + removedCount), added, added.map(function (_, i) { return index_1 + i; }));\r\n                if (!nodes) {\r\n                    return null;\r\n                }\r\n                change.added = nodes;\r\n                // update paths of remaining items\r\n                for (var i = index_1 + removedCount; i < childNodes.length; i++) {\r\n                    childNodes[i].setParent(node, \"\" + (i + added.length - removedCount));\r\n                }\r\n                break;\r\n        }\r\n        return change;\r\n    };\r\n    ArrayType$$1.prototype.getValue = function (node) {\r\n        return node.storedValue;\r\n    };\r\n    ArrayType$$1.prototype.getSnapshot = function (node) {\r\n        return node.getChildren().map(function (childNode) { return childNode.snapshot; });\r\n    };\r\n    ArrayType$$1.prototype.processInitialSnapshot = function (childNodes, snapshot) {\r\n        var processed = [];\r\n        Object.keys(childNodes).forEach(function (key) {\r\n            processed.push(childNodes[key].getSnapshot());\r\n        });\r\n        return processed;\r\n    };\r\n    ArrayType$$1.prototype.didChange = function (change) {\r\n        var node = getStateTreeNode$$1(change.object);\r\n        switch (change.type) {\r\n            case \"update\":\r\n                return void node.emitPatch({\r\n                    op: \"replace\",\r\n                    path: \"\" + change.index,\r\n                    value: change.newValue.snapshot,\r\n                    oldValue: change.oldValue ? change.oldValue.snapshot : undefined\r\n                }, node);\r\n            case \"splice\":\r\n                for (var i = change.removedCount - 1; i >= 0; i--)\r\n                    node.emitPatch({\r\n                        op: \"remove\",\r\n                        path: \"\" + (change.index + i),\r\n                        oldValue: change.removed[i].snapshot\r\n                    }, node);\r\n                for (var i = 0; i < change.addedCount; i++)\r\n                    node.emitPatch({\r\n                        op: \"add\",\r\n                        path: \"\" + (change.index + i),\r\n                        value: node.getChildNode(\"\" + (change.index + i)).snapshot,\r\n                        oldValue: undefined\r\n                    }, node);\r\n                return;\r\n        }\r\n    };\r\n    ArrayType$$1.prototype.applyPatchLocally = function (node, subpath, patch) {\r\n        var target = node.storedValue;\r\n        var index = subpath === \"-\" ? target.length : parseInt(subpath);\r\n        switch (patch.op) {\r\n            case \"replace\":\r\n                target[index] = patch.value;\r\n                break;\r\n            case \"add\":\r\n                target.splice(index, 0, patch.value);\r\n                break;\r\n            case \"remove\":\r\n                target.splice(index, 1);\r\n                break;\r\n        }\r\n    };\r\n    ArrayType$$1.prototype.applySnapshot = function (node, snapshot) {\r\n        typecheckInternal$$1(this, snapshot);\r\n        var target = node.storedValue;\r\n        target.replace(snapshot);\r\n    };\r\n    ArrayType$$1.prototype.getChildType = function (key) {\r\n        return this.subType;\r\n    };\r\n    ArrayType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        var _this = this;\r\n        if (!isArray(value)) {\r\n            return typeCheckFailure$$1(context, value, \"Value is not an array\");\r\n        }\r\n        return flattenTypeErrors$$1(value.map(function (item, index) {\r\n            return _this.subType.validate(item, getContextForPath$$1(context, \"\" + index, _this.subType));\r\n        }));\r\n    };\r\n    ArrayType$$1.prototype.getDefaultSnapshot = function () {\r\n        return EMPTY_ARRAY;\r\n    };\r\n    ArrayType$$1.prototype.removeChild = function (node, subpath) {\r\n        node.storedValue.splice(parseInt(subpath, 10), 1);\r\n    };\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], ArrayType$$1.prototype, \"applySnapshot\", null);\r\n    return ArrayType$$1;\r\n}(ComplexType$$1));\r\n/**\r\n * `types.array` - Creates an index based collection type who's children are all of a uniform declared type.\r\n *\r\n * This type will always produce [observable arrays](https://mobx.js.org/refguide/array.html)\r\n *\r\n * Example:\r\n * ```ts\r\n * const Todo = types.model({\r\n *   task: types.string\r\n * })\r\n *\r\n * const TodoStore = types.model({\r\n *   todos: types.array(Todo)\r\n * })\r\n *\r\n * const s = TodoStore.create({ todos: [] })\r\n * unprotect(s) // needed to allow modifying outside of an action\r\n * s.todos.push({ task: \"Grab coffee\" })\r\n * console.log(s.todos[0]) // prints: \"Grab coffee\"\r\n * ```\r\n *\r\n * @param subtype\r\n * @returns\r\n */\r\nfunction array$$1(subtype) {\r\n    if (false) {}\r\n    var ret = new ArrayType$$1(subtype.name + \"[]\", subtype);\r\n    return ret;\r\n}\r\nfunction reconcileArrayChildren(parent, childType, oldNodes, newValues, newPaths) {\r\n    var oldNode, newValue, hasNewNode = false, oldMatch = undefined, nothingChanged = true;\r\n    for (var i = 0;; i++) {\r\n        hasNewNode = i <= newValues.length - 1;\r\n        oldNode = oldNodes[i];\r\n        newValue = hasNewNode ? newValues[i] : undefined;\r\n        // for some reason, instead of newValue we got a node, fallback to the storedValue\r\n        // TODO: https://github.com/mobxjs/mobx-state-tree/issues/340#issuecomment-325581681\r\n        if (isNode$$1(newValue))\r\n            newValue = newValue.storedValue;\r\n        // both are empty, end\r\n        if (!oldNode && !hasNewNode) {\r\n            break;\r\n            // new one does not exists, old one dies\r\n        }\r\n        else if (!hasNewNode) {\r\n            oldNode.die();\r\n            oldNodes.splice(i, 1);\r\n            i--;\r\n            nothingChanged = false;\r\n            // there is no old node, create it\r\n        }\r\n        else if (!oldNode) {\r\n            // check if already belongs to the same parent. if so, avoid pushing item in. only swapping can occur.\r\n            if (isStateTreeNode$$1(newValue) && getStateTreeNode$$1(newValue).parent === parent) {\r\n                // this node is owned by this parent, but not in the reconcilable set, so it must be double\r\n                fail(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\" + parent.path + \"/\" + newPaths[i] + \"', but it lives already at '\" + getStateTreeNode$$1(newValue).path + \"'\");\r\n            }\r\n            oldNodes.splice(i, 0, valueAsNode(childType, parent, \"\" + newPaths[i], newValue));\r\n            nothingChanged = false;\r\n            // both are the same, reconcile\r\n        }\r\n        else if (areSame(oldNode, newValue)) {\r\n            oldNodes[i] = valueAsNode(childType, parent, \"\" + newPaths[i], newValue, oldNode);\r\n            // nothing to do, try to reorder\r\n        }\r\n        else {\r\n            oldMatch = undefined;\r\n            // find a possible candidate to reuse\r\n            for (var j = i; j < oldNodes.length; j++) {\r\n                if (areSame(oldNodes[j], newValue)) {\r\n                    oldMatch = oldNodes.splice(j, 1)[0];\r\n                    break;\r\n                }\r\n            }\r\n            oldNodes.splice(i, 0, valueAsNode(childType, parent, \"\" + newPaths[i], newValue, oldMatch));\r\n            nothingChanged = false;\r\n        }\r\n    }\r\n    return nothingChanged ? null : oldNodes;\r\n}\r\n/**\r\n * Convert a value to a node at given parent and subpath. Attempts to reuse old node if possible and given.\r\n */\r\nfunction valueAsNode(childType, parent, subpath, newValue, oldNode) {\r\n    // ensure the value is valid-ish\r\n    typecheckInternal$$1(childType, newValue);\r\n    // the new value has a MST node\r\n    if (isStateTreeNode$$1(newValue)) {\r\n        var childNode = getStateTreeNode$$1(newValue);\r\n        childNode.assertAlive();\r\n        // the node lives here\r\n        if (childNode.parent !== null && childNode.parent === parent) {\r\n            childNode.setParent(parent, subpath);\r\n            if (oldNode && oldNode !== childNode)\r\n                oldNode.die();\r\n            return childNode;\r\n        }\r\n    }\r\n    // there is old node and new one is a value/snapshot\r\n    if (oldNode) {\r\n        var childNode = childType.reconcile(oldNode, newValue);\r\n        childNode.setParent(parent, subpath);\r\n        return childNode;\r\n    }\r\n    // nothing to do, create from scratch\r\n    return childType.instantiate(parent, subpath, parent.environment, newValue);\r\n}\r\n/**\r\n * Check if a node holds a value.\r\n */\r\nfunction areSame(oldNode, newValue) {\r\n    // the new value has the same node\r\n    if (isStateTreeNode$$1(newValue)) {\r\n        return getStateTreeNode$$1(newValue) === oldNode;\r\n    }\r\n    // the provided value is the snapshot of the old node\r\n    if (oldNode.snapshot === newValue)\r\n        return true;\r\n    // new value is a snapshot with the correct identifier\r\n    if (oldNode instanceof ObjectNode$$1 &&\r\n        oldNode.identifier !== null &&\r\n        oldNode.identifierAttribute &&\r\n        isPlainObject(newValue) &&\r\n        oldNode.identifier === normalizeIdentifier$$1(newValue[oldNode.identifierAttribute]) &&\r\n        oldNode.type.is(newValue))\r\n        return true;\r\n    return false;\r\n}\r\n/**\r\n * Returns if a given value represents an array type.\r\n *\r\n * @param type\r\n * @returns `true` if the type is an array type.\r\n */\r\nfunction isArrayType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Array) > 0;\r\n}\n\nvar PRE_PROCESS_SNAPSHOT = \"preProcessSnapshot\";\r\nvar POST_PROCESS_SNAPSHOT = \"postProcessSnapshot\";\r\nfunction objectTypeToString() {\r\n    return getStateTreeNode$$1(this).toString();\r\n}\r\nvar defaultObjectOptions = {\r\n    name: \"AnonymousModel\",\r\n    properties: {},\r\n    initializers: EMPTY_ARRAY\r\n};\r\nfunction toPropertiesObject(declaredProps) {\r\n    // loop through properties and ensures that all items are types\r\n    return Object.keys(declaredProps).reduce(function (props, key) {\r\n        var _a, _b, _c;\r\n        // warn if user intended a HOOK\r\n        if (key in Hook)\r\n            return fail(\"Hook '\" + key + \"' was defined as property. Hooks should be defined as part of the actions\");\r\n        // the user intended to use a view\r\n        var descriptor = Object.getOwnPropertyDescriptor(props, key);\r\n        if (\"get\" in descriptor) {\r\n            fail(\"Getters are not supported as properties. Please use views instead\");\r\n        }\r\n        // undefined and null are not valid\r\n        var value = descriptor.value;\r\n        if (value === null || value === undefined) {\r\n            fail(\"The default value of an attribute cannot be null or undefined as the type cannot be inferred. Did you mean `types.maybe(someType)`?\");\r\n            // its a primitive, convert to its type\r\n        }\r\n        else if (isPrimitive(value)) {\r\n            return Object.assign({}, props, (_a = {},\r\n                _a[key] = optional$$1(getPrimitiveFactoryFromValue$$1(value), value),\r\n                _a));\r\n            // map defaults to empty object automatically for models\r\n        }\r\n        else if (value instanceof MapType$$1) {\r\n            return Object.assign({}, props, (_b = {},\r\n                _b[key] = optional$$1(value, {}),\r\n                _b));\r\n        }\r\n        else if (value instanceof ArrayType$$1) {\r\n            return Object.assign({}, props, (_c = {}, _c[key] = optional$$1(value, []), _c));\r\n            // its already a type\r\n        }\r\n        else if (isType$$1(value)) {\r\n            return props;\r\n            // its a function, maybe the user wanted a view?\r\n        }\r\n        else if (false) {}\r\n        else if (false) {}\r\n        else {\r\n            fail(\"Invalid type definition for property '\" + key + \"', cannot infer a type from a value like '\" + value + \"' (\" + typeof value + \")\");\r\n        }\r\n    }, declaredProps);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar ModelType$$1 = /** @class */ (function (_super) {\r\n    __extends(ModelType$$1, _super);\r\n    function ModelType$$1(opts) {\r\n        var _this = _super.call(this, opts.name || defaultObjectOptions.name) || this;\r\n        _this.flags = TypeFlags$$1.Object;\r\n        _this.shouldAttachNode = true;\r\n        var name = opts.name || defaultObjectOptions.name;\r\n        // TODO: this test still needed?\r\n        if (!/^\\w[\\w\\d_]*$/.test(name))\r\n            fail(\"Typename should be a valid identifier: \" + name);\r\n        Object.assign(_this, defaultObjectOptions, opts);\r\n        // ensures that any default value gets converted to its related type\r\n        _this.properties = toPropertiesObject(_this.properties);\r\n        freeze(_this.properties); // make sure nobody messes with it\r\n        _this.propertyNames = Object.keys(_this.properties);\r\n        _this.identifierAttribute = _this._getIdentifierAttribute();\r\n        return _this;\r\n    }\r\n    ModelType$$1.prototype._getIdentifierAttribute = function () {\r\n        var identifierAttribute = undefined;\r\n        this.forAllProps(function (propName, propType) {\r\n            if (propType.flags & TypeFlags$$1.Identifier) {\r\n                if (identifierAttribute)\r\n                    fail(\"Cannot define property '\" + propName + \"' as object identifier, property '\" + identifierAttribute + \"' is already defined as identifier property\");\r\n                identifierAttribute = propName;\r\n            }\r\n        });\r\n        return identifierAttribute;\r\n    };\r\n    ModelType$$1.prototype.cloneAndEnhance = function (opts) {\r\n        return new ModelType$$1({\r\n            name: opts.name || this.name,\r\n            properties: Object.assign({}, this.properties, opts.properties),\r\n            initializers: this.initializers.concat(opts.initializers || []),\r\n            preProcessor: opts.preProcessor || this.preProcessor,\r\n            postProcessor: opts.postProcessor || this.postProcessor\r\n        });\r\n    };\r\n    ModelType$$1.prototype.actions = function (fn) {\r\n        var _this = this;\r\n        var actionInitializer = function (self) {\r\n            _this.instantiateActions(self, fn(self));\r\n            return self;\r\n        };\r\n        return this.cloneAndEnhance({ initializers: [actionInitializer] });\r\n    };\r\n    ModelType$$1.prototype.instantiateActions = function (self, actions) {\r\n        // check if return is correct\r\n        if (!isPlainObject(actions))\r\n            fail(\"actions initializer should return a plain object containing actions\");\r\n        // bind actions to the object created\r\n        Object.keys(actions).forEach(function (name) {\r\n            // warn if preprocessor was given\r\n            if (name === PRE_PROCESS_SNAPSHOT)\r\n                fail(\"Cannot define action '\" + PRE_PROCESS_SNAPSHOT + \"', it should be defined using 'type.preProcessSnapshot(fn)' instead\");\r\n            // warn if postprocessor was given\r\n            if (name === POST_PROCESS_SNAPSHOT)\r\n                fail(\"Cannot define action '\" + POST_PROCESS_SNAPSHOT + \"', it should be defined using 'type.postProcessSnapshot(fn)' instead\");\r\n            var action2 = actions[name];\r\n            // apply hook composition\r\n            var baseAction = self[name];\r\n            if (name in Hook && baseAction) {\r\n                var specializedAction_1 = action2;\r\n                action2 = function () {\r\n                    baseAction.apply(null, arguments);\r\n                    specializedAction_1.apply(null, arguments);\r\n                };\r\n            }\r\n            // the goal of this is to make sure actions using \"this\" can call themselves,\r\n            // while still allowing the middlewares to register them\r\n            var middlewares = action2.$mst_middleware; // make sure middlewares are not lost\r\n            var boundAction = action2.bind(actions);\r\n            boundAction.$mst_middleware = middlewares;\r\n            var actionInvoker = createActionInvoker$$1(self, name, boundAction);\r\n            actions[name] = actionInvoker;\r\n            ( true ? addHiddenFinalProp : undefined)(self, name, actionInvoker);\r\n        });\r\n    };\r\n    ModelType$$1.prototype.named = function (name) {\r\n        return this.cloneAndEnhance({ name: name });\r\n    };\r\n    ModelType$$1.prototype.props = function (properties) {\r\n        return this.cloneAndEnhance({ properties: properties });\r\n    };\r\n    ModelType$$1.prototype.volatile = function (fn) {\r\n        var _this = this;\r\n        var stateInitializer = function (self) {\r\n            _this.instantiateVolatileState(self, fn(self));\r\n            return self;\r\n        };\r\n        return this.cloneAndEnhance({ initializers: [stateInitializer] });\r\n    };\r\n    ModelType$$1.prototype.instantiateVolatileState = function (self, state) {\r\n        // check views return\r\n        if (!isPlainObject(state))\r\n            fail(\"volatile state initializer should return a plain object containing state\");\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"set\"])(self, state);\r\n    };\r\n    ModelType$$1.prototype.extend = function (fn) {\r\n        var _this = this;\r\n        var initializer = function (self) {\r\n            var _a = fn(self), actions = _a.actions, views = _a.views, state = _a.state, rest = __rest(_a, [\"actions\", \"views\", \"state\"]);\r\n            for (var key in rest)\r\n                fail(\"The `extend` function should return an object with a subset of the fields 'actions', 'views' and 'state'. Found invalid key '\" + key + \"'\");\r\n            if (state)\r\n                _this.instantiateVolatileState(self, state);\r\n            if (views)\r\n                _this.instantiateViews(self, views);\r\n            if (actions)\r\n                _this.instantiateActions(self, actions);\r\n            return self;\r\n        };\r\n        return this.cloneAndEnhance({ initializers: [initializer] });\r\n    };\r\n    ModelType$$1.prototype.views = function (fn) {\r\n        var _this = this;\r\n        var viewInitializer = function (self) {\r\n            _this.instantiateViews(self, fn(self));\r\n            return self;\r\n        };\r\n        return this.cloneAndEnhance({ initializers: [viewInitializer] });\r\n    };\r\n    ModelType$$1.prototype.instantiateViews = function (self, views) {\r\n        // check views return\r\n        if (!isPlainObject(views))\r\n            fail(\"views initializer should return a plain object containing views\");\r\n        Object.keys(views).forEach(function (key) {\r\n            // is this a computed property?\r\n            var descriptor = Object.getOwnPropertyDescriptor(views, key);\r\n            var value = descriptor.value;\r\n            if (\"get\" in descriptor) {\r\n                if (Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"isComputedProp\"])(self, key)) {\r\n                    var computedValue = Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"_getAdministration\"])(self, key);\r\n                    // TODO: mobx currently does not allow redefining computes yet, pending #1121\r\n                    // FIXME: this binds to the internals of mobx!\r\n                    computedValue.derivation = descriptor.get;\r\n                    computedValue.scope = self;\r\n                    if (descriptor.set)\r\n                        computedValue.setter = Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"])(computedValue.name + \"-setter\", descriptor.set);\r\n                }\r\n                else {\r\n                    Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"computed\"])(self, key, descriptor, true);\r\n                }\r\n            }\r\n            else if (typeof value === \"function\") {\r\n                ( true\r\n                    ? addHiddenFinalProp\r\n                    : undefined)(self, key, value);\r\n            }\r\n            else {\r\n                fail(\"A view member should either be a function or getter based property\");\r\n            }\r\n        });\r\n    };\r\n    ModelType$$1.prototype.preProcessSnapshot = function (preProcessor) {\r\n        var currentPreprocessor = this.preProcessor;\r\n        if (!currentPreprocessor)\r\n            return this.cloneAndEnhance({ preProcessor: preProcessor });\r\n        else\r\n            return this.cloneAndEnhance({\r\n                preProcessor: function (snapshot) { return currentPreprocessor(preProcessor(snapshot)); }\r\n            });\r\n    };\r\n    ModelType$$1.prototype.postProcessSnapshot = function (postProcessor) {\r\n        var currentPostprocessor = this.postProcessor;\r\n        if (!currentPostprocessor)\r\n            return this.cloneAndEnhance({ postProcessor: postProcessor });\r\n        else\r\n            return this.cloneAndEnhance({\r\n                postProcessor: function (snapshot) { return postProcessor(currentPostprocessor(snapshot)); }\r\n            });\r\n    };\r\n    ModelType$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        var initialValue = isStateTreeNode$$1(snapshot)\r\n            ? snapshot\r\n            : this.applySnapshotPreProcessor(snapshot);\r\n        return createNode$$1(this, parent, subpath, environment, initialValue);\r\n        // Optimization: record all prop- view- and action names after first construction, and generate an optimal base class\r\n        // that pre-reserves all these fields for fast object-member lookups\r\n    };\r\n    ModelType$$1.prototype.initializeChildNodes = function (objNode, initialSnapshot) {\r\n        if (initialSnapshot === void 0) { initialSnapshot = {}; }\r\n        var type = objNode.type;\r\n        var result = {};\r\n        type.forAllProps(function (name, childType) {\r\n            result[name] = childType.instantiate(objNode, name, objNode.environment, initialSnapshot[name]);\r\n        });\r\n        return result;\r\n    };\r\n    ModelType$$1.prototype.createNewInstance = function (node, childNodes, snapshot) {\r\n        return mobx__WEBPACK_IMPORTED_MODULE_0__[\"observable\"].object(childNodes, EMPTY_OBJECT, mobxShallow);\r\n    };\r\n    ModelType$$1.prototype.finalizeNewInstance = function (node, instance) {\r\n        addHiddenFinalProp(instance, \"toString\", objectTypeToString);\r\n        this.forAllProps(function (name) {\r\n            Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"_interceptReads\"])(instance, name, node.unbox);\r\n        });\r\n        this.initializers.reduce(function (self, fn) { return fn(self); }, instance);\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"intercept\"])(instance, this.willChange);\r\n        Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"observe\"])(instance, this.didChange);\r\n    };\r\n    ModelType$$1.prototype.willChange = function (change) {\r\n        var node = getStateTreeNode$$1(change.object);\r\n        node.assertWritable();\r\n        var type = node.type.properties[change.name];\r\n        // only properties are typed, state are stored as-is references\r\n        if (type) {\r\n            typecheckInternal$$1(type, change.newValue);\r\n            change.newValue = type.reconcile(node.getChildNode(change.name), change.newValue);\r\n        }\r\n        return change;\r\n    };\r\n    ModelType$$1.prototype.didChange = function (change) {\r\n        var node = getStateTreeNode$$1(change.object);\r\n        var type = node.type.properties[change.name];\r\n        if (!type) {\r\n            // don't emit patches for volatile state\r\n            return;\r\n        }\r\n        var oldValue = change.oldValue ? change.oldValue.snapshot : undefined;\r\n        node.emitPatch({\r\n            op: \"replace\",\r\n            path: escapeJsonPath$$1(change.name),\r\n            value: change.newValue.snapshot,\r\n            oldValue: oldValue\r\n        }, node);\r\n    };\r\n    ModelType$$1.prototype.getChildren = function (node) {\r\n        var _this = this;\r\n        var res = [];\r\n        this.forAllProps(function (name, type) {\r\n            res.push(_this.getChildNode(node, name));\r\n        });\r\n        return res;\r\n    };\r\n    ModelType$$1.prototype.getChildNode = function (node, key) {\r\n        if (!(key in this.properties))\r\n            return fail(\"Not a value property: \" + key);\r\n        var childNode = Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"_getAdministration\"])(node.storedValue, key).value; // TODO: blegh!\r\n        if (!childNode)\r\n            return fail(\"Node not available for property \" + key);\r\n        return childNode;\r\n    };\r\n    ModelType$$1.prototype.getValue = function (node) {\r\n        return node.storedValue;\r\n    };\r\n    ModelType$$1.prototype.getSnapshot = function (node, applyPostProcess) {\r\n        var _this = this;\r\n        if (applyPostProcess === void 0) { applyPostProcess = true; }\r\n        var res = {};\r\n        this.forAllProps(function (name, type) {\r\n            Object(mobx__WEBPACK_IMPORTED_MODULE_0__[\"getAtom\"])(node.storedValue, name).reportObserved();\r\n            res[name] = _this.getChildNode(node, name).snapshot;\r\n        });\r\n        if (applyPostProcess) {\r\n            return this.applySnapshotPostProcessor(res);\r\n        }\r\n        return res;\r\n    };\r\n    ModelType$$1.prototype.processInitialSnapshot = function (childNodes, snapshot) {\r\n        var processed = {};\r\n        Object.keys(childNodes).forEach(function (key) {\r\n            processed[key] = childNodes[key].getSnapshot();\r\n        });\r\n        return this.applySnapshotPostProcessor(this.applyOptionalValuesToSnapshot(processed));\r\n    };\r\n    ModelType$$1.prototype.applyPatchLocally = function (node, subpath, patch) {\r\n        if (!(patch.op === \"replace\" || patch.op === \"add\"))\r\n            fail(\"object does not support operation \" + patch.op);\r\n        node.storedValue[subpath] = patch.value;\r\n    };\r\n    ModelType$$1.prototype.applySnapshot = function (node, snapshot) {\r\n        var s = this.applySnapshotPreProcessor(snapshot);\r\n        typecheckInternal$$1(this, s);\r\n        this.forAllProps(function (name, type) {\r\n            node.storedValue[name] = s[name];\r\n        });\r\n    };\r\n    ModelType$$1.prototype.applySnapshotPreProcessor = function (snapshot) {\r\n        var processor = this.preProcessor;\r\n        return processor ? processor.call(null, snapshot) : snapshot;\r\n    };\r\n    ModelType$$1.prototype.applyOptionalValuesToSnapshot = function (snapshot) {\r\n        if (snapshot) {\r\n            snapshot = Object.assign({}, snapshot);\r\n            this.forAllProps(function (name, type) {\r\n                if (!(name in snapshot)) {\r\n                    var optional2 = tryGetOptional(type);\r\n                    if (optional2) {\r\n                        snapshot[name] = optional2.getDefaultValueSnapshot();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return snapshot;\r\n    };\r\n    ModelType$$1.prototype.applySnapshotPostProcessor = function (snapshot) {\r\n        var postProcessor = this.postProcessor;\r\n        if (postProcessor)\r\n            return postProcessor.call(null, snapshot);\r\n        return snapshot;\r\n    };\r\n    ModelType$$1.prototype.getChildType = function (key) {\r\n        return this.properties[key];\r\n    };\r\n    ModelType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        var _this = this;\r\n        var snapshot = this.applySnapshotPreProcessor(value);\r\n        if (!isPlainObject(snapshot)) {\r\n            return typeCheckFailure$$1(context, snapshot, \"Value is not a plain object\");\r\n        }\r\n        return flattenTypeErrors$$1(this.propertyNames.map(function (key) {\r\n            return _this.properties[key].validate(snapshot[key], getContextForPath$$1(context, key, _this.properties[key]));\r\n        }));\r\n    };\r\n    ModelType$$1.prototype.forAllProps = function (fn) {\r\n        var _this = this;\r\n        this.propertyNames.forEach(function (key) { return fn(key, _this.properties[key]); });\r\n    };\r\n    ModelType$$1.prototype.describe = function () {\r\n        var _this = this;\r\n        // optimization: cache\r\n        return (\"{ \" +\r\n            this.propertyNames.map(function (key) { return key + \": \" + _this.properties[key].describe(); }).join(\"; \") +\r\n            \" }\");\r\n    };\r\n    ModelType$$1.prototype.getDefaultSnapshot = function () {\r\n        return EMPTY_OBJECT;\r\n    };\r\n    ModelType$$1.prototype.removeChild = function (node, subpath) {\r\n        node.storedValue[subpath] = undefined;\r\n    };\r\n    __decorate([\r\n        mobx__WEBPACK_IMPORTED_MODULE_0__[\"action\"]\r\n    ], ModelType$$1.prototype, \"applySnapshot\", null);\r\n    return ModelType$$1;\r\n}(ComplexType$$1));\r\n/**\r\n * `types.model` - Creates a new model type by providing a name, properties, volatile state and actions.\r\n *\r\n * See the [model type](https://github.com/mobxjs/mobx-state-tree#creating-models) description or the [getting started](https://github.com/mobxjs/mobx-state-tree/blob/master/docs/getting-started.md#getting-started-1) tutorial.\r\n */\r\nfunction model$$1() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var name = typeof args[0] === \"string\" ? args.shift() : \"AnonymousModel\";\r\n    var properties = args.shift() || {};\r\n    return new ModelType$$1({ name: name, properties: properties });\r\n}\r\n/**\r\n * `types.compose` - Composes a new model from one or more existing model types.\r\n * This method can be invoked in two forms:\r\n * Given 2 or more model types, the types are composed into a new Type.\r\n * Given first parameter as a string and 2 or more model types,\r\n * the types are composed into a new Type with the given name\r\n */\r\nfunction compose$$1() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    // TODO: just join the base type names if no name is provided\r\n    var typeName = typeof args[0] === \"string\" ? args.shift() : \"AnonymousModel\";\r\n    // check all parameters\r\n    if (false) {}\r\n    return args\r\n        .reduce(function (prev, cur) {\r\n        return prev.cloneAndEnhance({\r\n            name: prev.name + \"_\" + cur.name,\r\n            properties: cur.properties,\r\n            initializers: cur.initializers,\r\n            preProcessor: function (snapshot) {\r\n                return cur.applySnapshotPreProcessor(prev.applySnapshotPreProcessor(snapshot));\r\n            },\r\n            postProcessor: function (snapshot) {\r\n                return cur.applySnapshotPostProcessor(prev.applySnapshotPostProcessor(snapshot));\r\n            }\r\n        });\r\n    })\r\n        .named(typeName);\r\n}\r\n/**\r\n * Returns if a given value represents a model type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isModelType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Object) > 0;\r\n}\r\nfunction tryGetOptional(type) {\r\n    if (!type)\r\n        return undefined;\r\n    // we need to check for type.types since an optional union doesn't have direct subtypes\r\n    if (type.flags & TypeFlags$$1.Union && type.types)\r\n        return type.types.find(tryGetOptional);\r\n    if (type.flags & TypeFlags$$1.Late && type.getSubType && type.getSubType(false))\r\n        return tryGetOptional(type.subType);\r\n    if (type.flags & TypeFlags$$1.Optional)\r\n        return type;\r\n    return undefined;\r\n}\n\n// TODO: implement CoreType using types.custom ?\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar CoreType$$1 = /** @class */ (function (_super) {\r\n    __extends(CoreType$$1, _super);\r\n    function CoreType$$1(name, flags, checker, initializer) {\r\n        if (initializer === void 0) { initializer = identity; }\r\n        var _this = _super.call(this, name) || this;\r\n        _this.shouldAttachNode = false;\r\n        _this.flags = flags;\r\n        _this.checker = checker;\r\n        _this.initializer = initializer;\r\n        return _this;\r\n    }\r\n    CoreType$$1.prototype.describe = function () {\r\n        return this.name;\r\n    };\r\n    CoreType$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        return createNode$$1(this, parent, subpath, environment, snapshot);\r\n    };\r\n    CoreType$$1.prototype.createNewInstance = function (node, childNodes, snapshot) {\r\n        return this.initializer(snapshot);\r\n    };\r\n    CoreType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        if (isPrimitive(value) && this.checker(value)) {\r\n            return typeCheckSuccess$$1();\r\n        }\r\n        var typeName = this.name === \"Date\" ? \"Date or a unix milliseconds timestamp\" : this.name;\r\n        return typeCheckFailure$$1(context, value, \"Value is not a \" + typeName);\r\n    };\r\n    return CoreType$$1;\r\n}(Type$$1));\r\n/**\r\n * `types.string` - Creates a type that can only contain a string value.\r\n * This type is used for string values by default\r\n *\r\n * Example:\r\n * ```ts\r\n * const Person = types.model({\r\n *   firstName: types.string,\r\n *   lastName: \"Doe\"\r\n * })\r\n * ```\r\n */\r\n// tslint:disable-next-line:variable-name\r\nvar string$$1 = new CoreType$$1(\"string\", TypeFlags$$1.String, function (v) { return typeof v === \"string\"; });\r\n/**\r\n * `types.number` - Creates a type that can only contain a numeric value.\r\n * This type is used for numeric values by default\r\n *\r\n * Example:\r\n * ```ts\r\n * const Vector = types.model({\r\n *   x: types.number,\r\n *   y: 1.5\r\n * })\r\n * ```\r\n */\r\n// tslint:disable-next-line:variable-name\r\nvar number$$1 = new CoreType$$1(\"number\", TypeFlags$$1.Number, function (v) { return typeof v === \"number\"; });\r\n/**\r\n * `types.integer` - Creates a type that can only contain an integer value.\r\n * This type is used for integer values by default\r\n *\r\n * Example:\r\n * ```ts\r\n * const Size = types.model({\r\n *   width: types.integer,\r\n *   height: 10\r\n * })\r\n * ```\r\n */\r\n// tslint:disable-next-line:variable-name\r\nvar integer$$1 = new CoreType$$1(\"integer\", TypeFlags$$1.Integer, function (v) { return isInteger(v); });\r\n/**\r\n * `types.boolean` - Creates a type that can only contain a boolean value.\r\n * This type is used for boolean values by default\r\n *\r\n * Example:\r\n * ```ts\r\n * const Thing = types.model({\r\n *   isCool: types.boolean,\r\n *   isAwesome: false\r\n * })\r\n * ```\r\n */\r\n// tslint:disable-next-line:variable-name\r\nvar boolean$$1 = new CoreType$$1(\"boolean\", TypeFlags$$1.Boolean, function (v) { return typeof v === \"boolean\"; });\r\n/**\r\n * `types.null` - The type of the value `null`\r\n */\r\nvar nullType$$1 = new CoreType$$1(\"null\", TypeFlags$$1.Null, function (v) { return v === null; });\r\n/**\r\n * `types.undefined` - The type of the value `undefined`\r\n */\r\nvar undefinedType$$1 = new CoreType$$1(\"undefined\", TypeFlags$$1.Undefined, function (v) { return v === undefined; });\r\n/**\r\n * `types.Date` - Creates a type that can only contain a javascript Date value.\r\n *\r\n * Example:\r\n * ```ts\r\n * const LogLine = types.model({\r\n *   timestamp: types.Date,\r\n * })\r\n *\r\n * LogLine.create({ timestamp: new Date() })\r\n * ```\r\n */\r\n// tslint:disable-next-line:variable-name\r\nvar DatePrimitive$$1 = new CoreType$$1(\"Date\", TypeFlags$$1.Date, function (v) { return typeof v === \"number\" || v instanceof Date; }, function (v) { return (v instanceof Date ? v : new Date(v)); });\r\nDatePrimitive$$1.getSnapshot = function (node) {\r\n    return node.storedValue.getTime();\r\n};\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction getPrimitiveFactoryFromValue$$1(value) {\r\n    switch (typeof value) {\r\n        case \"string\":\r\n            return string$$1;\r\n        case \"number\":\r\n            return number$$1; // In the future, isInteger(value) ? integer : number would be interesting, but would be too breaking for now\r\n        case \"boolean\":\r\n            return boolean$$1;\r\n        case \"object\":\r\n            if (value instanceof Date)\r\n                return DatePrimitive$$1;\r\n    }\r\n    return fail(\"Cannot determine primitive type from value \" + value);\r\n}\r\n/**\r\n * Returns if a given value represents a primitive type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isPrimitiveType$$1(type) {\r\n    return (isType$$1(type) &&\r\n        (type.flags &\r\n            (TypeFlags$$1.String |\r\n                TypeFlags$$1.Number |\r\n                TypeFlags$$1.Integer |\r\n                TypeFlags$$1.Boolean |\r\n                TypeFlags$$1.Date)) >\r\n            0);\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar Literal$$1 = /** @class */ (function (_super) {\r\n    __extends(Literal$$1, _super);\r\n    function Literal$$1(value) {\r\n        var _this = _super.call(this, JSON.stringify(value)) || this;\r\n        _this.shouldAttachNode = false;\r\n        _this.flags = TypeFlags$$1.Literal;\r\n        _this.value = value;\r\n        return _this;\r\n    }\r\n    Literal$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        return createNode$$1(this, parent, subpath, environment, snapshot);\r\n    };\r\n    Literal$$1.prototype.describe = function () {\r\n        return JSON.stringify(this.value);\r\n    };\r\n    Literal$$1.prototype.isValidSnapshot = function (value, context) {\r\n        if (isPrimitive(value) && value === this.value) {\r\n            return typeCheckSuccess$$1();\r\n        }\r\n        return typeCheckFailure$$1(context, value, \"Value is not a literal \" + JSON.stringify(this.value));\r\n    };\r\n    return Literal$$1;\r\n}(Type$$1));\r\n/**\r\n * `types.literal` - The literal type will return a type that will match only the exact given type.\r\n * The given value must be a primitive, in order to be serialized to a snapshot correctly.\r\n * You can use literal to match exact strings for example the exact male or female string.\r\n *\r\n * Example:\r\n * ```ts\r\n * const Person = types.model({\r\n *     name: types.string,\r\n *     gender: types.union(types.literal('male'), types.literal('female'))\r\n * })\r\n * ```\r\n *\r\n * @param value The value to use in the strict equal check\r\n * @returns\r\n */\r\nfunction literal$$1(value) {\r\n    // check that the given value is a primitive\r\n    if (false) {}\r\n    return new Literal$$1(value);\r\n}\r\n/**\r\n * Returns if a given value represents a literal type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isLiteralType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Literal) > 0;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar Refinement$$1 = /** @class */ (function (_super) {\r\n    __extends(Refinement$$1, _super);\r\n    function Refinement$$1(name, type, predicate, message) {\r\n        var _this = _super.call(this, name) || this;\r\n        _this.type = type;\r\n        _this.predicate = predicate;\r\n        _this.message = message;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Refinement$$1.prototype, \"flags\", {\r\n        get: function () {\r\n            return this.type.flags | TypeFlags$$1.Refinement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Refinement$$1.prototype, \"shouldAttachNode\", {\r\n        get: function () {\r\n            return this.type.shouldAttachNode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Refinement$$1.prototype.describe = function () {\r\n        return this.name;\r\n    };\r\n    Refinement$$1.prototype.instantiate = function (parent, subpath, environment, value) {\r\n        // create the child type\r\n        var inst = this.type.instantiate(parent, subpath, environment, value);\r\n        return inst;\r\n    };\r\n    Refinement$$1.prototype.isAssignableFrom = function (type) {\r\n        return this.type.isAssignableFrom(type);\r\n    };\r\n    Refinement$$1.prototype.isValidSnapshot = function (value, context) {\r\n        var subtypeErrors = this.type.validate(value, context);\r\n        if (subtypeErrors.length > 0)\r\n            return subtypeErrors;\r\n        var snapshot = isStateTreeNode$$1(value) ? getStateTreeNode$$1(value).snapshot : value;\r\n        if (!this.predicate(snapshot)) {\r\n            return typeCheckFailure$$1(context, value, this.message(value));\r\n        }\r\n        return typeCheckSuccess$$1();\r\n    };\r\n    return Refinement$$1;\r\n}(Type$$1));\r\n/**\r\n * `types.refinement` - Creates a type that is more specific than the base type, e.g. `types.refinement(types.string, value => value.length > 5)` to create a type of strings that can only be longer then 5.\r\n *\r\n * @param name\r\n * @param type\r\n * @param predicate\r\n * @returns\r\n */\r\nfunction refinement$$1() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var name = typeof args[0] === \"string\" ? args.shift() : isType$$1(args[0]) ? args[0].name : null;\r\n    var type = args[0];\r\n    var predicate = args[1];\r\n    var message = args[2]\r\n        ? args[2]\r\n        : function (v) { return \"Value does not respect the refinement predicate\"; };\r\n    // ensures all parameters are correct\r\n    if (false) {}\r\n    return new Refinement$$1(name, type, predicate, message);\r\n}\r\n/**\r\n * Returns if a given value is a refinement type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isRefinementType$$1(type) {\r\n    return (type.flags & TypeFlags$$1.Refinement) > 0;\r\n}\n\n/**\r\n * `types.enumeration` - Can be used to create an string based enumeration.\r\n * (note: this methods is just sugar for a union of string literals)\r\n *\r\n * Example:\r\n * ```ts\r\n * const TrafficLight = types.model({\r\n *   color: types.enumeration(\"Color\", [\"Red\", \"Orange\", \"Green\"])\r\n * })\r\n * ```\r\n *\r\n * @param name descriptive name of the enumeration (optional)\r\n * @param options possible values this enumeration can have\r\n * @returns\r\n */\r\nfunction enumeration$$1(name, options) {\r\n    var realOptions = typeof name === \"string\" ? options : name;\r\n    // check all options\r\n    if (false) {}\r\n    var type = union$$1.apply(void 0, realOptions.map(function (option) { return literal$$1(\"\" + option); }));\r\n    if (typeof name === \"string\")\r\n        type.name = name;\r\n    return type;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar Union$$1 = /** @class */ (function (_super) {\r\n    __extends(Union$$1, _super);\r\n    function Union$$1(name, types$$1, options) {\r\n        var _this = _super.call(this, name) || this;\r\n        _this.eager = true;\r\n        options = __assign({ eager: true, dispatcher: undefined }, options);\r\n        _this.dispatcher = options.dispatcher;\r\n        if (!options.eager)\r\n            _this.eager = false;\r\n        _this.types = types$$1;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Union$$1.prototype, \"flags\", {\r\n        get: function () {\r\n            var result = TypeFlags$$1.Union;\r\n            this.types.forEach(function (type) {\r\n                result |= type.flags;\r\n            });\r\n            return result;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Union$$1.prototype, \"shouldAttachNode\", {\r\n        get: function () {\r\n            return this.types.some(function (type) { return type.shouldAttachNode; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Union$$1.prototype.isAssignableFrom = function (type) {\r\n        return this.types.some(function (subType) { return subType.isAssignableFrom(type); });\r\n    };\r\n    Union$$1.prototype.describe = function () {\r\n        return \"(\" + this.types.map(function (factory) { return factory.describe(); }).join(\" | \") + \")\";\r\n    };\r\n    Union$$1.prototype.instantiate = function (parent, subpath, environment, value) {\r\n        var type = this.determineType(value, undefined);\r\n        if (!type)\r\n            return fail(\"No matching type for union \" + this.describe()); // can happen in prod builds\r\n        return type.instantiate(parent, subpath, environment, value);\r\n    };\r\n    Union$$1.prototype.reconcile = function (current, newValue) {\r\n        var type = this.determineType(newValue, current.type);\r\n        if (!type)\r\n            return fail(\"No matching type for union \" + this.describe()); // can happen in prod builds\r\n        return type.reconcile(current, newValue);\r\n    };\r\n    Union$$1.prototype.determineType = function (value, reconcileCurrentType) {\r\n        // try the dispatcher, if defined\r\n        if (this.dispatcher) {\r\n            return this.dispatcher(value);\r\n        }\r\n        // find the most accomodating type\r\n        // if we are using reconciliation try the current node type first (fix for #1045)\r\n        if (reconcileCurrentType) {\r\n            if (reconcileCurrentType.is(value)) {\r\n                return reconcileCurrentType;\r\n            }\r\n            return this.types.filter(function (t) { return t !== reconcileCurrentType; }).find(function (type) { return type.is(value); });\r\n        }\r\n        else {\r\n            return this.types.find(function (type) { return type.is(value); });\r\n        }\r\n    };\r\n    Union$$1.prototype.isValidSnapshot = function (value, context) {\r\n        if (this.dispatcher) {\r\n            return this.dispatcher(value).validate(value, context);\r\n        }\r\n        var allErrors = [];\r\n        var applicableTypes = 0;\r\n        for (var i = 0; i < this.types.length; i++) {\r\n            var type = this.types[i];\r\n            var errors = type.validate(value, context);\r\n            if (errors.length === 0) {\r\n                if (this.eager)\r\n                    return typeCheckSuccess$$1();\r\n                else\r\n                    applicableTypes++;\r\n            }\r\n            else {\r\n                allErrors.push(errors);\r\n            }\r\n        }\r\n        if (applicableTypes === 1)\r\n            return typeCheckSuccess$$1();\r\n        return typeCheckFailure$$1(context, value, \"No type is applicable for the union\").concat(flattenTypeErrors$$1(allErrors));\r\n    };\r\n    return Union$$1;\r\n}(Type$$1));\r\n/**\r\n * `types.union` - Create a union of multiple types. If the correct type cannot be inferred unambiguously from a snapshot, provide a dispatcher function of the form `(snapshot) => Type`.\r\n *\r\n * @param optionsOrType\r\n * @param otherTypes\r\n * @returns\r\n */\r\nfunction union$$1(optionsOrType) {\r\n    var otherTypes = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        otherTypes[_i - 1] = arguments[_i];\r\n    }\r\n    var options = isType$$1(optionsOrType) ? undefined : optionsOrType;\r\n    var types$$1 = isType$$1(optionsOrType) ? [optionsOrType].concat(otherTypes) : otherTypes;\r\n    var name = \"(\" + types$$1.map(function (type) { return type.name; }).join(\" | \") + \")\";\r\n    // check all options\r\n    if (false) {}\r\n    return new Union$$1(name, types$$1, options);\r\n}\r\n/**\r\n * Returns if a given value represents a union type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isUnionType$$1(type) {\r\n    return (type.flags & TypeFlags$$1.Union) > 0;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar OptionalValue$$1 = /** @class */ (function (_super) {\r\n    __extends(OptionalValue$$1, _super);\r\n    function OptionalValue$$1(type, defaultValue) {\r\n        var _this = _super.call(this, type.name) || this;\r\n        _this.type = type;\r\n        _this.defaultValue = defaultValue;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(OptionalValue$$1.prototype, \"flags\", {\r\n        get: function () {\r\n            return this.type.flags | TypeFlags$$1.Optional;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OptionalValue$$1.prototype, \"shouldAttachNode\", {\r\n        get: function () {\r\n            return this.type.shouldAttachNode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    OptionalValue$$1.prototype.describe = function () {\r\n        return this.type.describe() + \"?\";\r\n    };\r\n    OptionalValue$$1.prototype.instantiate = function (parent, subpath, environment, value) {\r\n        if (typeof value === \"undefined\") {\r\n            var defaultInstanceOrSnapshot = this.getDefaultInstanceOrSnapshot();\r\n            return this.type.instantiate(parent, subpath, environment, defaultInstanceOrSnapshot);\r\n        }\r\n        return this.type.instantiate(parent, subpath, environment, value);\r\n    };\r\n    OptionalValue$$1.prototype.reconcile = function (current, newValue) {\r\n        return this.type.reconcile(current, this.type.is(newValue) && newValue !== undefined\r\n            ? newValue\r\n            : this.getDefaultInstanceOrSnapshot());\r\n    };\r\n    OptionalValue$$1.prototype.getDefaultInstanceOrSnapshot = function () {\r\n        var defaultInstanceOrSnapshot = typeof this.defaultValue === \"function\"\r\n            ? this.defaultValue()\r\n            : this.defaultValue;\r\n        // while static values are already snapshots and checked on types.optional\r\n        // generator functions must always be rechecked just in case\r\n        if (typeof this.defaultValue === \"function\") {\r\n            typecheckInternal$$1(this, defaultInstanceOrSnapshot);\r\n        }\r\n        return defaultInstanceOrSnapshot;\r\n    };\r\n    OptionalValue$$1.prototype.getDefaultValueSnapshot = function () {\r\n        var instanceOrSnapshot = this.getDefaultInstanceOrSnapshot();\r\n        return isStateTreeNode$$1(instanceOrSnapshot)\r\n            ? getStateTreeNode$$1(instanceOrSnapshot).snapshot\r\n            : instanceOrSnapshot;\r\n    };\r\n    OptionalValue$$1.prototype.isValidSnapshot = function (value, context) {\r\n        // defaulted values can be skipped\r\n        if (value === undefined) {\r\n            return typeCheckSuccess$$1();\r\n        }\r\n        // bounce validation to the sub-type\r\n        return this.type.validate(value, context);\r\n    };\r\n    OptionalValue$$1.prototype.isAssignableFrom = function (type) {\r\n        return this.type.isAssignableFrom(type);\r\n    };\r\n    return OptionalValue$$1;\r\n}(Type$$1));\r\n/**\r\n * `types.optional` - Can be used to create a property with a default value.\r\n * If the given value is not provided in the snapshot, it will default to the provided `defaultValue`.\r\n * If `defaultValue` is a function, the function will be invoked for every new instance.\r\n * Applying a snapshot in which the optional value is _not_ present, causes the value to be reset\r\n *\r\n * Example:\r\n * ```ts\r\n * const Todo = types.model({\r\n *   title: types.optional(types.string, \"Test\"),\r\n *   done: types.optional(types.boolean, false),\r\n *   created: types.optional(types.Date, () => new Date())\r\n * })\r\n *\r\n * // it is now okay to omit 'created' and 'done'. created will get a freshly generated timestamp\r\n * const todo = Todo.create({ title: \"Get coffee \"})\r\n * ```\r\n *\r\n * @param type\r\n * @param defaultValueOrFunction\r\n * @returns\r\n */\r\nfunction optional$$1(type, defaultValueOrFunction) {\r\n    // make sure we never pass direct instances\r\n    if (typeof defaultValueOrFunction !== \"function\" && isStateTreeNode$$1(defaultValueOrFunction)) {\r\n        fail(\"default value cannot be an instance, pass a snapshot or a function that creates an instance/snapshot instead\");\r\n    }\r\n    if (false) {}\r\n    var ret = new OptionalValue$$1(type, defaultValueOrFunction);\r\n    return ret;\r\n}\r\n/**\r\n * Returns if a value represents an optional type.\r\n *\r\n * @template IT\r\n * @param type\r\n * @returns\r\n */\r\nfunction isOptionalType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Optional) > 0;\r\n}\n\nvar optionalUndefinedType = optional$$1(undefinedType$$1, undefined);\r\nvar optionalNullType = optional$$1(nullType$$1, null);\r\n/**\r\n * `types.maybe` - Maybe will make a type nullable, and also optional.\r\n * The value `undefined` will be used to represent nullability.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction maybe$$1(type) {\r\n    if (false)\r\n        {}\r\n    return union$$1(type, optionalUndefinedType);\r\n}\r\n/**\r\n * `types.maybeNull` - Maybe will make a type nullable, and also optional.\r\n * The value `null` will be used to represent no value.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction maybeNull$$1(type) {\r\n    if (false)\r\n        {}\r\n    return union$$1(type, optionalNullType);\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar Late$$1 = /** @class */ (function (_super) {\r\n    __extends(Late$$1, _super);\r\n    function Late$$1(name, definition) {\r\n        var _this = _super.call(this, name) || this;\r\n        _this._subType = null;\r\n        _this.definition = definition;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Late$$1.prototype, \"flags\", {\r\n        get: function () {\r\n            return (this._subType ? this._subType.flags : 0) | TypeFlags$$1.Late;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Late$$1.prototype, \"shouldAttachNode\", {\r\n        get: function () {\r\n            return this.getSubType(true).shouldAttachNode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Late$$1.prototype.getSubType = function (mustSucceed) {\r\n        if (this._subType === null) {\r\n            var t = undefined;\r\n            try {\r\n                t = this.definition();\r\n            }\r\n            catch (e) {\r\n                if (e instanceof ReferenceError)\r\n                    // can happen in strict ES5 code when a definition is self refering\r\n                    t = undefined;\r\n                else\r\n                    throw e;\r\n            }\r\n            if (mustSucceed && t === undefined)\r\n                fail(\"Late type seems to be used too early, the definition (still) returns undefined\");\r\n            if (t) {\r\n                if (false)\r\n                    {}\r\n                this._subType = t;\r\n                return t;\r\n            }\r\n        }\r\n        return this._subType;\r\n    };\r\n    Late$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        return this.getSubType(true).instantiate(parent, subpath, environment, snapshot);\r\n    };\r\n    Late$$1.prototype.reconcile = function (current, newValue) {\r\n        return this.getSubType(true).reconcile(current, newValue);\r\n    };\r\n    Late$$1.prototype.describe = function () {\r\n        var t = this.getSubType(false);\r\n        return t ? t.name : \"<uknown late type>\";\r\n    };\r\n    Late$$1.prototype.isValidSnapshot = function (value, context) {\r\n        var t = this.getSubType(false);\r\n        if (!t) {\r\n            // See #916; the variable the definition closure is pointing to wasn't defined yet, so can't be evaluted yet here\r\n            return typeCheckSuccess$$1();\r\n        }\r\n        return t.validate(value, context);\r\n    };\r\n    Late$$1.prototype.isAssignableFrom = function (type) {\r\n        var t = this.getSubType(false);\r\n        return t ? t.isAssignableFrom(type) : false;\r\n    };\r\n    return Late$$1;\r\n}(Type$$1));\r\n/**\r\n * `types.late` - Defines a type that gets implemented later. This is useful when you have to deal with circular dependencies.\r\n * Please notice that when defining circular dependencies TypeScript isn't smart enough to inference them.\r\n * You need to declare an interface to explicit the return type of the late parameter function.\r\n *\r\n * Example:\r\n * ```ts\r\n *  interface INode {\r\n *       childs: INode[]\r\n *  }\r\n *\r\n *   // TypeScript is'nt smart enough to infer self referencing types.\r\n *  const Node = types.model({\r\n *       childs: types.optional(types.array(types.late<any, INode>(() => Node)), [])\r\n *  })\r\n * ```\r\n *\r\n * @param name The name to use for the type that will be returned.\r\n * @param type A function that returns the type that will be defined.\r\n * @returns\r\n */\r\nfunction late$$1(nameOrType, maybeType) {\r\n    var name = typeof nameOrType === \"string\" ? nameOrType : \"late(\" + nameOrType.toString() + \")\";\r\n    var type = typeof nameOrType === \"string\" ? maybeType : nameOrType;\r\n    // checks that the type is actually a late type\r\n    if (false) {}\r\n    return new Late$$1(name, type);\r\n}\r\n/**\r\n * Returns if a given value represents a late type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isLateType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Late) > 0;\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar Frozen$$1 = /** @class */ (function (_super) {\r\n    __extends(Frozen$$1, _super);\r\n    function Frozen$$1(subType) {\r\n        var _this = _super.call(this, subType ? \"frozen(\" + subType.name + \")\" : \"frozen\") || this;\r\n        _this.subType = subType;\r\n        _this.shouldAttachNode = false;\r\n        _this.flags = TypeFlags$$1.Frozen;\r\n        return _this;\r\n    }\r\n    Frozen$$1.prototype.describe = function () {\r\n        return \"<any immutable value>\";\r\n    };\r\n    Frozen$$1.prototype.instantiate = function (parent, subpath, environment, value) {\r\n        // create the node\r\n        return createNode$$1(this, parent, subpath, environment, deepFreeze(value));\r\n    };\r\n    Frozen$$1.prototype.isValidSnapshot = function (value, context) {\r\n        if (!isSerializable(value)) {\r\n            return typeCheckFailure$$1(context, value, \"Value is not serializable and cannot be frozen\");\r\n        }\r\n        if (this.subType)\r\n            return this.subType.validate(value, context);\r\n        return typeCheckSuccess$$1();\r\n    };\r\n    return Frozen$$1;\r\n}(Type$$1));\r\nvar untypedFrozenInstance = new Frozen$$1();\r\n/**\r\n * `types.frozen` - Frozen can be used to store any value that is serializable in itself (that is valid JSON).\r\n * Frozen values need to be immutable or treated as if immutable. They need be serializable as well.\r\n * Values stored in frozen will snapshotted as-is by MST, and internal changes will not be tracked.\r\n *\r\n * This is useful to store complex, but immutable values like vectors etc. It can form a powerful bridge to parts of your application that should be immutable, or that assume data to be immutable.\r\n *\r\n * Note: if you want to store free-form state that is mutable, or not serializeable, consider using volatile state instead.\r\n *\r\n * Frozen properties can be defined in three different ways\r\n * 1. `types.frozen(SubType)` - provide a valid MST type and frozen will check if the provided data conforms the snapshot for that type\r\n * 2. `types.frozen({ someDefaultValue: true})` - provide a primitive value, object or array, and MST will infer the type from that object, and also make it the default value for the field\r\n * 3. `types.frozen<TypeScriptType>()` - provide a typescript type, to help in strongly typing the field (design time only)\r\n *\r\n * Example:\r\n * ```ts\r\n * const GameCharacter = types.model({\r\n *   name: string,\r\n *   location: types.frozen({ x: 0, y: 0})\r\n * })\r\n *\r\n * const hero = GameCharacter.create({\r\n *   name: \"Mario\",\r\n *   location: { x: 7, y: 4 }\r\n * })\r\n *\r\n * hero.location = { x: 10, y: 2 } // OK\r\n * hero.location.x = 7 // Not ok!\r\n * ```\r\n *\r\n * ```ts\r\n * type Point = { x: number, y: number }\r\n *    const Mouse = types.model({\r\n *         loc: types.frozen<Point>()\r\n *    })\r\n * ```\r\n *\r\n * @param defaultValueOrType\r\n * @returns\r\n */\r\nfunction frozen$$1(arg) {\r\n    if (arguments.length === 0)\r\n        return untypedFrozenInstance;\r\n    else if (isType$$1(arg))\r\n        return new Frozen$$1(arg);\r\n    else\r\n        return optional$$1(untypedFrozenInstance, arg);\r\n}\r\n/**\r\n * Returns if a given value represents a frozen type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isFrozenType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Frozen) > 0;\r\n}\n\nfunction getInvalidationCause(hook) {\r\n    switch (hook) {\r\n        case Hook.beforeDestroy:\r\n            return \"destroy\";\r\n        case Hook.beforeDetach:\r\n            return \"detach\";\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nvar StoredReference = /** @class */ (function () {\r\n    function StoredReference(value, targetType) {\r\n        this.targetType = targetType;\r\n        if (typeof value === \"string\" || typeof value === \"number\") {\r\n            this.identifier = value;\r\n        }\r\n        else if (isStateTreeNode$$1(value)) {\r\n            var targetNode = getStateTreeNode$$1(value);\r\n            if (!targetNode.identifierAttribute)\r\n                return fail(\"Can only store references with a defined identifier attribute.\");\r\n            var id = targetNode.unnormalizedIdentifier;\r\n            if (id === null || id === undefined) {\r\n                return fail(\"Can only store references to tree nodes with a defined identifier.\");\r\n            }\r\n            this.identifier = id;\r\n        }\r\n        else {\r\n            return fail(\"Can only store references to tree nodes or identifiers, got: '\" + value + \"'\");\r\n        }\r\n    }\r\n    StoredReference.prototype.updateResolvedReference = function (node) {\r\n        var normalizedId = normalizeIdentifier$$1(this.identifier);\r\n        var lastCacheModification = node.root.identifierCache.getLastCacheModificationPerId(normalizedId);\r\n        if (!this.resolvedReference ||\r\n            this.resolvedReference.lastCacheModification !== lastCacheModification) {\r\n            var targetType = this.targetType;\r\n            // reference was initialized with the identifier of the target\r\n            var target = node.root.identifierCache.resolve(targetType, normalizedId);\r\n            if (!target) {\r\n                throw new InvalidReferenceError$$1(\"[mobx-state-tree] Failed to resolve reference '\" + this.identifier + \"' to type '\" + this.targetType.name + \"' (from node: \" + node.path + \")\");\r\n            }\r\n            this.resolvedReference = {\r\n                node: target,\r\n                lastCacheModification: lastCacheModification\r\n            };\r\n        }\r\n    };\r\n    Object.defineProperty(StoredReference.prototype, \"resolvedValue\", {\r\n        get: function () {\r\n            this.updateResolvedReference(this.node);\r\n            return this.resolvedReference.node.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return StoredReference;\r\n}());\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar InvalidReferenceError$$1 = /** @class */ (function (_super) {\r\n    __extends(InvalidReferenceError$$1, _super);\r\n    function InvalidReferenceError$$1(m) {\r\n        var _this = _super.call(this, m) || this;\r\n        Object.setPrototypeOf(_this, InvalidReferenceError$$1.prototype);\r\n        return _this;\r\n    }\r\n    return InvalidReferenceError$$1;\r\n}(Error));\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar BaseReferenceType$$1 = /** @class */ (function (_super) {\r\n    __extends(BaseReferenceType$$1, _super);\r\n    function BaseReferenceType$$1(targetType, onInvalidated) {\r\n        var _this = _super.call(this, \"reference(\" + targetType.name + \")\") || this;\r\n        _this.targetType = targetType;\r\n        _this.onInvalidated = onInvalidated;\r\n        _this.shouldAttachNode = false;\r\n        _this.flags = TypeFlags$$1.Reference;\r\n        return _this;\r\n    }\r\n    BaseReferenceType$$1.prototype.describe = function () {\r\n        return this.name;\r\n    };\r\n    BaseReferenceType$$1.prototype.isAssignableFrom = function (type) {\r\n        return this.targetType.isAssignableFrom(type);\r\n    };\r\n    BaseReferenceType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        return typeof value === \"string\" || typeof value === \"number\"\r\n            ? typeCheckSuccess$$1()\r\n            : typeCheckFailure$$1(context, value, \"Value is not a valid identifier, which is a string or a number\");\r\n    };\r\n    BaseReferenceType$$1.prototype.fireInvalidated = function (cause, storedRefNode, referenceId, refTargetNode) {\r\n        // to actually invalidate a reference we need an alive parent,\r\n        // since it is a scalar value (immutable-ish) and we need to change it\r\n        // from the parent\r\n        var storedRefParentNode = storedRefNode.parent;\r\n        if (!storedRefParentNode || !storedRefParentNode.isAlive) {\r\n            return;\r\n        }\r\n        var storedRefParentValue = storedRefParentNode.storedValue;\r\n        if (!storedRefParentValue) {\r\n            return;\r\n        }\r\n        this.onInvalidated({\r\n            cause: cause,\r\n            parent: storedRefParentValue,\r\n            invalidTarget: refTargetNode ? refTargetNode.storedValue : undefined,\r\n            invalidId: referenceId,\r\n            replaceRef: function (newRef) {\r\n                applyPatch$$1(storedRefNode.root.storedValue, {\r\n                    op: \"replace\",\r\n                    value: newRef,\r\n                    path: storedRefNode.path\r\n                });\r\n            },\r\n            removeRef: function () {\r\n                if (isModelType$$1(storedRefParentNode.type)) {\r\n                    this.replaceRef(undefined);\r\n                }\r\n                else {\r\n                    applyPatch$$1(storedRefNode.root.storedValue, {\r\n                        op: \"remove\",\r\n                        path: storedRefNode.path\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    BaseReferenceType$$1.prototype.addTargetNodeWatcher = function (storedRefNode, referenceId) {\r\n        var _this = this;\r\n        // this will make sure the target node becomes created\r\n        var refTargetValue = this.getValue(storedRefNode);\r\n        if (!refTargetValue) {\r\n            return undefined;\r\n        }\r\n        var refTargetNode = getStateTreeNode$$1(refTargetValue);\r\n        var hookHandler = function (_, refTargetNodeHook) {\r\n            var cause = getInvalidationCause(refTargetNodeHook);\r\n            if (!cause) {\r\n                return;\r\n            }\r\n            _this.fireInvalidated(cause, storedRefNode, referenceId, refTargetNode);\r\n        };\r\n        var refTargetDetachHookDisposer = refTargetNode.hookSubscribers.register(Hook.beforeDetach, hookHandler);\r\n        var refTargetDestroyHookDisposer = refTargetNode.hookSubscribers.register(Hook.beforeDestroy, hookHandler);\r\n        return function () {\r\n            refTargetDetachHookDisposer();\r\n            refTargetDestroyHookDisposer();\r\n        };\r\n    };\r\n    BaseReferenceType$$1.prototype.watchTargetNodeForInvalidations = function (storedRefNode, identifier$$1, customGetSet) {\r\n        var _this = this;\r\n        if (!this.onInvalidated) {\r\n            return;\r\n        }\r\n        var onRefTargetDestroyedHookDisposer;\r\n        // get rid of the watcher hook when the stored ref node is destroyed\r\n        // detached is ignored since scalar nodes (where the reference resides) cannot be detached\r\n        storedRefNode.hookSubscribers.register(Hook.beforeDestroy, function () {\r\n            if (onRefTargetDestroyedHookDisposer) {\r\n                onRefTargetDestroyedHookDisposer();\r\n            }\r\n        });\r\n        var startWatching = function (sync) {\r\n            // re-create hook in case the stored ref gets reattached\r\n            if (onRefTargetDestroyedHookDisposer) {\r\n                onRefTargetDestroyedHookDisposer();\r\n            }\r\n            // make sure the target node is actually there and initialized\r\n            var storedRefParentNode = storedRefNode.parent;\r\n            var storedRefParentValue = storedRefParentNode && storedRefParentNode.storedValue;\r\n            if (storedRefParentNode && storedRefParentNode.isAlive && storedRefParentValue) {\r\n                var refTargetNodeExists = void 0;\r\n                if (customGetSet) {\r\n                    refTargetNodeExists = !!customGetSet.get(identifier$$1, storedRefParentValue);\r\n                }\r\n                else {\r\n                    refTargetNodeExists = storedRefNode.root.identifierCache.has(_this.targetType, normalizeIdentifier$$1(identifier$$1));\r\n                }\r\n                if (!refTargetNodeExists) {\r\n                    // we cannot change the reference in sync mode\r\n                    // since we are in the middle of a reconciliation/instantiation and the change would be overwritten\r\n                    // for those cases just let the wrong reference be assigned and fail upon usage\r\n                    // (like current references do)\r\n                    // this means that effectively this code will only run when it is created from a snapshot\r\n                    if (!sync) {\r\n                        _this.fireInvalidated(\"invalidSnapshotReference\", storedRefNode, identifier$$1, null);\r\n                    }\r\n                }\r\n                else {\r\n                    onRefTargetDestroyedHookDisposer = _this.addTargetNodeWatcher(storedRefNode, identifier$$1);\r\n                }\r\n            }\r\n        };\r\n        if (storedRefNode.state === NodeLifeCycle$$1.FINALIZED) {\r\n            // already attached, so the whole tree is ready\r\n            startWatching(true);\r\n        }\r\n        else {\r\n            if (!storedRefNode.isRoot) {\r\n                // start watching once the whole tree is ready\r\n                storedRefNode.root.hookSubscribers.register(Hook.afterCreationFinalization, function () {\r\n                    // make sure to attach it so it can start listening\r\n                    if (storedRefNode.parent) {\r\n                        storedRefNode.parent.createObservableInstanceIfNeeded();\r\n                    }\r\n                });\r\n            }\r\n            // start watching once the node is attached somewhere / parent changes\r\n            storedRefNode.hookSubscribers.register(Hook.afterAttach, function () {\r\n                startWatching(false);\r\n            });\r\n        }\r\n    };\r\n    return BaseReferenceType$$1;\r\n}(Type$$1));\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar IdentifierReferenceType$$1 = /** @class */ (function (_super) {\r\n    __extends(IdentifierReferenceType$$1, _super);\r\n    function IdentifierReferenceType$$1(targetType, onInvalidated) {\r\n        return _super.call(this, targetType, onInvalidated) || this;\r\n    }\r\n    IdentifierReferenceType$$1.prototype.getValue = function (storedRefNode) {\r\n        if (!storedRefNode.isAlive)\r\n            return undefined;\r\n        var storedRef = storedRefNode.storedValue;\r\n        return storedRef.resolvedValue;\r\n    };\r\n    IdentifierReferenceType$$1.prototype.getSnapshot = function (storedRefNode) {\r\n        var ref = storedRefNode.storedValue;\r\n        return ref.identifier;\r\n    };\r\n    IdentifierReferenceType$$1.prototype.instantiate = function (parent, subpath, environment, newValue) {\r\n        var identifier$$1 = isStateTreeNode$$1(newValue) ? getIdentifier$$1(newValue) : newValue;\r\n        var storedRef = new StoredReference(newValue, this.targetType);\r\n        var storedRefNode = createNode$$1(this, parent, subpath, environment, storedRef);\r\n        storedRef.node = storedRefNode;\r\n        this.watchTargetNodeForInvalidations(storedRefNode, identifier$$1, undefined);\r\n        return storedRefNode;\r\n    };\r\n    IdentifierReferenceType$$1.prototype.reconcile = function (current, newValue) {\r\n        if (current.type === this) {\r\n            var compareByValue = isStateTreeNode$$1(newValue);\r\n            var ref = current.storedValue;\r\n            if (!compareByValue && ref.identifier === newValue)\r\n                return current;\r\n            else if (compareByValue && ref.resolvedValue === newValue)\r\n                return current;\r\n        }\r\n        var newNode = this.instantiate(current.parent, current.subpath, current.environment, newValue);\r\n        current.die();\r\n        return newNode;\r\n    };\r\n    return IdentifierReferenceType$$1;\r\n}(BaseReferenceType$$1));\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar CustomReferenceType$$1 = /** @class */ (function (_super) {\r\n    __extends(CustomReferenceType$$1, _super);\r\n    function CustomReferenceType$$1(targetType, options, onInvalidated) {\r\n        var _this = _super.call(this, targetType, onInvalidated) || this;\r\n        _this.options = options;\r\n        return _this;\r\n    }\r\n    CustomReferenceType$$1.prototype.getValue = function (storedRefNode) {\r\n        if (!storedRefNode.isAlive)\r\n            return undefined;\r\n        var referencedNode = this.options.get(storedRefNode.storedValue, storedRefNode.parent ? storedRefNode.parent.storedValue : null);\r\n        return referencedNode;\r\n    };\r\n    CustomReferenceType$$1.prototype.getSnapshot = function (storedRefNode) {\r\n        return storedRefNode.storedValue;\r\n    };\r\n    CustomReferenceType$$1.prototype.instantiate = function (parent, subpath, environment, newValue) {\r\n        var identifier$$1 = isStateTreeNode$$1(newValue)\r\n            ? this.options.set(newValue, parent ? parent.storedValue : null)\r\n            : newValue;\r\n        var storedRefNode = createNode$$1(this, parent, subpath, environment, identifier$$1);\r\n        this.watchTargetNodeForInvalidations(storedRefNode, identifier$$1, this.options);\r\n        return storedRefNode;\r\n    };\r\n    CustomReferenceType$$1.prototype.reconcile = function (current, newValue) {\r\n        var newIdentifier = isStateTreeNode$$1(newValue)\r\n            ? this.options.set(newValue, current ? current.storedValue : null)\r\n            : newValue;\r\n        if (current.type === this && current.storedValue === newIdentifier) {\r\n            return current;\r\n        }\r\n        var newNode = this.instantiate(current.parent, current.subpath, current.environment, newIdentifier);\r\n        current.die();\r\n        return newNode;\r\n    };\r\n    return CustomReferenceType$$1;\r\n}(BaseReferenceType$$1));\r\n/**\r\n * `types.reference` - Creates a reference to another type, which should have defined an identifier.\r\n * See also the [reference and identifiers](https://github.com/mobxjs/mobx-state-tree#references-and-identifiers) section.\r\n */\r\nfunction reference$$1(subType, options) {\r\n    // check that a type is given\r\n    if (false) {}\r\n    var getSetOptions = options ? options : undefined;\r\n    var onInvalidated = options\r\n        ? options.onInvalidated\r\n        : undefined;\r\n    if (getSetOptions && (getSetOptions.get || getSetOptions.set)) {\r\n        if (false) {}\r\n        return new CustomReferenceType$$1(subType, {\r\n            get: getSetOptions.get,\r\n            set: getSetOptions.set\r\n        }, onInvalidated);\r\n    }\r\n    else {\r\n        return new IdentifierReferenceType$$1(subType, onInvalidated);\r\n    }\r\n}\r\n/**\r\n * Returns if a given value represents a reference type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isReferenceType$$1(type) {\r\n    return (type.flags & TypeFlags$$1.Reference) > 0;\r\n}\r\n/**\r\n * `types.safeReference` - A safe reference is like a standard reference, except that it accepts the undefined value by default\r\n * and automatically sets itself to undefined (when the parent is a model) / removes itself from arrays and maps\r\n * when the reference it is pointing to gets detached/destroyed.\r\n *\r\n * Strictly speaking it is a `types.maybe(types.reference(X))` with a customized `onInvalidate` option.\r\n *\r\n * @param subType\r\n * @param options\r\n * @returns\r\n */\r\nfunction safeReference$$1(subType, options) {\r\n    return maybe$$1(reference$$1(subType, __assign({}, options, { onInvalidated: function (ev) {\r\n            ev.removeRef();\r\n        } })));\r\n}\n\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar IdentifierType$$1 = /** @class */ (function (_super) {\r\n    __extends(IdentifierType$$1, _super);\r\n    function IdentifierType$$1() {\r\n        var _this = _super.call(this, \"identifier\") || this;\r\n        _this.shouldAttachNode = false;\r\n        _this.flags = TypeFlags$$1.Identifier;\r\n        return _this;\r\n    }\r\n    IdentifierType$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        if (!parent || !(parent.type instanceof ModelType$$1))\r\n            fail(\"Identifier types can only be instantiated as direct child of a model type\");\r\n        return createNode$$1(this, parent, subpath, environment, snapshot);\r\n    };\r\n    IdentifierType$$1.prototype.reconcile = function (current, newValue) {\r\n        if (current.storedValue !== newValue)\r\n            return fail(\"Tried to change identifier from '\" + current.storedValue + \"' to '\" + newValue + \"'. Changing identifiers is not allowed.\");\r\n        return current;\r\n    };\r\n    IdentifierType$$1.prototype.describe = function () {\r\n        return \"identifier\";\r\n    };\r\n    IdentifierType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        if (typeof value !== \"string\") {\r\n            return typeCheckFailure$$1(context, value, \"Value is not a valid identifier, expected a string\");\r\n        }\r\n        return typeCheckSuccess$$1();\r\n    };\r\n    return IdentifierType$$1;\r\n}(Type$$1));\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar IdentifierNumberType$$1 = /** @class */ (function (_super) {\r\n    __extends(IdentifierNumberType$$1, _super);\r\n    function IdentifierNumberType$$1() {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = \"identifierNumber\";\r\n        return _this;\r\n    }\r\n    IdentifierNumberType$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        return _super.prototype.instantiate.call(this, parent, subpath, environment, snapshot);\r\n    };\r\n    IdentifierNumberType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        if (typeof value === \"number\") {\r\n            return typeCheckSuccess$$1();\r\n        }\r\n        return typeCheckFailure$$1(context, value, \"Value is not a valid identifierNumber, expected a number\");\r\n    };\r\n    IdentifierNumberType$$1.prototype.reconcile = function (current, newValue) {\r\n        return _super.prototype.reconcile.call(this, current, newValue);\r\n    };\r\n    IdentifierNumberType$$1.prototype.getSnapshot = function (node) {\r\n        return node.storedValue;\r\n    };\r\n    IdentifierNumberType$$1.prototype.describe = function () {\r\n        return \"identifierNumber\";\r\n    };\r\n    return IdentifierNumberType$$1;\r\n}(IdentifierType$$1));\r\n/**\r\n * `types.identifier` - Identifiers are used to make references, lifecycle events and reconciling works.\r\n * Inside a state tree, for each type can exist only one instance for each given identifier.\r\n * For example there couldn't be 2 instances of user with id 1. If you need more, consider using references.\r\n * Identifier can be used only as type property of a model.\r\n * This type accepts as parameter the value type of the identifier field that can be either string or number.\r\n *\r\n * Example:\r\n * ```ts\r\n *  const Todo = types.model(\"Todo\", {\r\n *      id: types.identifier,\r\n *      title: types.string\r\n *  })\r\n * ```\r\n *\r\n * @returns\r\n */\r\nvar identifier$$1 = new IdentifierType$$1();\r\n/**\r\n * `types.identifierNumber` - Similar to `types.identifier`. This one will serialize from / to a number when applying snapshots\r\n *\r\n * Example:\r\n * ```ts\r\n *  const Todo = types.model(\"Todo\", {\r\n *      id: types.identifierNumber,\r\n *      title: types.string\r\n *  })\r\n * ```\r\n *\r\n * @returns\r\n */\r\nvar identifierNumber$$1 = new IdentifierNumberType$$1();\r\n/**\r\n * Returns if a given value represents an identifier type.\r\n *\r\n * @param type\r\n * @returns\r\n */\r\nfunction isIdentifierType$$1(type) {\r\n    return isType$$1(type) && (type.flags & TypeFlags$$1.Identifier) > 0;\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nfunction normalizeIdentifier$$1(id) {\r\n    return \"\" + id;\r\n}\n\n/**\r\n * `types.custom` - Creates a custom type. Custom types can be used for arbitrary immutable values, that have a serializable representation. For example, to create your own Date representation, Decimal type etc.\r\n *\r\n * The signature of the options is:\r\n * ```ts\r\n * export interface CustomTypeOptions<S, T> {\r\n *     // Friendly name\r\n *     name: string\r\n *     // given a serialized value, how to turn it into the target type\r\n *     fromSnapshot(snapshot: S): T\r\n *     // return the serialization of the current value\r\n *     toSnapshot(value: T): S\r\n *     // if true, this is a converted value, if false, it's a snapshot\r\n *     isTargetType(value: T | S): boolean\r\n *     // a non empty string is assumed to be a validation error\r\n *     getValidationMessage?(snapshot: S): string\r\n * }\r\n * ```\r\n *\r\n * Example:\r\n * ```ts\r\n * const DecimalPrimitive = types.custom<string, Decimal>({\r\n *     name: \"Decimal\",\r\n *     fromSnapshot(value: string) {\r\n *         return new Decimal(value)\r\n *     },\r\n *     toSnapshot(value: Decimal) {\r\n *         return value.toString()\r\n *     },\r\n *     isTargetType(value: string | Decimal): boolean {\r\n *         return value instanceof Decimal\r\n *     },\r\n *     getValidationMessage(value: string): string {\r\n *         if (/^-?\\d+\\.\\d+$/.test(value)) return \"\" // OK\r\n *         return `'${value}' doesn't look like a valid decimal number`\r\n *     }\r\n * })\r\n *\r\n * const Wallet = types.model({\r\n *     balance: DecimalPrimitive\r\n * })\r\n * ```\r\n *\r\n * @param options\r\n * @returns\r\n */\r\nfunction custom$$1(options) {\r\n    return new CustomType$$1(options);\r\n}\r\n/**\r\n * @internal\r\n * @hidden\r\n */\r\nvar CustomType$$1 = /** @class */ (function (_super) {\r\n    __extends(CustomType$$1, _super);\r\n    function CustomType$$1(options) {\r\n        var _this = _super.call(this, options.name) || this;\r\n        _this.options = options;\r\n        _this.flags = TypeFlags$$1.Reference;\r\n        _this.shouldAttachNode = false;\r\n        return _this;\r\n    }\r\n    CustomType$$1.prototype.describe = function () {\r\n        return this.name;\r\n    };\r\n    CustomType$$1.prototype.isAssignableFrom = function (type) {\r\n        return type === this;\r\n    };\r\n    CustomType$$1.prototype.isValidSnapshot = function (value, context) {\r\n        if (this.options.isTargetType(value))\r\n            return typeCheckSuccess$$1();\r\n        var typeError = this.options.getValidationMessage(value);\r\n        if (typeError) {\r\n            return typeCheckFailure$$1(context, value, \"Invalid value for type '\" + this.name + \"': \" + typeError);\r\n        }\r\n        return typeCheckSuccess$$1();\r\n    };\r\n    CustomType$$1.prototype.getValue = function (node) {\r\n        if (!node.isAlive)\r\n            return undefined;\r\n        return node.storedValue;\r\n    };\r\n    CustomType$$1.prototype.getSnapshot = function (node) {\r\n        return this.options.toSnapshot(node.storedValue);\r\n    };\r\n    CustomType$$1.prototype.instantiate = function (parent, subpath, environment, snapshot) {\r\n        var valueToStore = this.options.isTargetType(snapshot)\r\n            ? snapshot\r\n            : this.options.fromSnapshot(snapshot);\r\n        return createNode$$1(this, parent, subpath, environment, valueToStore);\r\n    };\r\n    CustomType$$1.prototype.reconcile = function (current, value) {\r\n        var isSnapshot = !this.options.isTargetType(value);\r\n        var unchanged = current.type === this &&\r\n            (isSnapshot ? value === current.snapshot : value === current.storedValue);\r\n        if (unchanged)\r\n            return current;\r\n        var valueToStore = isSnapshot ? this.options.fromSnapshot(value) : value;\r\n        var newNode = this.instantiate(current.parent, current.subpath, current.environment, valueToStore);\r\n        current.die();\r\n        return newNode;\r\n    };\r\n    return CustomType$$1;\r\n}(Type$$1));\n\n// we import the types to re-export them inside types.\r\nvar types$$1 = {\r\n    enumeration: enumeration$$1,\r\n    model: model$$1,\r\n    compose: compose$$1,\r\n    custom: custom$$1,\r\n    reference: reference$$1,\r\n    safeReference: safeReference$$1,\r\n    union: union$$1,\r\n    optional: optional$$1,\r\n    literal: literal$$1,\r\n    maybe: maybe$$1,\r\n    maybeNull: maybeNull$$1,\r\n    refinement: refinement$$1,\r\n    string: string$$1,\r\n    boolean: boolean$$1,\r\n    number: number$$1,\r\n    integer: integer$$1,\r\n    Date: DatePrimitive$$1,\r\n    map: map$$1,\r\n    array: array$$1,\r\n    frozen: frozen$$1,\r\n    identifier: identifier$$1,\r\n    identifierNumber: identifierNumber$$1,\r\n    late: late$$1,\r\n    undefined: undefinedType$$1,\r\n    null: nullType$$1\r\n};\n\n/*\r\n * All imports / exports should be proxied through this file.\r\n * Why? It gives us full control over the module load order, preventing circular dependency isses\r\n */\n\n/* all code is initially loaded through internal, to avoid circular dep issues */\n\n\n\n\n/***/ })\n\n}]);"}
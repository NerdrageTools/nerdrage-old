{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Application } from '~/contexts/Application';\nimport './authPages.scss';\nconst EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst PASSWORD_REGEX = /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/;\nconst USERNAME_REGEX = /[a-zA-Z0-9_-]{4,}/;\nexport default class SignupPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      valid: false\n    });\n\n    _defineProperty(this, \"email\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"name\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"password\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"passwordConfirm\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"username\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.name.current.focus();\n    });\n\n    _defineProperty(this, \"handleEmail\", ({\n      target\n    }) => {\n      // eslint-disable-next-line no-param-reassign\n      target.value = target.value.toLowerCase();\n\n      if (target.value.match(EMAIL_REGEX)) {\n        target.classList.remove('invalid');\n      } else {\n        target.classList.add('invalid');\n      }\n\n      this.handleValidated();\n    });\n\n    _defineProperty(this, \"handlePassword\", ({\n      target\n    }) => {\n      const {\n        value\n      } = target;\n\n      if (value.match(PASSWORD_REGEX)) {\n        target.classList.remove('invalid');\n      } else {\n        target.classList.add('invalid');\n      }\n\n      this.handleValidated();\n    });\n\n    _defineProperty(this, \"handlePasswordConfirm\", ({\n      target\n    }) => {\n      if (target.value === this.password.current.value) {\n        target.classList.remove('invalid');\n      } else {\n        target.classList.add('invalid');\n      }\n\n      this.handleValidated();\n    });\n\n    _defineProperty(this, \"handleUsername\", ({\n      target\n    }) => {\n      // eslint-disable-next-line no-param-reassign\n      target.value = target.value.toLowerCase().replace(/[^a-z0-9-_]+/g, '');\n\n      if (target.value.match(USERNAME_REGEX)) {\n        target.classList.remove('invalid');\n      } else {\n        target.classList.add('invalid');\n      }\n\n      this.handleValidated();\n    });\n\n    _defineProperty(this, \"handleValidated\", () => {\n      let valid = true;\n      ['email', 'password', 'passwordConfirm', 'username'].forEach(key => {\n        const el = this[key].current;\n\n        if (!el.value || el.matches(':invalid, .invalid')) {\n          valid = false;\n        }\n      });\n      this.setState({\n        valid\n      });\n    });\n\n    _defineProperty(this, \"handleKeyPress\", event => {\n      switch (event.key) {\n        case 'Enter':\n          this.handleSubmit();\n          break;\n\n        case 'Escape':\n          this.context.router.back();\n          break;\n\n        default:\n      }\n    });\n\n    _defineProperty(this, \"handleSubmit\", async () => {\n      if (!this.state.valid) {\n        return;\n      }\n\n      const email = this.email.current.value;\n      const name = this.name.current.value;\n      const password = this.password.current.value;\n      const username = this.username.current.value;\n      const response = await fetch('/api/user', {\n        body: JSON.stringify({\n          email,\n          name,\n          password,\n          username\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'PUT'\n      });\n      const json = await response.json();\n\n      if (response.status === 200) {\n        this.context.router.push(`/user?username=${username}`, `/user/${username}`);\n      } else {\n        this.setState(_objectSpread({\n          message: ''\n        }, json));\n      }\n    });\n\n    _defineProperty(this, \"render\", () => /*#__PURE__*/_jsx(\"div\", {\n      className: \"signup page\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Sign Up\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: this.handleValidated,\n          onKeyDown: this.handleKeyPress,\n          placeholder: \"Name (optional)\",\n          ref: this.name,\n          type: \"text\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: this.handleUsername,\n          onKeyDown: this.handleKeyPress,\n          pattern: \"[a-zA-Z0-9_-]{4,}\",\n          placeholder: \"Username\",\n          ref: this.username,\n          type: \"text\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: \"validation-message\",\n          children: \"Length: 4+, letters, numbers, _ & -\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: this.handleEmail,\n          onKeyDown: this.handleKeyPress,\n          placeholder: \"Email Address\",\n          ref: this.email,\n          type: \"email\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: \"validation-message\",\n          children: \"Must be a valid e-mail address\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: this.handlePassword,\n          onKeyDown: this.handleKeyPress,\n          placeholder: \"Password\",\n          ref: this.password,\n          type: \"password\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: \"validation-message\",\n          children: \"At least 8 characters; must include one a-z, one A-Z, one 0-9 and 1 special character\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: this.handlePasswordConfirm,\n          onKeyDown: this.handleKeyPress,\n          placeholder: \"Confirm Password\",\n          ref: this.passwordConfirm,\n          type: \"password\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: \"validation-message\",\n          children: \"Must match password field\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"buttons\",\n          children: this.state.valid && /*#__PURE__*/_jsx(\"button\", {\n            className: \"safe\",\n            onClick: this.handleSubmit,\n            children: \"Submit\"\n          })\n        }), /*#__PURE__*/_jsx(\"center\", {\n          className: \"message-field\",\n          children: this.state.message\n        })]\n      })\n    }));\n  }\n  /* eslint-enable no-useless-escape */\n\n\n}\n\n_defineProperty(SignupPage, \"contextType\", Application);","map":null,"metadata":{},"sourceType":"module"}
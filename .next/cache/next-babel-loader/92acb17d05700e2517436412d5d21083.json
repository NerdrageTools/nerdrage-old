{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport Navigation from '~/components/Navigation/Navigation';\nimport ArticleSearchBox from '~/components/SearchBox/ArticleSearchBox';\nimport UserMenu from '~/components/UserMenu/UserMenu';\nimport { Application } from '~/contexts/Application';\nimport Logo from '~/icons/fist.svg';\nimport NavigationIcon from '~/icons/Navigation';\nimport debounce from '~/utilities/debounce';\nimport './Layout.scss';\n\nconst getWindowSize = () => {\n  if (true) return 'server';\n  if (window.matchMedia('(min-width: 551px) and (max-width: 979px)').matches) return 'medium';\n  if (window.matchMedia('(max-width: 550px)').matches) return 'small';\n  return 'large';\n};\n\nexport default class Layout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      expanded: false,\n      size: getWindowSize(),\n      ssrDone: false\n    });\n\n    _defineProperty(this, \"navigation\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"navigationIcon\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"handleWindowResize\", debounce(() => {\n      const size = getWindowSize();\n      this.setState({\n        size\n      });\n      this.context.setSize(size);\n    }, 100));\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.setState({\n        ssrDone: true\n      });\n      this.handleWindowResize();\n      window.addEventListener('resize', this.handleWindowResize);\n      document.addEventListener('mousedown', this.handleOutsideNavClick);\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {\n      window.removeEventListener('resize', this.handleWindowResize);\n      document.removeEventListener('mousedown', this.handleOutsideNavClick);\n    });\n\n    _defineProperty(this, \"collapseNavigation\", () => {\n      this.setState({\n        expanded: false\n      });\n    });\n\n    _defineProperty(this, \"toggleNavigation\", () => {\n      this.setState({\n        expanded: !this.state.expanded\n      });\n    });\n\n    _defineProperty(this, \"handleOutsideNavClick\", ({\n      target\n    }) => {\n      if (this.state.expanded // only collapse if expanded\n      && !this.navigation.current.contains(target) // and the click isn't in the nav\n      && this.navigationIcon.current !== target // and the click isn't on the nav icon\n      ) {\n          this.collapseNavigation();\n        }\n    });\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        className\n      } = this.props;\n      const {\n        campaign,\n        theme\n      } = this.context;\n      const {\n        expanded,\n        size\n      } = this.state;\n      const title = campaign ? campaign.title : 'Unknown Campaign';\n      const classNames = ['wiki layout', className, expanded ? 'expand-navigation' : 'collapse-navigation', this.state.ssrDone ? size : 'server'].filter(Boolean).join(' ');\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(Head, {\n          children: [/*#__PURE__*/_jsx(\"title\", {\n            children: title\n          }), /*#__PURE__*/_jsx(\"meta\", {\n            name: \"viewport\",\n            content: \"width=device-width, initial-scale=1\"\n          }), /*#__PURE__*/_jsx(\"link\", {\n            href: `//fonts.googleapis.com/css?family=${theme.fontForText}:400,400i,700,700i|${theme.fontForTitles}&display=swap`,\n            rel: \"stylesheet\"\n          }, \"content-font\")]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classNames,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"logo\",\n              children: [/*#__PURE__*/_jsx(Logo, {\n                className: \"logo x2\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"nerd\",\n                children: \"Nerd\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"rage\",\n                children: \"RAGE\"\n              })]\n            }), /*#__PURE__*/_jsx(ArticleSearchBox, {}), /*#__PURE__*/_jsx(NavigationIcon, {\n              className: \"navigation toggle\",\n              onClick: this.toggleNavigation,\n              wrapperRef: this.navigationIcon\n            }), /*#__PURE__*/_jsx(UserMenu, {})]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsx(Navigation, {\n              onItemClick: this.collapseNavigation,\n              wrapperRef: this.navigation\n            }), this.props.children]\n          })]\n        })]\n      });\n    });\n  }\n\n}\n\n_defineProperty(Layout, \"contextType\", Application);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'isomorphic-unfetch';\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport Layout from '~/components/Layout/Layout';\nimport { Application } from '~/contexts/Application';\nimport defaultTheme from '~/data/defaultTheme';\nimport '~/styles/all.scss';\n/* eslint-disable import/extensions */\n\nimport imageBook from '~/icons/book.png';\nimport imageCombo from '~/icons/combo.png';\nimport imageSystem from '~/icons/dice.gif';\nimport imageInfo from '~/icons/info.png';\n/* eslint-enable import/extensions */\n\nimport Error from '~/pages/_error';\nimport { noop } from '~/utilities/noop';\nexport default class Wiki extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      campaign: this.props.campaign,\n      user: this.props.user\n    });\n\n    _defineProperty(this, \"logOff\", async event => {\n      event.preventDefault();\n      this.setUser(await fetch('/api/user/auth/logoff').then(r => r.json()));\n      window.location = window.location;\n    });\n\n    _defineProperty(this, \"setCampaign\", (campaign, callback = noop) => this.setState({\n      campaign\n    }, callback));\n\n    _defineProperty(this, \"setSize\", (size, callback = noop) => this.setState({\n      size\n    }, callback));\n\n    _defineProperty(this, \"setUser\", (user, callback = noop) => this.setState({\n      user\n    }, callback));\n\n    _defineProperty(this, \"updateCampaign\", async (updates, callback = noop) => {\n      const {\n        campaign\n      } = this.state;\n      const {\n        subdomain\n      } = this.props;\n\n      if (!campaign) {\n        return false;\n      }\n\n      const result = await fetch(`/api/campaign/${subdomain}`, {\n        body: updates ? JSON.stringify(updates) : undefined,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: updates ? 'POST' : 'GET'\n      });\n      const json = await result.json();\n\n      if (result.status === 200) {\n        this.setCampaign(json, callback);\n        return true;\n      }\n\n      this.setCampaign({}, callback);\n      return false;\n    });\n\n    _defineProperty(this, \"updateUser\", async (updates, callback = noop) => {\n      const {\n        user\n      } = this.state;\n      const result = await fetch(`/api/user/${user.username}`, {\n        body: updates ? JSON.stringify(updates) : undefined,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: updates ? 'POST' : 'GET'\n      });\n      const json = await result.json();\n\n      if (result.status === 200) {\n        this.setUser(json, callback);\n        return true;\n      }\n\n      this.setUser({}, callback);\n      return false;\n    });\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        Component,\n        pageProps,\n        rootUrl,\n        router,\n        subdomain\n      } = this.props;\n      const {\n        campaign,\n        size,\n        user\n      } = this.state;\n      const theme = Object.assign(defaultTheme, campaign && campaign.theme || {});\n      const context = {\n        campaign,\n        logOff: this.logOff,\n        rootUrl,\n        router,\n        setCampaign: this.setCampaign,\n        setSize: this.setSize,\n        setUser: this.setUser,\n        size,\n        subdomain,\n        theme,\n        updateCampaign: this.updateCampaign,\n        updateUser: this.updateUser,\n        user\n      };\n      const campaignError = !campaign && !['/user', '/login', '/signup'].includes(router.pathname);\n      return /*#__PURE__*/_jsxs(Application.Provider, {\n        value: context,\n        children: [/*#__PURE__*/_jsx(Layout, {\n          className: !campaign ? 'no-campaign' : '',\n          children: campaignError ? /*#__PURE__*/_jsx(Error, {\n            statusCode: 404,\n            message: \"This campaign does not exist.\"\n          }) : /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n        }), /*#__PURE__*/_jsx(\"style\", {\n          children: `\n\t\t\t\t\t:root {\n\t\t\t\t\t\t--color-background:\t\t${theme.background};\n\t\t\t\t\t\t--color-borders:\t\t\t ${theme.primary};\n\t\t\t\t\t\t--color-normal-text:\t ${theme.normalText};\n\t\t\t\t\t\t--color-primary:\t\t\t ${theme.primary};\n\t\t\t\t\t\t--color-primary-text:\t${theme.primaryText};\n\t\t\t\t\t\t--font-for-text:\t\t\t ${theme.fontForText};\n\t\t\t\t\t\t--font-for-titles:\t\t ${theme.fontForTitles};\n\t\t\t\t\t\t--font-size:\t\t\t\t\t ${theme.fontSize};\n\t\t\t\t\t\tcolor:\t\t\t\t\t\t\t\t ${theme.normalText};\n\t\t\t\t\t\tfont-family:\t\t\t\t\t ${theme.fontForText};\n\t\t\t\t\t\tfont-size:\t\t\t\t\t\t ${theme.fontSize};\n\n\t\t\t\t\t\t--image-book:\t\t\t\t\turl(${imageBook});\n\t\t\t\t\t\t--image-combo:\t\t\t\t url(${imageCombo});\n\t\t\t\t\t\t--image-system:\t\t\t\turl(${imageSystem});\n\t\t\t\t\t\t--image-info:\t\t\t\t\turl(${imageInfo});\n\t\t\t\t\t}\n\t\t\t\t`\n        })]\n      });\n    });\n  }\n\n}\n\n_defineProperty(Wiki, \"getInitialProps\", async context => {\n  const {\n    Component,\n    ctx: {\n      req: request = {}\n    }\n  } = context;\n  const props = await App.getInitialProps(context);\n  const fetchParams = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const campaign = request ? request.campaign : await fetch('/api/campaign', fetchParams).then(r => r.json());\n  const user = request ? request.user : await fetch('/api/user', fetchParams).then(r => r.json());\n  /* eslint-disable prefer-destructuring */\n\n  let host;\n\n  if (false) {\n    host = window.location.host;\n  } else {\n    host = request.get('host');\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  const subdomain = host.split('.').shift();\n  const rootUrl = host.slice(subdomain.length + 1);\n  return _objectSpread(_objectSpread({}, props), {}, {\n    campaign,\n    rootUrl,\n    subdomain,\n    user\n  });\n});","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport FlyoutMenu, { MenuItem } from '~/components/FlyoutMenu/FlyoutMenu';\nimport { Application } from '~/contexts/Application';\nimport ArticleIcon from '~/icons/read.svg';\nimport SheetIcon from '~/icons/sheet.svg';\nimport alert from '~/utilities/alert';\nimport promptLink from '~/utilities/promptLink';\nimport './CreateMenu.scss';\nexport default class CreateMenu extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"flyoutMenu\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"handleNew\", type => async () => {\n      this.flyoutMenu.current.close();\n      const lowered = type.toLowerCase();\n\n      try {\n        const {\n          slug,\n          templateSlug,\n          text\n        } = await promptLink({\n          defaultSlug: `new-${lowered}`,\n          defaultText: `New ${type}`,\n          templateType: type,\n          title: `New ${type}...`\n        });\n        let href = `/${lowered}?slug=${slug}&title=${text}`;\n        let asUrl = `/${lowered}/${slug}?title=${text}`;\n\n        if (templateSlug) {\n          href += `&template=${templateSlug}`;\n          asUrl += `&template=${templateSlug}`;\n        }\n\n        this.context.router.push(href, asUrl);\n      } catch (error) {}\n    });\n\n    _defineProperty(this, \"handleNewCampaign\", async () => {\n      const {\n        rootUrl\n      } = this.context;\n      this.flyoutMenu.current.close();\n\n      try {\n        const {\n          slug,\n          text\n        } = await promptLink({\n          defaultSlug: 'new-campaign',\n          defaultText: 'New Campaign',\n          slugLabel: 'Subdomain',\n          textLabel: 'Title',\n          title: 'New Campaign...'\n        });\n        const response = await fetch(`/api/campaign/${slug}`, {\n          body: JSON.stringify({\n            subdomain: slug,\n            title: text\n          }),\n          credentials: 'include',\n          method: 'PUT'\n        });\n\n        if (response.status === 201) {\n          this.context.router.push(`//${slug}.${rootUrl}/campaign`, `//${slug}.${rootUrl}/campaign`);\n        } else {\n          const json = await response.json();\n          alert(json.message, 'Error');\n        }\n      } catch (error) {}\n    });\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        children\n      } = this.props;\n      const {\n        isEditor,\n        isParticipant\n      } = this.context.campaign || {};\n      const {\n        isAdmin\n      } = this.context.user || {};\n      return /*#__PURE__*/_jsxs(FlyoutMenu, {\n        className: \"create\",\n        ref: this.flyoutMenu,\n        children: [isAdmin && /*#__PURE__*/_jsxs(MenuItem, {\n          onClick: this.handleNewCampaign,\n          children: [/*#__PURE__*/_jsx(SheetIcon, {}), \" New Campaign...\"]\n        }), isEditor && /*#__PURE__*/_jsxs(MenuItem, {\n          onClick: this.handleNew('Article'),\n          children: [/*#__PURE__*/_jsx(ArticleIcon, {}), \" New Article...\"]\n        }), isParticipant && /*#__PURE__*/_jsxs(MenuItem, {\n          onClick: this.handleNew('Sheet'),\n          children: [/*#__PURE__*/_jsx(SheetIcon, {}), \" New Sheet...\"]\n        }), /*#__PURE__*/_jsx(\"hr\", {}), children]\n      });\n    });\n  }\n\n}\n\n_defineProperty(CreateMenu, \"contextType\", Application);","map":null,"metadata":{},"sourceType":"module"}
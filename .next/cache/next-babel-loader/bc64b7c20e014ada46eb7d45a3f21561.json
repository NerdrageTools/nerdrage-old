{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport TagsInput from 'react-tagsinput';\nimport Tag from '~/components/Tag/Tag';\nimport { noop } from '~/utilities/noop';\nimport './TagBar.scss';\n\nvar exclude = function exclude(list, exclusions) {\n  return list.filter(function (el) {\n    return !exclusions.includes(el);\n  });\n};\n\nvar areEqual = function areEqual(array1, array2) {\n  return array1.every(function (el, ix) {\n    return el === array2[ix];\n  });\n};\n\nexport var TagBar = /*#__PURE__*/function (_Component) {\n  _inherits(TagBar, _Component);\n\n  var _super = _createSuper(TagBar);\n\n  function TagBar() {\n    var _this;\n\n    _classCallCheck(this, TagBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (updated) {\n      var _this$props = _this.props,\n          banned = _this$props.banned,\n          onChange = _this$props.onChange,\n          sort = _this$props.sort,\n          tags = _this$props.tags;\n      var cleaned = exclude(updated, banned);\n      if (sort) cleaned.sort();\n      if (!areEqual(cleaned, tags)) onChange(cleaned);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTagRemove\", function (removed) {\n      var _this$props2 = _this.props,\n          tags = _this$props2.tags,\n          onChange = _this$props2.onChange;\n      onChange(tags.filter(function (tag) {\n        return tag !== removed;\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextInput\", function (next) {\n      return function (event) {\n        var value = event.target.value;\n\n        if (!value.match(_this.props.validationRegex)) {\n          event.preventDefault();\n        } else {\n          next(event);\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderInput\", function (_ref) {\n      var addTag = _ref.addTag,\n          onChange = _ref.onChange,\n          props = _objectWithoutProperties(_ref, [\"addTag\", \"onChange\"]);\n\n      return !_this.props.readOnly ? /*#__PURE__*/_jsx(\"input\", _objectSpread({\n        type: \"text\",\n        onChange: _this.handleTextInput(onChange)\n      }, props)) : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLayout\", function (tags, input) {\n      return /*#__PURE__*/_jsxs(Scrollbars, {\n        autoHide: true,\n        className: \"scrollbars\",\n        universal: true,\n        children: [tags, input]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTag\", function (_ref2) {\n      var className = _ref2.className,\n          key = _ref2.key,\n          tag = _ref2.tag;\n      return /*#__PURE__*/_jsx(Tag, {\n        asLink: _this.props.asLinks,\n        className: className,\n        onRemove: _this.handleTagRemove,\n        removable: !_this.props.readOnly,\n        tag: tag\n      }, key);\n    });\n\n    return _this;\n  }\n\n  _createClass(TagBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          inputSettings = _this$props3.inputSettings,\n          readOnly = _this$props3.readOnly,\n          tags = _this$props3.tags,\n          tagSettings = _this$props3.tagSettings;\n      var classNames = ['tag-bar', className, readOnly ? 'readOnly' : ''].filter(Boolean).join(' ');\n      return /*#__PURE__*/_jsx(TagsInput, {\n        className: classNames,\n        inputProps: inputSettings,\n        onChange: this.handleChange,\n        onlyUnique: true,\n        readOnly: readOnly,\n        renderLayout: this.renderLayout,\n        renderInput: this.renderInput,\n        renderTag: this.renderTag,\n        tagProps: tagSettings,\n        value: tags\n      });\n    }\n  }]);\n\n  return TagBar;\n}(Component);\n\n_defineProperty(TagBar, \"defaultProps\", {\n  asLinks: false,\n  banned: [],\n  className: '',\n  onChange: noop,\n  onRemove: noop,\n  readOnly: false,\n  sort: true,\n  tags: [],\n  validationRegex: /^[a-z0-9-]*$/,\n  // eslint-disable-next-line sort-keys\n  inputSettings: {\n    className: 'tag-bar-input',\n    placeholder: 'add tag'\n  },\n  tagSettings: {\n    className: '',\n    classNameRemove: 'remove'\n  }\n});","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Sortable from 'sortablejs';\nimport { Link } from '~/components/Link/Link';\nimport { Application } from '~/contexts/Application';\nimport CampaignIcon from '~/icons/campaign.svg';\nimport EditIcon from '~/icons/edit.svg';\nimport FavoriteIcon from '~/icons/favorite-on.svg';\nimport DeleteIcon from '~/icons/remove.svg';\nimport SheetIcon from '~/icons/sheet.svg';\nimport { noop } from '~/utilities/noop';\nimport { pluck } from '~/utilities/pluck';\nimport prompt from '~/utilities/prompt';\nimport './Navigation.scss';\nexport default class Navigation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"campaignNav\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"initializeSortable\", () => {\n      if (!this.campaignNav.current) return;\n      if (this.sortable) this.sortable.destroy();\n      const ul = this.campaignNav.current.querySelector('ul');\n      const {\n        navigation\n      } = this.context.campaign;\n      this.sortable = Sortable.create(ul, {\n        disabled: !this.isCampaignEditor || this.context.size === 'small',\n        dragClass: 'dragging',\n        draggable: 'li',\n        onEnd: () => {\n          const updated = [...ul.querySelectorAll('li')].map(li => li.getAttribute('data-id')).map(id => navigation.find(navLink => navLink._id === id)).filter(Boolean);\n          this.context.updateCampaign({\n            navigation: updated\n          });\n        }\n      });\n    });\n\n    _defineProperty(this, \"promptForLinkDetails\", async (item = {}) => {\n      try {\n        const title = await prompt('New Title?', {\n          defaultValue: item.title,\n          title: 'Set Title'\n        });\n        if (!title) return undefined;\n        const slug = await prompt('Slug to link to?', {\n          defaultValue: item.slug,\n          placeholder: 'Leave blank to create a header...',\n          title: 'Set Slug'\n        });\n        return {\n          slug,\n          title\n        };\n      } catch (_) {\n        return null;\n      }\n    });\n\n    _defineProperty(this, \"handleAddLink\", async () => {\n      const newLink = await this.promptForLinkDetails();\n\n      if (!newLink) {\n        return;\n      }\n\n      this.context.updateCampaign({\n        navigation: [...this.context.campaign.navigation, newLink]\n      });\n    });\n\n    _defineProperty(this, \"handleDelete\", ({\n      currentTarget\n    }) => {\n      const id = currentTarget.getAttribute('data-id');\n      const {\n        navigation\n      } = this.context.campaign;\n      this.context.updateCampaign({\n        navigation: navigation.filter(item => item._id !== id)\n      });\n    });\n\n    _defineProperty(this, \"handleEdit\", async ({\n      currentTarget\n    }) => {\n      const id = currentTarget.getAttribute('data-id');\n      const navigation = [...this.context.campaign.navigation];\n      const item = navigation.find(navItem => navItem._id === id);\n\n      if (!item) {\n        return;\n      }\n\n      const edited = await this.promptForLinkDetails(item);\n\n      if (!edited) {\n        return;\n      }\n\n      navigation.splice(navigation.indexOf(item), 1, edited);\n      this.context.updateCampaign({\n        navigation\n      });\n    });\n\n    _defineProperty(this, \"renderList\", (list = [], listTitle = '', type = 'article', campaignLink = null) => /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(campaignLink || Boolean(list.length)) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"list-title\",\n        children: campaignLink || listTitle\n      }), /*#__PURE__*/_jsx(\"ul\", {\n        children: list.map(({\n          _id,\n          campaign,\n          slug,\n          title\n        }, index) => {\n          const {\n            subdomain = '',\n            title: cTitle = ''\n          } = campaign || this.context.campaign || {};\n          let text = title;\n\n          if (type !== 'campaign' && subdomain && subdomain !== this.context.subdomain) {\n            text += ` (${cTitle || subdomain})`;\n          }\n\n          if (!slug) {\n            return /*#__PURE__*/_jsxs(\"li\", {\n              className: \"section\",\n              \"data-id\": _id,\n              title: title,\n              children: [/*#__PURE__*/_jsx(\"b\", {\n                children: text\n              }), this.context.campaign.isEditor && /*#__PURE__*/_jsxs(\"div\", {\n                className: \"controls\",\n                children: [/*#__PURE__*/_jsx(EditIcon, {\n                  className: \"edit\",\n                  \"data-id\": _id,\n                  onClick: this.handleEdit\n                }), /*#__PURE__*/_jsx(DeleteIcon, {\n                  className: \"delete\",\n                  \"data-id\": _id,\n                  onClick: this.handleDelete\n                })]\n              })]\n            }, _id || index);\n          }\n\n          return /*#__PURE__*/_jsxs(\"li\", {\n            \"data-id\": _id,\n            title: title,\n            children: [/*#__PURE__*/_jsx(Link, _objectSpread(_objectSpread({}, {\n              campaign,\n              slug,\n              type\n            }), {}, {\n              active: this.context.subdomain === subdomain && this.context.router.asPath === `/${type}/${slug}`,\n              onClick: this.props.onItemClick,\n              children: text\n            })), this.context.campaign.isEditor && /*#__PURE__*/_jsxs(\"div\", {\n              className: \"controls\",\n              children: [/*#__PURE__*/_jsx(EditIcon, {\n                className: \"edit\",\n                \"data-id\": _id,\n                onClick: this.handleEdit\n              }), /*#__PURE__*/_jsx(DeleteIcon, {\n                className: \"delete\",\n                \"data-id\": _id,\n                onClick: this.handleDelete\n              })]\n            })]\n          }, _id || index);\n        })\n      })]\n    }));\n\n    _defineProperty(this, \"filterLinks\", link => link.campaign.subdomain === this.context.campaign.subdomain);\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        campaign,\n        user = {}\n      } = this.context;\n      let {\n        favorites = [],\n        sheets = []\n      } = user;\n      if (!campaign || !campaign.navigation) return null;\n      const navigation = campaign.navigation.map(link => _objectSpread(_objectSpread({}, link), {}, {\n        campaign: pluck(campaign, '_id', 'subdomain', 'title')\n      }));\n      favorites = favorites.filter(this.filterLinks);\n      sheets = sheets.filter(this.filterLinks);\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsx(Scrollbars, {\n          className: \"scrollbars link-sections\",\n          autoHide: true,\n          universal: true,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"content\",\n            ref: this.props.wrapperRef,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"campaign-nav\",\n              ref: this.campaignNav,\n              children: this.renderList(navigation, campaign.title, 'article', /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(CampaignIcon, {}), /*#__PURE__*/_jsx(Link, {\n                  subdomain: campaign.subdomain,\n                  type: \"campaign\",\n                  children: campaign.title\n                })]\n              }))\n            }), user && /*#__PURE__*/_jsxs(_Fragment, {\n              children: [Boolean(favorites.length) && this.renderList(favorites, /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(FavoriteIcon, {}), \" Favorites\"]\n              })), Boolean(sheets.length) && this.renderList(sheets, /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(SheetIcon, {}), \" Sheets\"]\n              }), 'sheet')]\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"footer\",\n          children: [campaign.isEditor && /*#__PURE__*/_jsx(\"div\", {\n            className: \"buttons\",\n            children: /*#__PURE__*/_jsx(\"button\", {\n              className: \"add safe\",\n              onClick: this.handleAddLink,\n              children: \"Add Link\"\n            })\n          }), /*#__PURE__*/_jsx(Link, {\n            subdomain: \"www\",\n            slug: \"tos\",\n            type: \"article\",\n            children: \"Terms of Service\"\n          })]\n        })]\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.initializeSortable();\n  }\n\n  componentDidUpdate() {\n    this.initializeSortable();\n  }\n\n  get isCampaignEditor() {\n    return Boolean(this.context.campaign && this.context.campaign.isEditor);\n  }\n\n}\n\n_defineProperty(Navigation, \"contextType\", Application);\n\n_defineProperty(Navigation, \"defaultProps\", {\n  items: [],\n  onItemClick: noop,\n  wrapperRef: noop\n});","map":null,"metadata":{},"sourceType":"module"}
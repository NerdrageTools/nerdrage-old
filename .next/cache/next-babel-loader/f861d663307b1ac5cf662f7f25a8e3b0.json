{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Dialog from '~/components/Dialog/Dialog';\nimport { noop } from '~/utilities/noop';\nimport { slugify } from '~/utilities/slugs';\nimport './CreateLinkDialog.scss';\n\nconst getTemplates = async type => {\n  const response = await fetch(`/api/templates/${type.toLowerCase()}`);\n  if (response.status === 200) return response.json();\n  return [];\n};\n\nexport default function CreateLinkDialog({\n  defaultSlug = '',\n  defaultText = '',\n  onCancel = noop,\n  onOk = noop,\n  slugLabel = 'Slug',\n  templateType = null,\n  textLabel = 'Text',\n  title = 'Create Link'\n}) {\n  const {\n    0: text,\n    1: setText\n  } = useState(defaultText);\n  const {\n    0: slug,\n    1: setSlug\n  } = useState(defaultSlug);\n  const {\n    0: auto,\n    1: setAuto\n  } = useState(true);\n  const {\n    0: templates,\n    1: setTemplates\n  } = useState([]);\n  const {\n    0: templateSlug,\n    1: setTemplate\n  } = useState(undefined);\n  const slugInput = useRef(null);\n  const textInput = useRef(null);\n  const templateInput = useRef(null);\n  useEffect(() => {\n    if (templateType) getTemplates(templateType).then(setTemplates);\n  }, [templateType]);\n  useEffect(() => {\n    textInput.current.focus();\n    textInput.current.select();\n  }, [true]);\n\n  const handleKeyDown = ({\n    key\n  }) => {\n    switch (key) {\n      case 'Escape':\n        return onCancel();\n\n      case 'Enter':\n        return onOk({\n          slug,\n          templateSlug,\n          text\n        });\n\n      default:\n        return undefined;\n    }\n  };\n\n  const handleSlug = ({\n    target\n  }) => {\n    if (auto) setAuto(false);\n    setSlug(slugify(target.value));\n  };\n\n  const handleText = ({\n    target\n  }) => {\n    setText(target.value);\n    if (auto) setSlug(slugify(target.value));\n  };\n\n  const handleTemplate = ({\n    target\n  }) => setTemplate(target.value);\n\n  return /*#__PURE__*/_jsxs(Dialog, {\n    className: \"create-link\",\n    modal: true,\n    onCancel: onCancel,\n    onKeyDown: handleKeyDown,\n    onOk: () => onOk({\n      slug,\n      templateSlug,\n      text\n    }),\n    title: title,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: textLabel\n      }), /*#__PURE__*/_jsx(\"input\", {\n        value: text,\n        onChange: handleText,\n        ref: textInput,\n        type: \"text\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: slugLabel\n      }), /*#__PURE__*/_jsx(\"input\", {\n        value: slug,\n        onChange: handleSlug,\n        ref: slugInput,\n        type: \"text\"\n      })]\n    }), templateType && /*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"Template\"\n      }), /*#__PURE__*/_jsxs(\"select\", {\n        onChange: handleTemplate,\n        ref: templateInput,\n        value: templateSlug,\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"\",\n          children: \"None\"\n        }, \"none\"), templates.map(({\n          slug,\n          title\n        }) => /*#__PURE__*/_jsx(\"option\", {\n          value: slug,\n          children: title\n        }, slug))]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
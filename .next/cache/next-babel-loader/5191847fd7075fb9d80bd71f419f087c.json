{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport ColorPicker from '~/components/ColorPicker/ColorPicker';\nimport FontSearchBox from '~/components/SearchBox/FontSearchBox';\nimport { Application } from '~/contexts/Application';\nimport range from '~/utilities/range';\nimport './ThemeEditor.scss';\nexport default function ThemeEditor(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly;\n\n  var _useContext = useContext(Application),\n      _useContext$campaign = _useContext.campaign,\n      campaign = _useContext$campaign === void 0 ? {} : _useContext$campaign,\n      updateCampaign = _useContext.updateCampaign;\n\n  var _campaign$theme = campaign.theme,\n      theme = _campaign$theme === void 0 ? {} : _campaign$theme;\n\n  var onUpdateColor = function onUpdateColor(key) {\n    return function (color) {\n      updateCampaign({\n        theme: _objectSpread(_objectSpread({}, theme), {}, _defineProperty({}, key, color.hex))\n      });\n    };\n  };\n\n  var onUpdateFont = function onUpdateFont(key) {\n    return function (font) {\n      if (!font) {\n        return;\n      }\n\n      updateCampaign({\n        theme: _objectSpread(_objectSpread({}, theme), {}, _defineProperty({}, key, font.family))\n      });\n    };\n  };\n\n  var onUpdateFontSize = function onUpdateFontSize(_ref2) {\n    var target = _ref2.target;\n    updateCampaign({\n      theme: _objectSpread(_objectSpread({}, theme), {}, {\n        fontSize: target.value\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"theme-editor \".concat(className),\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"title\",\n      children: \"Theme\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper font-for-titles\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"Titles\"\n      }), readOnly ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"display\",\n        children: theme.fontForTitles\n      }) : /*#__PURE__*/_jsx(FontSearchBox, {\n        initialValue: theme.fontForTitles,\n        onSelect: onUpdateFont('fontForTitles')\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper font-for-text\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"Text\"\n      }), readOnly ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"display\",\n        children: theme.fontForText\n      }) : /*#__PURE__*/_jsx(FontSearchBox, {\n        initialValue: theme.fontForText,\n        onSelect: onUpdateFont('fontForText')\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"UI Color\"\n      }), /*#__PURE__*/_jsx(ColorPicker, {\n        className: \"primary\",\n        color: theme.primary,\n        onChange: onUpdateColor('primary'),\n        readOnly: readOnly,\n        text: \"BG\",\n        textColor: theme.primaryText\n      }), /*#__PURE__*/_jsx(ColorPicker, {\n        className: \"primaryText\",\n        color: theme.primaryText,\n        onChange: onUpdateColor('primaryText'),\n        readOnly: readOnly,\n        text: \"Text\",\n        textColor: theme.primary\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"Text Colors\"\n      }), /*#__PURE__*/_jsx(ColorPicker, {\n        className: \"background\",\n        color: theme.background,\n        onChange: onUpdateColor('background'),\n        readOnly: readOnly,\n        text: \"BG\",\n        textColor: theme.normalText\n      }), /*#__PURE__*/_jsx(ColorPicker, {\n        className: \"normalText\",\n        color: theme.normalText,\n        onChange: onUpdateColor('normalText'),\n        readOnly: readOnly,\n        text: \"Text\",\n        textColor: theme.background\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: \"Text Size\"\n      }), /*#__PURE__*/_jsx(\"select\", {\n        disabled: readOnly,\n        onChange: onUpdateFontSize,\n        value: theme.fontSize,\n        children: range(8, 18).map(function (pixels) {\n          return /*#__PURE__*/_jsxs(\"option\", {\n            value: \"\".concat(pixels, \"px\"),\n            children: [pixels, \"px\"]\n          }, pixels);\n        })\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
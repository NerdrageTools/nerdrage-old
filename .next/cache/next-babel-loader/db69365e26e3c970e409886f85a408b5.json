{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { noop } from '~/utilities/noop';\nimport './TabSet.scss';\nconst DEFAULT_TAB = {\n  id: 'blank',\n  onClick: noop,\n  renderContents: () => /*#__PURE__*/_jsx(\"div\", {}),\n  renderTab: () => /*#__PURE__*/_jsx(\"div\", {})\n};\nexport function TabSet({\n  activeTabId,\n  buttons,\n  onTabClicked = () => {},\n  showTabs = true,\n  tabs = []\n}) {\n  if (tabs.length === 0) tabs.push(DEFAULT_TAB);\n  const activeId = activeTabId || tabs[0].id;\n  const activeTab = tabs.find(tab => tab.id === activeId) || tabs[0];\n  const className = ['tab-set', !showTabs ? 'no-tabs' : ''].filter(Boolean).join(' ');\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    children: [showTabs && /*#__PURE__*/_jsxs(\"ul\", {\n      className: `tabs ${activeTabId}`,\n      children: [tabs.map(tab => {\n        // eslint-disable-next-line no-param-reassign\n        if (!tab.onClick) tab.onClick = () => onTabClicked(tab.id);\n        const liClassName = ['tab', tab.className, tab.id, activeTab.id === tab.id && 'is-active'].filter(Boolean).join(' ');\n        return /*#__PURE__*/_jsx(\"li\", {\n          className: liClassName,\n          onClick: tab.onClick,\n          children: tab.tab\n        }, tab.id);\n      }), /*#__PURE__*/_jsx(\"li\", {\n        className: \"buttons\",\n        children: buttons\n      })]\n    }), /*#__PURE__*/_jsx(Scrollbars, {\n      autoHide: true,\n      className: `scrollbars tab-contents ${activeTabId}`,\n      hideTracksWhenNotNeeded: true,\n      universal: true,\n      children: activeTab.contents\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Link } from '~/components/Link/Link';\nimport Remove from '~/icons/remove.svg';\nimport TagIcon from '~/icons/tag.svg';\nimport { noop } from '~/utilities/noop';\nimport './Tag.scss';\nexport default class Tag extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleRemove\", () => this.props.onRemove(this.props.tag));\n\n    _defineProperty(this, \"render\", () => {\n      const {\n        asLink,\n        className,\n        removable,\n        tag\n      } = this.props;\n      const classNames = ['tag', asLink ? 'is-link' : '', className, removable ? 'removable' : ''].filter(Boolean).join(' ');\n      return /*#__PURE__*/_jsxs(\"span\", {\n        className: classNames,\n        children: [/*#__PURE__*/_jsx(TagIcon, {\n          className: \"tag-icon\"\n        }), asLink ? /*#__PURE__*/_jsx(Link, {\n          type: \"article\",\n          slug: tag,\n          children: tag\n        }) : /*#__PURE__*/_jsx(\"span\", {\n          className: \"text\",\n          children: tag\n        }), removable && /*#__PURE__*/_jsx(Remove, {\n          className: \"remove\",\n          onClick: this.handleRemove\n        })]\n      });\n    });\n  }\n\n}\n\n_defineProperty(Tag, \"defaultProps\", {\n  asLink: false,\n  className: '',\n  onRemove: noop,\n  removable: false,\n  tag: ''\n});","map":null,"metadata":{},"sourceType":"module"}
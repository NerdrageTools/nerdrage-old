{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport NextLink from 'next/link';\nimport React, { useContext } from 'react';\nimport { Application } from '~/contexts/Application';\nexport var Link = function Link(_ref) {\n  var children = _ref.children,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$query = _ref.query,\n      query = _ref$query === void 0 ? null : _ref$query,\n      _ref$slug = _ref.slug,\n      slug = _ref$slug === void 0 ? '' : _ref$slug,\n      to = _ref.to,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'article' : _ref$type,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"query\", \"slug\", \"to\", \"type\"]);\n\n  var context = useContext(Application);\n  var subdomain = props.subdomain || context.subdomain;\n  var contents = children || type;\n  var active = context.router.asPath === \"/\".concat(type, \"/\").concat(slug);\n  var queryString = !query ? '' : \"\".concat(Object.entries(query).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    return \"\".concat(key, \"=\").concat(value);\n  }).join('&'));\n\n  if (active) {\n    var title = typeof contents === 'string' ? contents : undefined;\n    return /*#__PURE__*/_jsx(\"span\", {\n      className: \"active link\",\n      title: title,\n      children: contents\n    });\n  }\n\n  if (subdomain && (!context.campaign || subdomain !== context.campaign.subdomain)) {\n    var _href = \"//\".concat(subdomain, \".\").concat(context.rootUrl, \"/\").concat(type);\n\n    if (type !== 'campaign') _href += \"/\".concat(slug);\n    return /*#__PURE__*/_jsx(\"a\", _objectSpread(_objectSpread({}, _objectSpread(_objectSpread({}, props), {}, {\n      href: _href,\n      subdomain: subdomain\n    })), {}, {\n      children: contents\n    }));\n  }\n\n  var as = \"/\".concat(type);\n  var href = \"/\".concat(type);\n\n  if (to) {\n    as = to;\n    href = to;\n  } else if (type !== 'campaign') {\n    if (slug) {\n      as += \"/\".concat(slug);\n      href += \"?slug=\".concat(slug);\n    }\n\n    if (queryString) {\n      as += \"?\".concat(queryString);\n      href += \"&\".concat(queryString);\n    }\n  } else if (queryString) {\n    as += \"?\".concat(queryString);\n    href += \"?\".concat(queryString);\n  }\n\n  return /*#__PURE__*/_jsx(NextLink, _objectSpread(_objectSpread({}, {\n    as: as,\n    href: href\n  }), {}, {\n    children: /*#__PURE__*/_jsx(\"a\", _objectSpread(_objectSpread({}, _objectSpread(_objectSpread({}, props), {}, {\n      className: className,\n      href: as\n    })), {}, {\n      children: contents\n    }))\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}
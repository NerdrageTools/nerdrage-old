{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Link } from '~/components/Link/Link';\nimport { Toggle } from '~/components/Toggle/Toggle';\nimport PublicIcon from '~/icons/public.svg';\nimport SecretIcon from '~/icons/secret.svg';\nimport TemplateIcon from '~/icons/template.svg';\nimport './SheetList.scss';\n\nvar loadSheets = function loadSheets() {\n  return fetch('/api/sheet/list-by/campaign', {\n    credentials: 'include'\n  }).then(function (response) {\n    return response.json();\n  });\n};\n\nexport default function SheetList(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className;\n\n  var _useState = useState(false),\n      loaded = _useState[0],\n      setLoaded = _useState[1];\n\n  var _useState2 = useState(''),\n      filter = _useState2[0],\n      setFilter = _useState2[1];\n\n  var _useState3 = useState([]),\n      sheets = _useState3[0],\n      setSheets = _useState3[1];\n\n  useEffect(function () {\n    loadSheets().then(function (json) {\n      setSheets(json);\n      setLoaded(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"sheet-list \".concat(className),\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"title\",\n      children: \"Sheets\"\n    }), sheets.message ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"message\",\n      children: sheets.message\n    }) : /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        className: \"filter\",\n        onChange: function onChange(_ref2) {\n          var target = _ref2.target;\n          return setFilter(target.value);\n        },\n        placeholder: \"Filter...\",\n        type: \"text\",\n        value: filter\n      }), /*#__PURE__*/_jsx(Scrollbars, {\n        className: \"scrollable \".concat(loaded ? 'loaded' : 'loading'),\n        universal: true,\n        children: /*#__PURE__*/_jsx(\"table\", {\n          children: /*#__PURE__*/_jsx(\"tbody\", {\n            children: sheets.filter(function (s) {\n              return s.title.toLowerCase().match(filter.toLowerCase());\n            }).map(function (sheet) {\n              return /*#__PURE__*/_jsxs(\"tr\", {\n                children: [/*#__PURE__*/_jsx(\"td\", {\n                  className: \"link\",\n                  children: /*#__PURE__*/_jsx(Link, _objectSpread(_objectSpread({\n                    type: \"sheet\"\n                  }, sheet), {}, {\n                    children: sheet.title\n                  }))\n                }), /*#__PURE__*/_jsxs(\"td\", {\n                  className: \"properties\",\n                  children: [/*#__PURE__*/_jsx(Toggle, {\n                    onIcon: SecretIcon,\n                    offIcon: PublicIcon,\n                    value: sheet.secret\n                  }), /*#__PURE__*/_jsx(Toggle, {\n                    onIcon: TemplateIcon,\n                    offIcon: TemplateIcon,\n                    value: sheet.template\n                  })]\n                })]\n              }, sheet._id);\n            })\n          })\n        })\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
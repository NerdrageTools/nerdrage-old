{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { noop } from '~/utilities/noop';\n\nvar applyProps = function applyProps(_ref) {\n  var bodyClasses = _ref.bodyClasses,\n      css = _ref.css,\n      document = _ref.document;\n\n  if (!document || !document.body || !document.head) {\n    return noop;\n  }\n\n  var bodyTag = document.body;\n  var classNames = bodyClasses.filter(Boolean);\n  classNames.forEach(function (cn) {\n    return bodyTag.classList.add(cn);\n  });\n  var headTag = document.head;\n  var styleTag = headTag.querySelector('style#injected');\n\n  if (!styleTag) {\n    styleTag = document.createElement('style');\n    styleTag.id = 'injected';\n    headTag.appendChild(styleTag);\n  }\n\n  styleTag.innerHTML = css;\n  return function () {\n    return classNames.forEach(function (cn) {\n      return bodyTag.classList.remove(cn);\n    });\n  };\n};\n\nexport default function IFrame(_ref2) {\n  var _ref2$bodyClasses = _ref2.bodyClasses,\n      bodyClasses = _ref2$bodyClasses === void 0 ? [] : _ref2$bodyClasses,\n      _ref2$className = _ref2.className,\n      className = _ref2$className === void 0 ? '' : _ref2$className,\n      _ref2$css = _ref2.css,\n      css = _ref2$css === void 0 ? '' : _ref2$css,\n      _ref2$onLoad = _ref2.onLoad,\n      onLoad = _ref2$onLoad === void 0 ? noop : _ref2$onLoad,\n      _ref2$onReady = _ref2.onReady,\n      onReady = _ref2$onReady === void 0 ? noop : _ref2$onReady,\n      _ref2$onUnload = _ref2.onUnload,\n      onUnload = _ref2$onUnload === void 0 ? noop : _ref2$onUnload,\n      _ref2$queryString = _ref2.queryString,\n      queryString = _ref2$queryString === void 0 ? {} : _ref2$queryString,\n      _ref2$src = _ref2.src,\n      src = _ref2$src === void 0 ? '' : _ref2$src,\n      _ref2$title = _ref2.title,\n      title = _ref2$title === void 0 ? 'IFrame' : _ref2$title;\n  var frameEl = useRef();\n  var handleOnReady = useMemo(function () {\n    return function (_ref3) {\n      var document = _ref3.document,\n          window = _ref3.window;\n      applyProps({\n        bodyClasses: bodyClasses,\n        css: css,\n        document: document\n      });\n      onReady({\n        document: document,\n        window: window\n      });\n    };\n  }, [bodyClasses, css, onReady]);\n  var handleOnLoad = useEffect(function _handleOnLoad() {\n    var document = frameEl.current.contentDocument; // eslint-disable-line no-shadow\n\n    var window = frameEl.current.contentWindow;\n    onLoad({\n      document: document,\n      window: window\n    });\n\n    if (window.location.href === 'about:blank') {\n      setTimeout(_handleOnLoad, 50);\n    } else if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', function () {\n        handleOnReady({\n          document: document,\n          window: window\n        });\n      });\n    } else {\n      handleOnReady({\n        document: document,\n        window: window\n      });\n    }\n\n    return function () {\n      return onUnload({\n        document: document,\n        window: window\n      });\n    };\n  }, [onReady, onUnload]);\n  var url = useMemo(function () {\n    var params = Object.entries(queryString).filter(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          value = _ref5[1];\n\n      return value !== undefined;\n    }).reduce(function (object, _ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          key = _ref7[0],\n          value = _ref7[1];\n\n      return _objectSpread(_objectSpread({}, object), {}, _defineProperty({}, key, value));\n    }, {});\n    var qs = new URLSearchParams(params).toString();\n    return src.match(/[?]/) ? \"\".concat(src, \"&\").concat(qs) : \"\".concat(src, \"?\").concat(qs);\n  }, [src, queryString]);\n  return /*#__PURE__*/_jsx(\"iframe\", _objectSpread({\n    onLoad: handleOnLoad,\n    ref: frameEl,\n    src: url\n  }, {\n    className: className,\n    title: title\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}